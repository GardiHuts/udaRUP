/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 83);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// MarionetteJS (Backbone.Marionette)
// ----------------------------------
// v2.4.7
//
// Copyright (c)2016 Derick Bailey, Muted Solutions, LLC.
// Distributed under MIT license
//
// http://marionettejs.com


/*!
 * Includes BabySitter
 * https://github.com/marionettejs/backbone.babysitter/
 *
 * Includes Wreqr
 * https://github.com/marionettejs/backbone.wreqr/
 */


(function(root, factory) {

  /* istanbul ignore next */
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(103), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Backbone, _) {
      return (root.Marionette = root.Mn = factory(root, Backbone, _));
    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if (typeof exports !== 'undefined') {
    var Backbone = require('backbone');
    var _ = require('underscore');
    module.exports = factory(root, Backbone, _);
  } else {
    root.Marionette = root.Mn = factory(root, root.Backbone, root._);
  }

}(this, function(root, Backbone, _) {
  'use strict';

  /* istanbul ignore next */
  // Backbone.BabySitter
  // -------------------
  // v0.1.11
  //
  // Copyright (c)2016 Derick Bailey, Muted Solutions, LLC.
  // Distributed under MIT license
  //
  // http://github.com/marionettejs/backbone.babysitter
  (function(Backbone, _) {
    "use strict";
    var previousChildViewContainer = Backbone.ChildViewContainer;
    // BabySitter.ChildViewContainer
    // -----------------------------
    //
    // Provide a container to store, retrieve and
    // shut down child views.
    Backbone.ChildViewContainer = function(Backbone, _) {
      // Container Constructor
      // ---------------------
      var Container = function(views) {
        this._views = {};
        this._indexByModel = {};
        this._indexByCustom = {};
        this._updateLength();
        _.each(views, this.add, this);
      };
      // Container Methods
      // -----------------
      _.extend(Container.prototype, {
        // Add a view to this container. Stores the view
        // by `cid` and makes it searchable by the model
        // cid (and model itself). Optionally specify
        // a custom key to store an retrieve the view.
        add: function(view, customIndex) {
          var viewCid = view.cid;
          // store the view
          this._views[viewCid] = view;
          // index it by model
          if (view.model) {
            this._indexByModel[view.model.cid] = viewCid;
          }
          // index by custom
          if (customIndex) {
            this._indexByCustom[customIndex] = viewCid;
          }
          this._updateLength();
          return this;
        },
        // Find a view by the model that was attached to
        // it. Uses the model's `cid` to find it.
        findByModel: function(model) {
          return this.findByModelCid(model.cid);
        },
        // Find a view by the `cid` of the model that was attached to
        // it. Uses the model's `cid` to find the view `cid` and
        // retrieve the view using it.
        findByModelCid: function(modelCid) {
          var viewCid = this._indexByModel[modelCid];
          return this.findByCid(viewCid);
        },
        // Find a view by a custom indexer.
        findByCustom: function(index) {
          var viewCid = this._indexByCustom[index];
          return this.findByCid(viewCid);
        },
        // Find by index. This is not guaranteed to be a
        // stable index.
        findByIndex: function(index) {
          return _.values(this._views)[index];
        },
        // retrieve a view by its `cid` directly
        findByCid: function(cid) {
          return this._views[cid];
        },
        // Remove a view
        remove: function(view) {
          var viewCid = view.cid;
          // delete model index
          if (view.model) {
            delete this._indexByModel[view.model.cid];
          }
          // delete custom index
          _.any(this._indexByCustom, function(cid, key) {
            if (cid === viewCid) {
              delete this._indexByCustom[key];
              return true;
            }
          }, this);
          // remove the view from the container
          delete this._views[viewCid];
          // update the length
          this._updateLength();
          return this;
        },
        // Call a method on every view in the container,
        // passing parameters to the call method one at a
        // time, like `function.call`.
        call: function(method) {
          this.apply(method, _.tail(arguments));
        },
        // Apply a method on every view in the container,
        // passing parameters to the call method one at a
        // time, like `function.apply`.
        apply: function(method, args) {
          _.each(this._views, function(view) {
            if (_.isFunction(view[method])) {
              view[method].apply(view, args || []);
            }
          });
        },
        // Update the `.length` attribute on this container
        _updateLength: function() {
          this.length = _.size(this._views);
        }
      });
      // Borrowing this code from Backbone.Collection:
      // http://backbonejs.org/docs/backbone.html#section-106
      //
      // Mix in methods from Underscore, for iteration, and other
      // collection related features.
      var methods = [ "forEach", "each", "map", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "toArray", "first", "initial", "rest", "last", "without", "isEmpty", "pluck", "reduce" ];
      _.each(methods, function(method) {
        Container.prototype[method] = function() {
          var views = _.values(this._views);
          var args = [ views ].concat(_.toArray(arguments));
          return _[method].apply(_, args);
        };
      });
      // return the public API
      return Container;
    }(Backbone, _);
    Backbone.ChildViewContainer.VERSION = "0.1.11";
    Backbone.ChildViewContainer.noConflict = function() {
      Backbone.ChildViewContainer = previousChildViewContainer;
      return this;
    };
    return Backbone.ChildViewContainer;
  })(Backbone, _);

  /* istanbul ignore next */
  // Backbone.Wreqr (Backbone.Marionette)
  // ----------------------------------
  // v1.3.6
  //
  // Copyright (c)2016 Derick Bailey, Muted Solutions, LLC.
  // Distributed under MIT license
  //
  // http://github.com/marionettejs/backbone.wreqr
  (function(Backbone, _) {
    "use strict";
    var previousWreqr = Backbone.Wreqr;
    var Wreqr = Backbone.Wreqr = {};
    Backbone.Wreqr.VERSION = "1.3.6";
    Backbone.Wreqr.noConflict = function() {
      Backbone.Wreqr = previousWreqr;
      return this;
    };
    // Handlers
    // --------
    // A registry of functions to call, given a name
    Wreqr.Handlers = function(Backbone, _) {
      "use strict";
      // Constructor
      // -----------
      var Handlers = function(options) {
        this.options = options;
        this._wreqrHandlers = {};
        if (_.isFunction(this.initialize)) {
          this.initialize(options);
        }
      };
      Handlers.extend = Backbone.Model.extend;
      // Instance Members
      // ----------------
      _.extend(Handlers.prototype, Backbone.Events, {
        // Add multiple handlers using an object literal configuration
        setHandlers: function(handlers) {
          _.each(handlers, function(handler, name) {
            var context = null;
            if (_.isObject(handler) && !_.isFunction(handler)) {
              context = handler.context;
              handler = handler.callback;
            }
            this.setHandler(name, handler, context);
          }, this);
        },
        // Add a handler for the given name, with an
        // optional context to run the handler within
        setHandler: function(name, handler, context) {
          var config = {
            callback: handler,
            context: context
          };
          this._wreqrHandlers[name] = config;
          this.trigger("handler:add", name, handler, context);
        },
        // Determine whether or not a handler is registered
        hasHandler: function(name) {
          return !!this._wreqrHandlers[name];
        },
        // Get the currently registered handler for
        // the specified name. Throws an exception if
        // no handler is found.
        getHandler: function(name) {
          var config = this._wreqrHandlers[name];
          if (!config) {
            return;
          }
          return function() {
            return config.callback.apply(config.context, arguments);
          };
        },
        // Remove a handler for the specified name
        removeHandler: function(name) {
          delete this._wreqrHandlers[name];
        },
        // Remove all handlers from this registry
        removeAllHandlers: function() {
          this._wreqrHandlers = {};
        }
      });
      return Handlers;
    }(Backbone, _);
    // Wreqr.CommandStorage
    // --------------------
    //
    // Store and retrieve commands for execution.
    Wreqr.CommandStorage = function() {
      "use strict";
      // Constructor function
      var CommandStorage = function(options) {
        this.options = options;
        this._commands = {};
        if (_.isFunction(this.initialize)) {
          this.initialize(options);
        }
      };
      // Instance methods
      _.extend(CommandStorage.prototype, Backbone.Events, {
        // Get an object literal by command name, that contains
        // the `commandName` and the `instances` of all commands
        // represented as an array of arguments to process
        getCommands: function(commandName) {
          var commands = this._commands[commandName];
          // we don't have it, so add it
          if (!commands) {
            // build the configuration
            commands = {
              command: commandName,
              instances: []
            };
            // store it
            this._commands[commandName] = commands;
          }
          return commands;
        },
        // Add a command by name, to the storage and store the
        // args for the command
        addCommand: function(commandName, args) {
          var command = this.getCommands(commandName);
          command.instances.push(args);
        },
        // Clear all commands for the given `commandName`
        clearCommands: function(commandName) {
          var command = this.getCommands(commandName);
          command.instances = [];
        }
      });
      return CommandStorage;
    }();
    // Wreqr.Commands
    // --------------
    //
    // A simple command pattern implementation. Register a command
    // handler and execute it.
    Wreqr.Commands = function(Wreqr, _) {
      "use strict";
      return Wreqr.Handlers.extend({
        // default storage type
        storageType: Wreqr.CommandStorage,
        constructor: function(options) {
          this.options = options || {};
          this._initializeStorage(this.options);
          this.on("handler:add", this._executeCommands, this);
          Wreqr.Handlers.prototype.constructor.apply(this, arguments);
        },
        // Execute a named command with the supplied args
        execute: function(name) {
          name = arguments[0];
          var args = _.rest(arguments);
          if (this.hasHandler(name)) {
            this.getHandler(name).apply(this, args);
          } else {
            this.storage.addCommand(name, args);
          }
        },
        // Internal method to handle bulk execution of stored commands
        _executeCommands: function(name, handler, context) {
          var command = this.storage.getCommands(name);
          // loop through and execute all the stored command instances
          _.each(command.instances, function(args) {
            handler.apply(context, args);
          });
          this.storage.clearCommands(name);
        },
        // Internal method to initialize storage either from the type's
        // `storageType` or the instance `options.storageType`.
        _initializeStorage: function(options) {
          var storage;
          var StorageType = options.storageType || this.storageType;
          if (_.isFunction(StorageType)) {
            storage = new StorageType();
          } else {
            storage = StorageType;
          }
          this.storage = storage;
        }
      });
    }(Wreqr, _);
    // Wreqr.RequestResponse
    // ---------------------
    //
    // A simple request/response implementation. Register a
    // request handler, and return a response from it
    Wreqr.RequestResponse = function(Wreqr, _) {
      "use strict";
      return Wreqr.Handlers.extend({
        request: function(name) {
          if (this.hasHandler(name)) {
            return this.getHandler(name).apply(this, _.rest(arguments));
          }
        }
      });
    }(Wreqr, _);
    // Event Aggregator
    // ----------------
    // A pub-sub object that can be used to decouple various parts
    // of an application through event-driven architecture.
    Wreqr.EventAggregator = function(Backbone, _) {
      "use strict";
      var EA = function() {};
      // Copy the `extend` function used by Backbone's classes
      EA.extend = Backbone.Model.extend;
      // Copy the basic Backbone.Events on to the event aggregator
      _.extend(EA.prototype, Backbone.Events);
      return EA;
    }(Backbone, _);
    // Wreqr.Channel
    // --------------
    //
    // An object that wraps the three messaging systems:
    // EventAggregator, RequestResponse, Commands
    Wreqr.Channel = function(Wreqr) {
      "use strict";
      var Channel = function(channelName) {
        this.vent = new Backbone.Wreqr.EventAggregator();
        this.reqres = new Backbone.Wreqr.RequestResponse();
        this.commands = new Backbone.Wreqr.Commands();
        this.channelName = channelName;
      };
      _.extend(Channel.prototype, {
        // Remove all handlers from the messaging systems of this channel
        reset: function() {
          this.vent.off();
          this.vent.stopListening();
          this.reqres.removeAllHandlers();
          this.commands.removeAllHandlers();
          return this;
        },
        // Connect a hash of events; one for each messaging system
        connectEvents: function(hash, context) {
          this._connect("vent", hash, context);
          return this;
        },
        connectCommands: function(hash, context) {
          this._connect("commands", hash, context);
          return this;
        },
        connectRequests: function(hash, context) {
          this._connect("reqres", hash, context);
          return this;
        },
        // Attach the handlers to a given message system `type`
        _connect: function(type, hash, context) {
          if (!hash) {
            return;
          }
          context = context || this;
          var method = type === "vent" ? "on" : "setHandler";
          _.each(hash, function(fn, eventName) {
            this[type][method](eventName, _.bind(fn, context));
          }, this);
        }
      });
      return Channel;
    }(Wreqr);
    // Wreqr.Radio
    // --------------
    //
    // An object that lets you communicate with many channels.
    Wreqr.radio = function(Wreqr, _) {
      "use strict";
      var Radio = function() {
        this._channels = {};
        this.vent = {};
        this.commands = {};
        this.reqres = {};
        this._proxyMethods();
      };
      _.extend(Radio.prototype, {
        channel: function(channelName) {
          if (!channelName) {
            throw new Error("Channel must receive a name");
          }
          return this._getChannel(channelName);
        },
        _getChannel: function(channelName) {
          var channel = this._channels[channelName];
          if (!channel) {
            channel = new Wreqr.Channel(channelName);
            this._channels[channelName] = channel;
          }
          return channel;
        },
        _proxyMethods: function() {
          _.each([ "vent", "commands", "reqres" ], function(system) {
            _.each(messageSystems[system], function(method) {
              this[system][method] = proxyMethod(this, system, method);
            }, this);
          }, this);
        }
      });
      var messageSystems = {
        vent: [ "on", "off", "trigger", "once", "stopListening", "listenTo", "listenToOnce" ],
        commands: [ "execute", "setHandler", "setHandlers", "removeHandler", "removeAllHandlers" ],
        reqres: [ "request", "setHandler", "setHandlers", "removeHandler", "removeAllHandlers" ]
      };
      var proxyMethod = function(radio, system, method) {
        return function(channelName) {
          var messageSystem = radio._getChannel(channelName)[system];
          return messageSystem[method].apply(messageSystem, _.rest(arguments));
        };
      };
      return new Radio();
    }(Wreqr, _);
    return Backbone.Wreqr;
  })(Backbone, _);

  var previousMarionette = root.Marionette;
  var previousMn = root.Mn;

  var Marionette = Backbone.Marionette = {};

  Marionette.VERSION = '2.4.7';

  Marionette.noConflict = function() {
    root.Marionette = previousMarionette;
    root.Mn = previousMn;
    return this;
  };

  Backbone.Marionette = Marionette;

  // Get the Deferred creator for later use
  Marionette.Deferred = Backbone.$.Deferred;

  /* jshint unused: false *//* global console */
  
  // Helpers
  // -------
  
  // Marionette.extend
  // -----------------
  
  // Borrow the Backbone `extend` method so we can use it as needed
  Marionette.extend = Backbone.Model.extend;
  
  // Marionette.isNodeAttached
  // -------------------------
  
  // Determine if `el` is a child of the document
  Marionette.isNodeAttached = function(el) {
    return Backbone.$.contains(document.documentElement, el);
  };
  
  // Merge `keys` from `options` onto `this`
  Marionette.mergeOptions = function(options, keys) {
    if (!options) { return; }
    _.extend(this, _.pick(options, keys));
  };
  
  // Marionette.getOption
  // --------------------
  
  // Retrieve an object, function or other value from a target
  // object or its `options`, with `options` taking precedence.
  Marionette.getOption = function(target, optionName) {
    if (!target || !optionName) { return; }
    if (target.options && (target.options[optionName] !== undefined)) {
      return target.options[optionName];
    } else {
      return target[optionName];
    }
  };
  
  // Proxy `Marionette.getOption`
  Marionette.proxyGetOption = function(optionName) {
    return Marionette.getOption(this, optionName);
  };
  
  // Similar to `_.result`, this is a simple helper
  // If a function is provided we call it with context
  // otherwise just return the value. If the value is
  // undefined return a default value
  Marionette._getValue = function(value, context, params) {
    if (_.isFunction(value)) {
      value = params ? value.apply(context, params) : value.call(context);
    }
    return value;
  };
  
  // Marionette.normalizeMethods
  // ----------------------
  
  // Pass in a mapping of events => functions or function names
  // and return a mapping of events => functions
  Marionette.normalizeMethods = function(hash) {
    return _.reduce(hash, function(normalizedHash, method, name) {
      if (!_.isFunction(method)) {
        method = this[method];
      }
      if (method) {
        normalizedHash[name] = method;
      }
      return normalizedHash;
    }, {}, this);
  };
  
  // utility method for parsing @ui. syntax strings
  // into associated selector
  Marionette.normalizeUIString = function(uiString, ui) {
    return uiString.replace(/@ui\.[a-zA-Z-_$0-9]*/g, function(r) {
      return ui[r.slice(4)];
    });
  };
  
  // allows for the use of the @ui. syntax within
  // a given key for triggers and events
  // swaps the @ui with the associated selector.
  // Returns a new, non-mutated, parsed events hash.
  Marionette.normalizeUIKeys = function(hash, ui) {
    return _.reduce(hash, function(memo, val, key) {
      var normalizedKey = Marionette.normalizeUIString(key, ui);
      memo[normalizedKey] = val;
      return memo;
    }, {});
  };
  
  // allows for the use of the @ui. syntax within
  // a given value for regions
  // swaps the @ui with the associated selector
  Marionette.normalizeUIValues = function(hash, ui, properties) {
    _.each(hash, function(val, key) {
      if (_.isString(val)) {
        hash[key] = Marionette.normalizeUIString(val, ui);
      } else if (_.isObject(val) && _.isArray(properties)) {
        _.extend(val, Marionette.normalizeUIValues(_.pick(val, properties), ui));
        /* Value is an object, and we got an array of embedded property names to normalize. */
        _.each(properties, function(property) {
          var propertyVal = val[property];
          if (_.isString(propertyVal)) {
            val[property] = Marionette.normalizeUIString(propertyVal, ui);
          }
        });
      }
    });
    return hash;
  };
  
  // Mix in methods from Underscore, for iteration, and other
  // collection related features.
  // Borrowing this code from Backbone.Collection:
  // http://backbonejs.org/docs/backbone.html#section-121
  Marionette.actAsCollection = function(object, listProperty) {
    var methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',
      'select', 'reject', 'every', 'all', 'some', 'any', 'include',
      'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',
      'last', 'without', 'isEmpty', 'pluck'];
  
    _.each(methods, function(method) {
      object[method] = function() {
        var list = _.values(_.result(this, listProperty));
        var args = [list].concat(_.toArray(arguments));
        return _[method].apply(_, args);
      };
    });
  };
  
  var deprecate = Marionette.deprecate = function(message, test) {
    if (_.isObject(message)) {
      message = (
        message.prev + ' is going to be removed in the future. ' +
        'Please use ' + message.next + ' instead.' +
        (message.url ? ' See: ' + message.url : '')
      );
    }
  
    if ((test === undefined || !test) && !deprecate._cache[message]) {
      deprecate._warn('Deprecation warning: ' + message);
      deprecate._cache[message] = true;
    }
  };
  
  deprecate._console = typeof console !== 'undefined' ? console : {};
  deprecate._warn = function() {
    var warn = deprecate._console.warn || deprecate._console.log || function() {};
    return warn.apply(deprecate._console, arguments);
  };
  deprecate._cache = {};
  
  /* jshint maxstatements: 14, maxcomplexity: 7 */
  
  // Trigger Method
  // --------------
  
  Marionette._triggerMethod = (function() {
    // split the event name on the ":"
    var splitter = /(^|:)(\w)/gi;
  
    // take the event section ("section1:section2:section3")
    // and turn it in to uppercase name
    function getEventName(match, prefix, eventName) {
      return eventName.toUpperCase();
    }
  
    return function(context, event, args) {
      var noEventArg = arguments.length < 3;
      if (noEventArg) {
        args = event;
        event = args[0];
      }
  
      // get the method name from the event name
      var methodName = 'on' + event.replace(splitter, getEventName);
      var method = context[methodName];
      var result;
  
      // call the onMethodName if it exists
      if (_.isFunction(method)) {
        // pass all args, except the event name
        result = method.apply(context, noEventArg ? _.rest(args) : args);
      }
  
      // trigger the event, if a trigger method exists
      if (_.isFunction(context.trigger)) {
        if (noEventArg + args.length > 1) {
          context.trigger.apply(context, noEventArg ? args : [event].concat(_.drop(args, 0)));
        } else {
          context.trigger(event);
        }
      }
  
      return result;
    };
  })();
  
  // Trigger an event and/or a corresponding method name. Examples:
  //
  // `this.triggerMethod("foo")` will trigger the "foo" event and
  // call the "onFoo" method.
  //
  // `this.triggerMethod("foo:bar")` will trigger the "foo:bar" event and
  // call the "onFooBar" method.
  Marionette.triggerMethod = function(event) {
    return Marionette._triggerMethod(this, arguments);
  };
  
  // triggerMethodOn invokes triggerMethod on a specific context
  //
  // e.g. `Marionette.triggerMethodOn(view, 'show')`
  // will trigger a "show" event or invoke onShow the view.
  Marionette.triggerMethodOn = function(context) {
    var fnc = _.isFunction(context.triggerMethod) ?
                  context.triggerMethod :
                  Marionette.triggerMethod;
  
    return fnc.apply(context, _.rest(arguments));
  };
  
  // DOM Refresh
  // -----------
  
  // Monitor a view's state, and after it has been rendered and shown
  // in the DOM, trigger a "dom:refresh" event every time it is
  // re-rendered.
  
  Marionette.MonitorDOMRefresh = function(view) {
    if (view._isDomRefreshMonitored) { return; }
    view._isDomRefreshMonitored = true;
  
    // track when the view has been shown in the DOM,
    // using a Marionette.Region (or by other means of triggering "show")
    function handleShow() {
      view._isShown = true;
      triggerDOMRefresh();
    }
  
    // track when the view has been rendered
    function handleRender() {
      view._isRendered = true;
      triggerDOMRefresh();
    }
  
    // Trigger the "dom:refresh" event and corresponding "onDomRefresh" method
    function triggerDOMRefresh() {
      if (view._isShown && view._isRendered && Marionette.isNodeAttached(view.el)) {
        Marionette.triggerMethodOn(view, 'dom:refresh', view);
      }
    }
  
    view.on({
      show: handleShow,
      render: handleRender
    });
  };
  
  /* jshint maxparams: 5 */
  
  // Bind Entity Events & Unbind Entity Events
  // -----------------------------------------
  //
  // These methods are used to bind/unbind a backbone "entity" (e.g. collection/model)
  // to methods on a target object.
  //
  // The first parameter, `target`, must have the Backbone.Events module mixed in.
  //
  // The second parameter is the `entity` (Backbone.Model, Backbone.Collection or
  // any object that has Backbone.Events mixed in) to bind the events from.
  //
  // The third parameter is a hash of { "event:name": "eventHandler" }
  // configuration. Multiple handlers can be separated by a space. A
  // function can be supplied instead of a string handler name.
  
  (function(Marionette) {
    'use strict';
  
    // Bind the event to handlers specified as a string of
    // handler names on the target object
    function bindFromStrings(target, entity, evt, methods) {
      var methodNames = methods.split(/\s+/);
  
      _.each(methodNames, function(methodName) {
  
        var method = target[methodName];
        if (!method) {
          throw new Marionette.Error('Method "' + methodName +
            '" was configured as an event handler, but does not exist.');
        }
  
        target.listenTo(entity, evt, method);
      });
    }
  
    // Bind the event to a supplied callback function
    function bindToFunction(target, entity, evt, method) {
      target.listenTo(entity, evt, method);
    }
  
    // Bind the event to handlers specified as a string of
    // handler names on the target object
    function unbindFromStrings(target, entity, evt, methods) {
      var methodNames = methods.split(/\s+/);
  
      _.each(methodNames, function(methodName) {
        var method = target[methodName];
        target.stopListening(entity, evt, method);
      });
    }
  
    // Bind the event to a supplied callback function
    function unbindToFunction(target, entity, evt, method) {
      target.stopListening(entity, evt, method);
    }
  
    // generic looping function
    function iterateEvents(target, entity, bindings, functionCallback, stringCallback) {
      if (!entity || !bindings) { return; }
  
      // type-check bindings
      if (!_.isObject(bindings)) {
        throw new Marionette.Error({
          message: 'Bindings must be an object or function.',
          url: 'marionette.functions.html#marionettebindentityevents'
        });
      }
  
      // allow the bindings to be a function
      bindings = Marionette._getValue(bindings, target);
  
      // iterate the bindings and bind them
      _.each(bindings, function(methods, evt) {
  
        // allow for a function as the handler,
        // or a list of event names as a string
        if (_.isFunction(methods)) {
          functionCallback(target, entity, evt, methods);
        } else {
          stringCallback(target, entity, evt, methods);
        }
  
      });
    }
  
    // Export Public API
    Marionette.bindEntityEvents = function(target, entity, bindings) {
      iterateEvents(target, entity, bindings, bindToFunction, bindFromStrings);
    };
  
    Marionette.unbindEntityEvents = function(target, entity, bindings) {
      iterateEvents(target, entity, bindings, unbindToFunction, unbindFromStrings);
    };
  
    // Proxy `bindEntityEvents`
    Marionette.proxyBindEntityEvents = function(entity, bindings) {
      return Marionette.bindEntityEvents(this, entity, bindings);
    };
  
    // Proxy `unbindEntityEvents`
    Marionette.proxyUnbindEntityEvents = function(entity, bindings) {
      return Marionette.unbindEntityEvents(this, entity, bindings);
    };
  })(Marionette);
  

  // Error
  // -----
  
  var errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];
  
  Marionette.Error = Marionette.extend.call(Error, {
    urlRoot: 'http://marionettejs.com/docs/v' + Marionette.VERSION + '/',
  
    constructor: function(message, options) {
      if (_.isObject(message)) {
        options = message;
        message = options.message;
      } else if (!options) {
        options = {};
      }
  
      var error = Error.call(this, message);
      _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));
  
      this.captureStackTrace();
  
      if (options.url) {
        this.url = this.urlRoot + options.url;
      }
    },
  
    captureStackTrace: function() {
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, Marionette.Error);
      }
    },
  
    toString: function() {
      return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');
    }
  });
  
  Marionette.Error.extend = Marionette.extend;
  
  // Callbacks
  // ---------
  
  // A simple way of managing a collection of callbacks
  // and executing them at a later point in time, using jQuery's
  // `Deferred` object.
  Marionette.Callbacks = function() {
    this._deferred = Marionette.Deferred();
    this._callbacks = [];
  };
  
  _.extend(Marionette.Callbacks.prototype, {
  
    // Add a callback to be executed. Callbacks added here are
    // guaranteed to execute, even if they are added after the
    // `run` method is called.
    add: function(callback, contextOverride) {
      var promise = _.result(this._deferred, 'promise');
  
      this._callbacks.push({cb: callback, ctx: contextOverride});
  
      promise.then(function(args) {
        if (contextOverride) { args.context = contextOverride; }
        callback.call(args.context, args.options);
      });
    },
  
    // Run all registered callbacks with the context specified.
    // Additional callbacks can be added after this has been run
    // and they will still be executed.
    run: function(options, context) {
      this._deferred.resolve({
        options: options,
        context: context
      });
    },
  
    // Resets the list of callbacks to be run, allowing the same list
    // to be run multiple times - whenever the `run` method is called.
    reset: function() {
      var callbacks = this._callbacks;
      this._deferred = Marionette.Deferred();
      this._callbacks = [];
  
      _.each(callbacks, function(cb) {
        this.add(cb.cb, cb.ctx);
      }, this);
    }
  });
  
  // Controller
  // ----------
  
  // A multi-purpose object to use as a controller for
  // modules and routers, and as a mediator for workflow
  // and coordination of other objects, views, and more.
  Marionette.Controller = function(options) {
    this.options = options || {};
  
    if (_.isFunction(this.initialize)) {
      this.initialize(this.options);
    }
  };
  
  Marionette.Controller.extend = Marionette.extend;
  
  // Controller Methods
  // --------------
  
  // Ensure it can trigger events with Backbone.Events
  _.extend(Marionette.Controller.prototype, Backbone.Events, {
    destroy: function() {
      Marionette._triggerMethod(this, 'before:destroy', arguments);
      Marionette._triggerMethod(this, 'destroy', arguments);
  
      this.stopListening();
      this.off();
      return this;
    },
  
    // import the `triggerMethod` to trigger events with corresponding
    // methods if the method exists
    triggerMethod: Marionette.triggerMethod,
  
    // A handy way to merge options onto the instance
    mergeOptions: Marionette.mergeOptions,
  
    // Proxy `getOption` to enable getting options from this or this.options by name.
    getOption: Marionette.proxyGetOption
  
  });
  
  // Object
  // ------
  
  // A Base Class that other Classes should descend from.
  // Object borrows many conventions and utilities from Backbone.
  Marionette.Object = function(options) {
    this.options = _.extend({}, _.result(this, 'options'), options);
  
    this.initialize.apply(this, arguments);
  };
  
  Marionette.Object.extend = Marionette.extend;
  
  // Object Methods
  // --------------
  
  // Ensure it can trigger events with Backbone.Events
  _.extend(Marionette.Object.prototype, Backbone.Events, {
  
    //this is a noop method intended to be overridden by classes that extend from this base
    initialize: function() {},
  
    destroy: function(options) {
      options = options || {};
  
      this.triggerMethod('before:destroy', options);
      this.triggerMethod('destroy', options);
      this.stopListening();
  
      return this;
    },
  
    // Import the `triggerMethod` to trigger events with corresponding
    // methods if the method exists
    triggerMethod: Marionette.triggerMethod,
  
    // A handy way to merge options onto the instance
    mergeOptions: Marionette.mergeOptions,
  
    // Proxy `getOption` to enable getting options from this or this.options by name.
    getOption: Marionette.proxyGetOption,
  
    // Proxy `bindEntityEvents` to enable binding view's events from another entity.
    bindEntityEvents: Marionette.proxyBindEntityEvents,
  
    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.
    unbindEntityEvents: Marionette.proxyUnbindEntityEvents
  });
  
  /* jshint maxcomplexity: 16, maxstatements: 45, maxlen: 120 */
  
  // Region
  // ------
  
  // Manage the visual regions of your composite application. See
  // http://lostechies.com/derickbailey/2011/12/12/composite-js-apps-regions-and-region-managers/
  
  Marionette.Region = Marionette.Object.extend({
    constructor: function(options) {
  
      // set options temporarily so that we can get `el`.
      // options will be overriden by Object.constructor
      this.options = options || {};
      this.el = this.getOption('el');
  
      // Handle when this.el is passed in as a $ wrapped element.
      this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;
  
      if (!this.el) {
        throw new Marionette.Error({
          name: 'NoElError',
          message: 'An "el" must be specified for a region.'
        });
      }
  
      this.$el = this.getEl(this.el);
      Marionette.Object.call(this, options);
    },
  
    // Displays a backbone view instance inside of the region.
    // Handles calling the `render` method for you. Reads content
    // directly from the `el` attribute. Also calls an optional
    // `onShow` and `onDestroy` method on your view, just after showing
    // or just before destroying the view, respectively.
    // The `preventDestroy` option can be used to prevent a view from
    // the old view being destroyed on show.
    // The `forceShow` option can be used to force a view to be
    // re-rendered if it's already shown in the region.
    show: function(view, options) {
      if (!this._ensureElement()) {
        return;
      }
  
      this._ensureViewIsIntact(view);
      Marionette.MonitorDOMRefresh(view);
  
      var showOptions     = options || {};
      var isDifferentView = view !== this.currentView;
      var preventDestroy  = !!showOptions.preventDestroy;
      var forceShow       = !!showOptions.forceShow;
  
      // We are only changing the view if there is a current view to change to begin with
      var isChangingView = !!this.currentView;
  
      // Only destroy the current view if we don't want to `preventDestroy` and if
      // the view given in the first argument is different than `currentView`
      var _shouldDestroyView = isDifferentView && !preventDestroy;
  
      // Only show the view given in the first argument if it is different than
      // the current view or if we want to re-show the view. Note that if
      // `_shouldDestroyView` is true, then `_shouldShowView` is also necessarily true.
      var _shouldShowView = isDifferentView || forceShow;
  
      if (isChangingView) {
        this.triggerMethod('before:swapOut', this.currentView, this, options);
      }
  
      if (this.currentView && isDifferentView) {
        delete this.currentView._parent;
      }
  
      if (_shouldDestroyView) {
        this.empty();
  
      // A `destroy` event is attached to the clean up manually removed views.
      // We need to detach this event when a new view is going to be shown as it
      // is no longer relevant.
      } else if (isChangingView && _shouldShowView) {
        this.currentView.off('destroy', this.empty, this);
      }
  
      if (_shouldShowView) {
  
        // We need to listen for if a view is destroyed
        // in a way other than through the region.
        // If this happens we need to remove the reference
        // to the currentView since once a view has been destroyed
        // we can not reuse it.
        view.once('destroy', this.empty, this);
  
        // make this region the view's parent,
        // It's important that this parent binding happens before rendering
        // so that any events the child may trigger during render can also be
        // triggered on the child's ancestor views
        view._parent = this;
        this._renderView(view);
  
        if (isChangingView) {
          this.triggerMethod('before:swap', view, this, options);
        }
  
        this.triggerMethod('before:show', view, this, options);
        Marionette.triggerMethodOn(view, 'before:show', view, this, options);
  
        if (isChangingView) {
          this.triggerMethod('swapOut', this.currentView, this, options);
        }
  
        // An array of views that we're about to display
        var attachedRegion = Marionette.isNodeAttached(this.el);
  
        // The views that we're about to attach to the document
        // It's important that we prevent _getNestedViews from being executed unnecessarily
        // as it's a potentially-slow method
        var displayedViews = [];
  
        var attachOptions = _.extend({
          triggerBeforeAttach: this.triggerBeforeAttach,
          triggerAttach: this.triggerAttach
        }, showOptions);
  
        if (attachedRegion && attachOptions.triggerBeforeAttach) {
          displayedViews = this._displayedViews(view);
          this._triggerAttach(displayedViews, 'before:');
        }
  
        this.attachHtml(view);
        this.currentView = view;
  
        if (attachedRegion && attachOptions.triggerAttach) {
          displayedViews = this._displayedViews(view);
          this._triggerAttach(displayedViews);
        }
  
        if (isChangingView) {
          this.triggerMethod('swap', view, this, options);
        }
  
        this.triggerMethod('show', view, this, options);
        Marionette.triggerMethodOn(view, 'show', view, this, options);
  
        return this;
      }
  
      return this;
    },
  
    triggerBeforeAttach: true,
    triggerAttach: true,
  
    _triggerAttach: function(views, prefix) {
      var eventName = (prefix || '') + 'attach';
      _.each(views, function(view) {
        Marionette.triggerMethodOn(view, eventName, view, this);
      }, this);
    },
  
    _displayedViews: function(view) {
      return _.union([view], _.result(view, '_getNestedViews') || []);
    },
  
    _renderView: function(view) {
      if (!view.supportsRenderLifecycle) {
        Marionette.triggerMethodOn(view, 'before:render', view);
      }
      view.render();
      if (!view.supportsRenderLifecycle) {
        Marionette.triggerMethodOn(view, 'render', view);
      }
    },
  
    _ensureElement: function() {
      if (!_.isObject(this.el)) {
        this.$el = this.getEl(this.el);
        this.el = this.$el[0];
      }
  
      if (!this.$el || this.$el.length === 0) {
        if (this.getOption('allowMissingEl')) {
          return false;
        } else {
          throw new Marionette.Error('An "el" ' + this.$el.selector + ' must exist in DOM');
        }
      }
      return true;
    },
  
    _ensureViewIsIntact: function(view) {
      if (!view) {
        throw new Marionette.Error({
          name: 'ViewNotValid',
          message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'
        });
      }
  
      if (view.isDestroyed) {
        throw new Marionette.Error({
          name: 'ViewDestroyedError',
          message: 'View (cid: "' + view.cid + '") has already been destroyed and cannot be used.'
        });
      }
    },
  
    // Override this method to change how the region finds the DOM
    // element that it manages. Return a jQuery selector object scoped
    // to a provided parent el or the document if none exists.
    getEl: function(el) {
      return Backbone.$(el, Marionette._getValue(this.options.parentEl, this));
    },
  
    // Override this method to change how the new view is
    // appended to the `$el` that the region is managing
    attachHtml: function(view) {
      this.$el.contents().detach();
  
      this.el.appendChild(view.el);
    },
  
    // Destroy the current view, if there is one. If there is no
    // current view, it does nothing and returns immediately.
    empty: function(options) {
      var view = this.currentView;
  
      var emptyOptions = options || {};
      var preventDestroy  = !!emptyOptions.preventDestroy;
      // If there is no view in the region
      // we should not remove anything
      if (!view) { return this; }
  
      view.off('destroy', this.empty, this);
      this.triggerMethod('before:empty', view);
      if (!preventDestroy) {
        this._destroyView();
      }
      this.triggerMethod('empty', view);
  
      // Remove region pointer to the currentView
      delete this.currentView;
  
      if (preventDestroy) {
        this.$el.contents().detach();
      }
  
      return this;
    },
  
    // call 'destroy' or 'remove', depending on which is found
    // on the view (if showing a raw Backbone view or a Marionette View)
    _destroyView: function() {
      var view = this.currentView;
      if (view.isDestroyed) { return; }
  
      if (!view.supportsDestroyLifecycle) {
        Marionette.triggerMethodOn(view, 'before:destroy', view);
      }
      if (view.destroy) {
        view.destroy();
      } else {
        view.remove();
  
        // appending isDestroyed to raw Backbone View allows regions
        // to throw a ViewDestroyedError for this view
        view.isDestroyed = true;
      }
      if (!view.supportsDestroyLifecycle) {
        Marionette.triggerMethodOn(view, 'destroy', view);
      }
    },
  
    // Attach an existing view to the region. This
    // will not call `render` or `onShow` for the new view,
    // and will not replace the current HTML for the `el`
    // of the region.
    attachView: function(view) {
      if (this.currentView) {
        delete this.currentView._parent;
      }
      view._parent = this;
      this.currentView = view;
      return this;
    },
  
    // Checks whether a view is currently present within
    // the region. Returns `true` if there is and `false` if
    // no view is present.
    hasView: function() {
      return !!this.currentView;
    },
  
    // Reset the region by destroying any existing view and
    // clearing out the cached `$el`. The next time a view
    // is shown via this region, the region will re-query the
    // DOM for the region's `el`.
    reset: function() {
      this.empty();
  
      if (this.$el) {
        this.el = this.$el.selector;
      }
  
      delete this.$el;
      return this;
    }
  
  },
  
  // Static Methods
  {
  
    // Build an instance of a region by passing in a configuration object
    // and a default region class to use if none is specified in the config.
    //
    // The config object should either be a string as a jQuery DOM selector,
    // a Region class directly, or an object literal that specifies a selector,
    // a custom regionClass, and any options to be supplied to the region:
    //
    // ```js
    // {
    //   selector: "#foo",
    //   regionClass: MyCustomRegion,
    //   allowMissingEl: false
    // }
    // ```
    //
    buildRegion: function(regionConfig, DefaultRegionClass) {
      if (_.isString(regionConfig)) {
        return this._buildRegionFromSelector(regionConfig, DefaultRegionClass);
      }
  
      if (regionConfig.selector || regionConfig.el || regionConfig.regionClass) {
        return this._buildRegionFromObject(regionConfig, DefaultRegionClass);
      }
  
      if (_.isFunction(regionConfig)) {
        return this._buildRegionFromRegionClass(regionConfig);
      }
  
      throw new Marionette.Error({
        message: 'Improper region configuration type.',
        url: 'marionette.region.html#region-configuration-types'
      });
    },
  
    // Build the region from a string selector like '#foo-region'
    _buildRegionFromSelector: function(selector, DefaultRegionClass) {
      return new DefaultRegionClass({el: selector});
    },
  
    // Build the region from a configuration object
    // ```js
    // { selector: '#foo', regionClass: FooRegion, allowMissingEl: false }
    // ```
    _buildRegionFromObject: function(regionConfig, DefaultRegionClass) {
      var RegionClass = regionConfig.regionClass || DefaultRegionClass;
      var options = _.omit(regionConfig, 'selector', 'regionClass');
  
      if (regionConfig.selector && !options.el) {
        options.el = regionConfig.selector;
      }
  
      return new RegionClass(options);
    },
  
    // Build the region directly from a given `RegionClass`
    _buildRegionFromRegionClass: function(RegionClass) {
      return new RegionClass();
    }
  });
  
  // Region Manager
  // --------------
  
  // Manage one or more related `Marionette.Region` objects.
  Marionette.RegionManager = Marionette.Controller.extend({
    constructor: function(options) {
      this._regions = {};
      this.length = 0;
  
      Marionette.Controller.call(this, options);
  
      this.addRegions(this.getOption('regions'));
    },
  
    // Add multiple regions using an object literal or a
    // function that returns an object literal, where
    // each key becomes the region name, and each value is
    // the region definition.
    addRegions: function(regionDefinitions, defaults) {
      regionDefinitions = Marionette._getValue(regionDefinitions, this, arguments);
  
      return _.reduce(regionDefinitions, function(regions, definition, name) {
        if (_.isString(definition)) {
          definition = {selector: definition};
        }
        if (definition.selector) {
          definition = _.defaults({}, definition, defaults);
        }
  
        regions[name] = this.addRegion(name, definition);
        return regions;
      }, {}, this);
    },
  
    // Add an individual region to the region manager,
    // and return the region instance
    addRegion: function(name, definition) {
      var region;
  
      if (definition instanceof Marionette.Region) {
        region = definition;
      } else {
        region = Marionette.Region.buildRegion(definition, Marionette.Region);
      }
  
      this.triggerMethod('before:add:region', name, region);
  
      region._parent = this;
      this._store(name, region);
  
      this.triggerMethod('add:region', name, region);
      return region;
    },
  
    // Get a region by name
    get: function(name) {
      return this._regions[name];
    },
  
    // Gets all the regions contained within
    // the `regionManager` instance.
    getRegions: function() {
      return _.clone(this._regions);
    },
  
    // Remove a region by name
    removeRegion: function(name) {
      var region = this._regions[name];
      this._remove(name, region);
  
      return region;
    },
  
    // Empty all regions in the region manager, and
    // remove them
    removeRegions: function() {
      var regions = this.getRegions();
      _.each(this._regions, function(region, name) {
        this._remove(name, region);
      }, this);
  
      return regions;
    },
  
    // Empty all regions in the region manager, but
    // leave them attached
    emptyRegions: function() {
      var regions = this.getRegions();
      _.invoke(regions, 'empty');
      return regions;
    },
  
    // Destroy all regions and shut down the region
    // manager entirely
    destroy: function() {
      this.removeRegions();
      return Marionette.Controller.prototype.destroy.apply(this, arguments);
    },
  
    // internal method to store regions
    _store: function(name, region) {
      if (!this._regions[name]) {
        this.length++;
      }
  
      this._regions[name] = region;
    },
  
    // internal method to remove a region
    _remove: function(name, region) {
      this.triggerMethod('before:remove:region', name, region);
      region.empty();
      region.stopListening();
  
      delete region._parent;
      delete this._regions[name];
      this.length--;
      this.triggerMethod('remove:region', name, region);
    }
  });
  
  Marionette.actAsCollection(Marionette.RegionManager.prototype, '_regions');
  

  // Template Cache
  // --------------
  
  // Manage templates stored in `<script>` blocks,
  // caching them for faster access.
  Marionette.TemplateCache = function(templateId) {
    this.templateId = templateId;
  };
  
  // TemplateCache object-level methods. Manage the template
  // caches from these method calls instead of creating
  // your own TemplateCache instances
  _.extend(Marionette.TemplateCache, {
    templateCaches: {},
  
    // Get the specified template by id. Either
    // retrieves the cached version, or loads it
    // from the DOM.
    get: function(templateId, options) {
      var cachedTemplate = this.templateCaches[templateId];
  
      if (!cachedTemplate) {
        cachedTemplate = new Marionette.TemplateCache(templateId);
        this.templateCaches[templateId] = cachedTemplate;
      }
  
      return cachedTemplate.load(options);
    },
  
    // Clear templates from the cache. If no arguments
    // are specified, clears all templates:
    // `clear()`
    //
    // If arguments are specified, clears each of the
    // specified templates from the cache:
    // `clear("#t1", "#t2", "...")`
    clear: function() {
      var i;
      var args = _.toArray(arguments);
      var length = args.length;
  
      if (length > 0) {
        for (i = 0; i < length; i++) {
          delete this.templateCaches[args[i]];
        }
      } else {
        this.templateCaches = {};
      }
    }
  });
  
  // TemplateCache instance methods, allowing each
  // template cache object to manage its own state
  // and know whether or not it has been loaded
  _.extend(Marionette.TemplateCache.prototype, {
  
    // Internal method to load the template
    load: function(options) {
      // Guard clause to prevent loading this template more than once
      if (this.compiledTemplate) {
        return this.compiledTemplate;
      }
  
      // Load the template and compile it
      var template = this.loadTemplate(this.templateId, options);
      this.compiledTemplate = this.compileTemplate(template, options);
  
      return this.compiledTemplate;
    },
  
    // Load a template from the DOM, by default. Override
    // this method to provide your own template retrieval
    // For asynchronous loading with AMD/RequireJS, consider
    // using a template-loader plugin as described here:
    // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs
    loadTemplate: function(templateId, options) {
      var $template = Backbone.$(templateId);
  
      if (!$template.length) {
        throw new Marionette.Error({
          name: 'NoTemplateError',
          message: 'Could not find template: "' + templateId + '"'
        });
      }
      return $template.html();
    },
  
    // Pre-compile the template before caching it. Override
    // this method if you do not need to pre-compile a template
    // (JST / RequireJS for example) or if you want to change
    // the template engine used (Handebars, etc).
    compileTemplate: function(rawTemplate, options) {
      return _.template(rawTemplate, options);
    }
  });
  
  // Renderer
  // --------
  
  // Render a template with data by passing in the template
  // selector and the data to render.
  Marionette.Renderer = {
  
    // Render a template with data. The `template` parameter is
    // passed to the `TemplateCache` object to retrieve the
    // template function. Override this method to provide your own
    // custom rendering and template handling for all of Marionette.
    render: function(template, data) {
      if (!template) {
        throw new Marionette.Error({
          name: 'TemplateNotFoundError',
          message: 'Cannot render the template since its false, null or undefined.'
        });
      }
  
      var templateFunc = _.isFunction(template) ? template : Marionette.TemplateCache.get(template);
  
      return templateFunc(data);
    }
  };
  

  /* jshint maxlen: 114, nonew: false */
  // View
  // ----
  
  // The core view class that other Marionette views extend from.
  Marionette.View = Backbone.View.extend({
    isDestroyed: false,
    supportsRenderLifecycle: true,
    supportsDestroyLifecycle: true,
  
    constructor: function(options) {
      this.render = _.bind(this.render, this);
  
      options = Marionette._getValue(options, this);
  
      // this exposes view options to the view initializer
      // this is a backfill since backbone removed the assignment
      // of this.options
      // at some point however this may be removed
      this.options = _.extend({}, _.result(this, 'options'), options);
  
      this._behaviors = Marionette.Behaviors(this);
  
      Backbone.View.call(this, this.options);
  
      Marionette.MonitorDOMRefresh(this);
    },
  
    // Get the template for this view
    // instance. You can set a `template` attribute in the view
    // definition or pass a `template: "whatever"` parameter in
    // to the constructor options.
    getTemplate: function() {
      return this.getOption('template');
    },
  
    // Serialize a model by returning its attributes. Clones
    // the attributes to allow modification.
    serializeModel: function(model) {
      return model.toJSON.apply(model, _.rest(arguments));
    },
  
    // Mix in template helper methods. Looks for a
    // `templateHelpers` attribute, which can either be an
    // object literal, or a function that returns an object
    // literal. All methods and attributes from this object
    // are copies to the object passed in.
    mixinTemplateHelpers: function(target) {
      target = target || {};
      var templateHelpers = this.getOption('templateHelpers');
      templateHelpers = Marionette._getValue(templateHelpers, this);
      return _.extend(target, templateHelpers);
    },
  
    // normalize the keys of passed hash with the views `ui` selectors.
    // `{"@ui.foo": "bar"}`
    normalizeUIKeys: function(hash) {
      var uiBindings = _.result(this, '_uiBindings');
      return Marionette.normalizeUIKeys(hash, uiBindings || _.result(this, 'ui'));
    },
  
    // normalize the values of passed hash with the views `ui` selectors.
    // `{foo: "@ui.bar"}`
    normalizeUIValues: function(hash, properties) {
      var ui = _.result(this, 'ui');
      var uiBindings = _.result(this, '_uiBindings');
      return Marionette.normalizeUIValues(hash, uiBindings || ui, properties);
    },
  
    // Configure `triggers` to forward DOM events to view
    // events. `triggers: {"click .foo": "do:foo"}`
    configureTriggers: function() {
      if (!this.triggers) { return; }
  
      // Allow `triggers` to be configured as a function
      var triggers = this.normalizeUIKeys(_.result(this, 'triggers'));
  
      // Configure the triggers, prevent default
      // action and stop propagation of DOM events
      return _.reduce(triggers, function(events, value, key) {
        events[key] = this._buildViewTrigger(value);
        return events;
      }, {}, this);
    },
  
    // Overriding Backbone.View's delegateEvents to handle
    // the `triggers`, `modelEvents`, and `collectionEvents` configuration
    delegateEvents: function(events) {
      this._delegateDOMEvents(events);
      this.bindEntityEvents(this.model, this.getOption('modelEvents'));
      this.bindEntityEvents(this.collection, this.getOption('collectionEvents'));
  
      _.each(this._behaviors, function(behavior) {
        behavior.bindEntityEvents(this.model, behavior.getOption('modelEvents'));
        behavior.bindEntityEvents(this.collection, behavior.getOption('collectionEvents'));
      }, this);
  
      return this;
    },
  
    // internal method to delegate DOM events and triggers
    _delegateDOMEvents: function(eventsArg) {
      var events = Marionette._getValue(eventsArg || this.events, this);
  
      // normalize ui keys
      events = this.normalizeUIKeys(events);
      if (_.isUndefined(eventsArg)) {this.events = events;}
  
      var combinedEvents = {};
  
      // look up if this view has behavior events
      var behaviorEvents = _.result(this, 'behaviorEvents') || {};
      var triggers = this.configureTriggers();
      var behaviorTriggers = _.result(this, 'behaviorTriggers') || {};
  
      // behavior events will be overriden by view events and or triggers
      _.extend(combinedEvents, behaviorEvents, events, triggers, behaviorTriggers);
  
      Backbone.View.prototype.delegateEvents.call(this, combinedEvents);
    },
  
    // Overriding Backbone.View's undelegateEvents to handle unbinding
    // the `triggers`, `modelEvents`, and `collectionEvents` config
    undelegateEvents: function() {
      Backbone.View.prototype.undelegateEvents.apply(this, arguments);
  
      this.unbindEntityEvents(this.model, this.getOption('modelEvents'));
      this.unbindEntityEvents(this.collection, this.getOption('collectionEvents'));
  
      _.each(this._behaviors, function(behavior) {
        behavior.unbindEntityEvents(this.model, behavior.getOption('modelEvents'));
        behavior.unbindEntityEvents(this.collection, behavior.getOption('collectionEvents'));
      }, this);
  
      return this;
    },
  
    // Internal helper method to verify whether the view hasn't been destroyed
    _ensureViewIsIntact: function() {
      if (this.isDestroyed) {
        throw new Marionette.Error({
          name: 'ViewDestroyedError',
          message: 'View (cid: "' + this.cid + '") has already been destroyed and cannot be used.'
        });
      }
    },
  
    // Default `destroy` implementation, for removing a view from the
    // DOM and unbinding it. Regions will call this method
    // for you. You can specify an `onDestroy` method in your view to
    // add custom code that is called after the view is destroyed.
    destroy: function() {
      if (this.isDestroyed) { return this; }
  
      var args = _.toArray(arguments);
  
      this.triggerMethod.apply(this, ['before:destroy'].concat(args));
  
      // mark as destroyed before doing the actual destroy, to
      // prevent infinite loops within "destroy" event handlers
      // that are trying to destroy other views
      this.isDestroyed = true;
      this.triggerMethod.apply(this, ['destroy'].concat(args));
  
      // unbind UI elements
      this.unbindUIElements();
  
      this.isRendered = false;
  
      // remove the view from the DOM
      this.remove();
  
      // Call destroy on each behavior after
      // destroying the view.
      // This unbinds event listeners
      // that behaviors have registered for.
      _.invoke(this._behaviors, 'destroy', args);
  
      return this;
    },
  
    bindUIElements: function() {
      this._bindUIElements();
      _.invoke(this._behaviors, this._bindUIElements);
    },
  
    // This method binds the elements specified in the "ui" hash inside the view's code with
    // the associated jQuery selectors.
    _bindUIElements: function() {
      if (!this.ui) { return; }
  
      // store the ui hash in _uiBindings so they can be reset later
      // and so re-rendering the view will be able to find the bindings
      if (!this._uiBindings) {
        this._uiBindings = this.ui;
      }
  
      // get the bindings result, as a function or otherwise
      var bindings = _.result(this, '_uiBindings');
  
      // empty the ui so we don't have anything to start with
      this.ui = {};
  
      // bind each of the selectors
      _.each(bindings, function(selector, key) {
        this.ui[key] = this.$(selector);
      }, this);
    },
  
    // This method unbinds the elements specified in the "ui" hash
    unbindUIElements: function() {
      this._unbindUIElements();
      _.invoke(this._behaviors, this._unbindUIElements);
    },
  
    _unbindUIElements: function() {
      if (!this.ui || !this._uiBindings) { return; }
  
      // delete all of the existing ui bindings
      _.each(this.ui, function($el, name) {
        delete this.ui[name];
      }, this);
  
      // reset the ui element to the original bindings configuration
      this.ui = this._uiBindings;
      delete this._uiBindings;
    },
  
    // Internal method to create an event handler for a given `triggerDef` like
    // 'click:foo'
    _buildViewTrigger: function(triggerDef) {
  
      var options = _.defaults({}, triggerDef, {
        preventDefault: true,
        stopPropagation: true
      });
  
      var eventName = _.isObject(triggerDef) ? options.event : triggerDef;
  
      return function(e) {
        if (e) {
          if (e.preventDefault && options.preventDefault) {
            e.preventDefault();
          }
  
          if (e.stopPropagation && options.stopPropagation) {
            e.stopPropagation();
          }
        }
  
        var args = {
          view: this,
          model: this.model,
          collection: this.collection
        };
  
        this.triggerMethod(eventName, args);
      };
    },
  
    setElement: function() {
      var ret = Backbone.View.prototype.setElement.apply(this, arguments);
  
      // proxy behavior $el to the view's $el.
      // This is needed because a view's $el proxy
      // is not set until after setElement is called.
      _.invoke(this._behaviors, 'proxyViewProperties', this);
  
      return ret;
    },
  
    // import the `triggerMethod` to trigger events with corresponding
    // methods if the method exists
    triggerMethod: function() {
      var ret = Marionette._triggerMethod(this, arguments);
  
      this._triggerEventOnBehaviors(arguments);
      this._triggerEventOnParentLayout(arguments[0], _.rest(arguments));
  
      return ret;
    },
  
    _triggerEventOnBehaviors: function(args) {
      var triggerMethod = Marionette._triggerMethod;
      var behaviors = this._behaviors;
      // Use good ol' for as this is a very hot function
      for (var i = 0, length = behaviors && behaviors.length; i < length; i++) {
        triggerMethod(behaviors[i], args);
      }
    },
  
    _triggerEventOnParentLayout: function(eventName, args) {
      var layoutView = this._parentLayoutView();
      if (!layoutView) {
        return;
      }
  
      // invoke triggerMethod on parent view
      var eventPrefix = Marionette.getOption(layoutView, 'childViewEventPrefix');
      var prefixedEventName = eventPrefix + ':' + eventName;
      var callArgs = [this].concat(args);
  
      Marionette._triggerMethod(layoutView, prefixedEventName, callArgs);
  
      // call the parent view's childEvents handler
      var childEvents = Marionette.getOption(layoutView, 'childEvents');
  
      // since childEvents can be an object or a function use Marionette._getValue
      // to handle the abstaction for us.
      childEvents = Marionette._getValue(childEvents, layoutView);
      var normalizedChildEvents = layoutView.normalizeMethods(childEvents);
  
      if (normalizedChildEvents && _.isFunction(normalizedChildEvents[eventName])) {
        normalizedChildEvents[eventName].apply(layoutView, callArgs);
      }
    },
  
    // This method returns any views that are immediate
    // children of this view
    _getImmediateChildren: function() {
      return [];
    },
  
    // Returns an array of every nested view within this view
    _getNestedViews: function() {
      var children = this._getImmediateChildren();
  
      if (!children.length) { return children; }
  
      return _.reduce(children, function(memo, view) {
        if (!view._getNestedViews) { return memo; }
        return memo.concat(view._getNestedViews());
      }, children);
    },
  
    // Walk the _parent tree until we find a layout view (if one exists).
    // Returns the parent layout view hierarchically closest to this view.
    _parentLayoutView: function() {
      var parent  = this._parent;
  
      while (parent) {
        if (parent instanceof Marionette.LayoutView) {
          return parent;
        }
        parent = parent._parent;
      }
    },
  
    // Imports the "normalizeMethods" to transform hashes of
    // events=>function references/names to a hash of events=>function references
    normalizeMethods: Marionette.normalizeMethods,
  
    // A handy way to merge passed-in options onto the instance
    mergeOptions: Marionette.mergeOptions,
  
    // Proxy `getOption` to enable getting options from this or this.options by name.
    getOption: Marionette.proxyGetOption,
  
    // Proxy `bindEntityEvents` to enable binding view's events from another entity.
    bindEntityEvents: Marionette.proxyBindEntityEvents,
  
    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.
    unbindEntityEvents: Marionette.proxyUnbindEntityEvents
  });
  
  // Item View
  // ---------
  
  // A single item view implementation that contains code for rendering
  // with underscore.js templates, serializing the view's model or collection,
  // and calling several methods on extended views, such as `onRender`.
  Marionette.ItemView = Marionette.View.extend({
  
    // Setting up the inheritance chain which allows changes to
    // Marionette.View.prototype.constructor which allows overriding
    constructor: function() {
      Marionette.View.apply(this, arguments);
    },
  
    // Serialize the model or collection for the view. If a model is
    // found, the view's `serializeModel` is called. If a collection is found,
    // each model in the collection is serialized by calling
    // the view's `serializeCollection` and put into an `items` array in
    // the resulting data. If both are found, defaults to the model.
    // You can override the `serializeData` method in your own view definition,
    // to provide custom serialization for your view's data.
    serializeData: function() {
      if (!this.model && !this.collection) {
        return {};
      }
  
      var args = [this.model || this.collection];
      if (arguments.length) {
        args.push.apply(args, arguments);
      }
  
      if (this.model) {
        return this.serializeModel.apply(this, args);
      } else {
        return {
          items: this.serializeCollection.apply(this, args)
        };
      }
    },
  
    // Serialize a collection by serializing each of its models.
    serializeCollection: function(collection) {
      return collection.toJSON.apply(collection, _.rest(arguments));
    },
  
    // Render the view, defaulting to underscore.js templates.
    // You can override this in your view definition to provide
    // a very specific rendering for your view. In general, though,
    // you should override the `Marionette.Renderer` object to
    // change how Marionette renders views.
    render: function() {
      this._ensureViewIsIntact();
  
      this.triggerMethod('before:render', this);
  
      this._renderTemplate();
      this.isRendered = true;
      this.bindUIElements();
  
      this.triggerMethod('render', this);
  
      return this;
    },
  
    // Internal method to render the template with the serialized data
    // and template helpers via the `Marionette.Renderer` object.
    // Throws an `UndefinedTemplateError` error if the template is
    // any falsely value but literal `false`.
    _renderTemplate: function() {
      var template = this.getTemplate();
  
      // Allow template-less item views
      if (template === false) {
        return;
      }
  
      if (!template) {
        throw new Marionette.Error({
          name: 'UndefinedTemplateError',
          message: 'Cannot render the template since it is null or undefined.'
        });
      }
  
      // Add in entity data and template helpers
      var data = this.mixinTemplateHelpers(this.serializeData());
  
      // Render and add to el
      var html = Marionette.Renderer.render(template, data, this);
      this.attachElContent(html);
  
      return this;
    },
  
    // Attaches the content of a given view.
    // This method can be overridden to optimize rendering,
    // or to render in a non standard way.
    //
    // For example, using `innerHTML` instead of `$el.html`
    //
    // ```js
    // attachElContent: function(html) {
    //   this.el.innerHTML = html;
    //   return this;
    // }
    // ```
    attachElContent: function(html) {
      this.$el.html(html);
  
      return this;
    }
  });
  
  /* jshint maxstatements: 20, maxcomplexity: 7 */
  
  // Collection View
  // ---------------
  
  // A view that iterates over a Backbone.Collection
  // and renders an individual child view for each model.
  Marionette.CollectionView = Marionette.View.extend({
  
    // used as the prefix for child view events
    // that are forwarded through the collectionview
    childViewEventPrefix: 'childview',
  
    // flag for maintaining the sorted order of the collection
    sort: true,
  
    // constructor
    // option to pass `{sort: false}` to prevent the `CollectionView` from
    // maintaining the sorted order of the collection.
    // This will fallback onto appending childView's to the end.
    //
    // option to pass `{comparator: compFunction()}` to allow the `CollectionView`
    // to use a custom sort order for the collection.
    constructor: function(options) {
      this.once('render', this._initialEvents);
      this._initChildViewStorage();
  
      Marionette.View.apply(this, arguments);
  
      this.on({
        'before:show':   this._onBeforeShowCalled,
        'show':          this._onShowCalled,
        'before:attach': this._onBeforeAttachCalled,
        'attach':        this._onAttachCalled
      });
      this.initRenderBuffer();
    },
  
    // Instead of inserting elements one by one into the page,
    // it's much more performant to insert elements into a document
    // fragment and then insert that document fragment into the page
    initRenderBuffer: function() {
      this._bufferedChildren = [];
    },
  
    startBuffering: function() {
      this.initRenderBuffer();
      this.isBuffering = true;
    },
  
    endBuffering: function() {
      // Only trigger attach if already shown and attached, otherwise Region#show() handles this.
      var canTriggerAttach = this._isShown && Marionette.isNodeAttached(this.el);
      var nestedViews;
  
      this.isBuffering = false;
  
      if (this._isShown) {
        this._triggerMethodMany(this._bufferedChildren, this, 'before:show');
      }
      if (canTriggerAttach && this._triggerBeforeAttach) {
        nestedViews = this._getNestedViews();
        this._triggerMethodMany(nestedViews, this, 'before:attach');
      }
  
      this.attachBuffer(this, this._createBuffer());
  
      if (canTriggerAttach && this._triggerAttach) {
        nestedViews = this._getNestedViews();
        this._triggerMethodMany(nestedViews, this, 'attach');
      }
      if (this._isShown) {
        this._triggerMethodMany(this._bufferedChildren, this, 'show');
      }
      this.initRenderBuffer();
    },
  
    _triggerMethodMany: function(targets, source, eventName) {
      var args = _.drop(arguments, 3);
  
      _.each(targets, function(target) {
        Marionette.triggerMethodOn.apply(target, [target, eventName, target, source].concat(args));
      });
    },
  
    // Configured the initial events that the collection view
    // binds to.
    _initialEvents: function() {
      if (this.collection) {
        this.listenTo(this.collection, 'add', this._onCollectionAdd);
        this.listenTo(this.collection, 'remove', this._onCollectionRemove);
        this.listenTo(this.collection, 'reset', this.render);
  
        if (this.getOption('sort')) {
          this.listenTo(this.collection, 'sort', this._sortViews);
        }
      }
    },
  
    // Handle a child added to the collection
    _onCollectionAdd: function(child, collection, opts) {
      // `index` is present when adding with `at` since BB 1.2; indexOf fallback for < 1.2
      var index = opts.at !== undefined && (opts.index || collection.indexOf(child));
  
      // When filtered or when there is no initial index, calculate index.
      if (this.getOption('filter') || index === false) {
        index = _.indexOf(this._filteredSortedModels(index), child);
      }
  
      if (this._shouldAddChild(child, index)) {
        this.destroyEmptyView();
        var ChildView = this.getChildView(child);
        this.addChild(child, ChildView, index);
      }
    },
  
    // get the child view by model it holds, and remove it
    _onCollectionRemove: function(model) {
      var view = this.children.findByModel(model);
      this.removeChildView(view);
      this.checkEmpty();
    },
  
    _onBeforeShowCalled: function() {
      // Reset attach event flags at the top of the Region#show() event lifecycle; if the Region's
      // show() options permit onBeforeAttach/onAttach events, these flags will be set true again.
      this._triggerBeforeAttach = this._triggerAttach = false;
      this.children.each(function(childView) {
        Marionette.triggerMethodOn(childView, 'before:show', childView);
      });
    },
  
    _onShowCalled: function() {
      this.children.each(function(childView) {
        Marionette.triggerMethodOn(childView, 'show', childView);
      });
    },
  
    // If during Region#show() onBeforeAttach was fired, continue firing it for child views
    _onBeforeAttachCalled: function() {
      this._triggerBeforeAttach = true;
    },
  
    // If during Region#show() onAttach was fired, continue firing it for child views
    _onAttachCalled: function() {
      this._triggerAttach = true;
    },
  
    // Render children views. Override this method to
    // provide your own implementation of a render function for
    // the collection view.
    render: function() {
      this._ensureViewIsIntact();
      this.triggerMethod('before:render', this);
      this._renderChildren();
      this.isRendered = true;
      this.triggerMethod('render', this);
      return this;
    },
  
    // Reorder DOM after sorting. When your element's rendering
    // do not use their index, you can pass reorderOnSort: true
    // to only reorder the DOM after a sort instead of rendering
    // all the collectionView
    reorder: function() {
      var children = this.children;
      var models = this._filteredSortedModels();
  
      if (!models.length && this._showingEmptyView) { return this; }
  
      var anyModelsAdded = _.some(models, function(model) {
        return !children.findByModel(model);
      });
  
      // If there are any new models added due to filtering
      // We need to add child views
      // So render as normal
      if (anyModelsAdded) {
        this.render();
      } else {
        // get the DOM nodes in the same order as the models
        var elsToReorder = _.map(models, function(model, index) {
          var view = children.findByModel(model);
          view._index = index;
          return view.el;
        });
  
        // find the views that were children before but arent in this new ordering
        var filteredOutViews = children.filter(function(view) {
          return !_.contains(elsToReorder, view.el);
        });
  
        this.triggerMethod('before:reorder');
  
        // since append moves elements that are already in the DOM,
        // appending the elements will effectively reorder them
        this._appendReorderedChildren(elsToReorder);
  
        // remove any views that have been filtered out
        _.each(filteredOutViews, this.removeChildView, this);
        this.checkEmpty();
  
        this.triggerMethod('reorder');
      }
    },
  
    // Render view after sorting. Override this method to
    // change how the view renders after a `sort` on the collection.
    // An example of this would be to only `renderChildren` in a `CompositeView`
    // rather than the full view.
    resortView: function() {
      if (Marionette.getOption(this, 'reorderOnSort')) {
        this.reorder();
      } else {
        this.render();
      }
    },
  
    // Internal method. This checks for any changes in the order of the collection.
    // If the index of any view doesn't match, it will render.
    _sortViews: function() {
      var models = this._filteredSortedModels();
  
      // check for any changes in sort order of views
      var orderChanged = _.find(models, function(item, index) {
        var view = this.children.findByModel(item);
        return !view || view._index !== index;
      }, this);
  
      if (orderChanged) {
        this.resortView();
      }
    },
  
    // Internal reference to what index a `emptyView` is.
    _emptyViewIndex: -1,
  
    // Internal method. Separated so that CompositeView can append to the childViewContainer
    // if necessary
    _appendReorderedChildren: function(children) {
      this.$el.append(children);
    },
  
    // Internal method. Separated so that CompositeView can have
    // more control over events being triggered, around the rendering
    // process
    _renderChildren: function() {
      this.destroyEmptyView();
      this.destroyChildren({checkEmpty: false});
  
      if (this.isEmpty(this.collection)) {
        this.showEmptyView();
      } else {
        this.triggerMethod('before:render:collection', this);
        this.startBuffering();
        this.showCollection();
        this.endBuffering();
        this.triggerMethod('render:collection', this);
  
        // If we have shown children and none have passed the filter, show the empty view
        if (this.children.isEmpty() && this.getOption('filter')) {
          this.showEmptyView();
        }
      }
    },
  
    // Internal method to loop through collection and show each child view.
    showCollection: function() {
      var ChildView;
  
      var models = this._filteredSortedModels();
  
      _.each(models, function(child, index) {
        ChildView = this.getChildView(child);
        this.addChild(child, ChildView, index);
      }, this);
    },
  
    // Allow the collection to be sorted by a custom view comparator
    _filteredSortedModels: function(addedAt) {
      var viewComparator = this.getViewComparator();
      var models = this.collection.models;
      addedAt = Math.min(Math.max(addedAt, 0), models.length - 1);
  
      if (viewComparator) {
        var addedModel;
        // Preserve `at` location, even for a sorted view
        if (addedAt) {
          addedModel = models[addedAt];
          models = models.slice(0, addedAt).concat(models.slice(addedAt + 1));
        }
        models = this._sortModelsBy(models, viewComparator);
        if (addedModel) {
          models.splice(addedAt, 0, addedModel);
        }
      }
  
      // Filter after sorting in case the filter uses the index
      if (this.getOption('filter')) {
        models = _.filter(models, function(model, index) {
          return this._shouldAddChild(model, index);
        }, this);
      }
  
      return models;
    },
  
    _sortModelsBy: function(models, comparator) {
      if (typeof comparator === 'string') {
        return _.sortBy(models, function(model) {
          return model.get(comparator);
        }, this);
      } else if (comparator.length === 1) {
        return _.sortBy(models, comparator, this);
      } else {
        return models.sort(_.bind(comparator, this));
      }
    },
  
    // Internal method to show an empty view in place of
    // a collection of child views, when the collection is empty
    showEmptyView: function() {
      var EmptyView = this.getEmptyView();
  
      if (EmptyView && !this._showingEmptyView) {
        this.triggerMethod('before:render:empty');
  
        this._showingEmptyView = true;
        var model = new Backbone.Model();
        this.addEmptyView(model, EmptyView);
  
        this.triggerMethod('render:empty');
      }
    },
  
    // Internal method to destroy an existing emptyView instance
    // if one exists. Called when a collection view has been
    // rendered empty, and then a child is added to the collection.
    destroyEmptyView: function() {
      if (this._showingEmptyView) {
        this.triggerMethod('before:remove:empty');
  
        this.destroyChildren();
        delete this._showingEmptyView;
  
        this.triggerMethod('remove:empty');
      }
    },
  
    // Retrieve the empty view class
    getEmptyView: function() {
      return this.getOption('emptyView');
    },
  
    // Render and show the emptyView. Similar to addChild method
    // but "add:child" events are not fired, and the event from
    // emptyView are not forwarded
    addEmptyView: function(child, EmptyView) {
      // Only trigger attach if already shown, attached, and not buffering, otherwise endBuffer() or
      // Region#show() handles this.
      var canTriggerAttach = this._isShown && !this.isBuffering && Marionette.isNodeAttached(this.el);
      var nestedViews;
  
      // get the emptyViewOptions, falling back to childViewOptions
      var emptyViewOptions = this.getOption('emptyViewOptions') ||
                            this.getOption('childViewOptions');
  
      if (_.isFunction(emptyViewOptions)) {
        emptyViewOptions = emptyViewOptions.call(this, child, this._emptyViewIndex);
      }
  
      // build the empty view
      var view = this.buildChildView(child, EmptyView, emptyViewOptions);
  
      view._parent = this;
  
      // Proxy emptyView events
      this.proxyChildEvents(view);
  
      view.once('render', function() {
        // trigger the 'before:show' event on `view` if the collection view has already been shown
        if (this._isShown) {
          Marionette.triggerMethodOn(view, 'before:show', view);
        }
  
        // Trigger `before:attach` following `render` to avoid adding logic and event triggers
        // to public method `renderChildView()`.
        if (canTriggerAttach && this._triggerBeforeAttach) {
          nestedViews = this._getViewAndNested(view);
          this._triggerMethodMany(nestedViews, this, 'before:attach');
        }
      }, this);
  
      // Store the `emptyView` like a `childView` so we can properly remove and/or close it later
      this.children.add(view);
      this.renderChildView(view, this._emptyViewIndex);
  
      // Trigger `attach`
      if (canTriggerAttach && this._triggerAttach) {
        nestedViews = this._getViewAndNested(view);
        this._triggerMethodMany(nestedViews, this, 'attach');
      }
      // call the 'show' method if the collection view has already been shown
      if (this._isShown) {
        Marionette.triggerMethodOn(view, 'show', view);
      }
    },
  
    // Retrieve the `childView` class, either from `this.options.childView`
    // or from the `childView` in the object definition. The "options"
    // takes precedence.
    // This method receives the model that will be passed to the instance
    // created from this `childView`. Overriding methods may use the child
    // to determine what `childView` class to return.
    getChildView: function(child) {
      var childView = this.getOption('childView');
  
      if (!childView) {
        throw new Marionette.Error({
          name: 'NoChildViewError',
          message: 'A "childView" must be specified'
        });
      }
  
      return childView;
    },
  
    // Render the child's view and add it to the
    // HTML for the collection view at a given index.
    // This will also update the indices of later views in the collection
    // in order to keep the children in sync with the collection.
    addChild: function(child, ChildView, index) {
      var childViewOptions = this.getOption('childViewOptions');
      childViewOptions = Marionette._getValue(childViewOptions, this, [child, index]);
  
      var view = this.buildChildView(child, ChildView, childViewOptions);
  
      // increment indices of views after this one
      this._updateIndices(view, true, index);
  
      this.triggerMethod('before:add:child', view);
      this._addChildView(view, index);
      this.triggerMethod('add:child', view);
  
      view._parent = this;
  
      return view;
    },
  
    // Internal method. This decrements or increments the indices of views after the
    // added/removed view to keep in sync with the collection.
    _updateIndices: function(view, increment, index) {
      if (!this.getOption('sort')) {
        return;
      }
  
      if (increment) {
        // assign the index to the view
        view._index = index;
      }
  
      // update the indexes of views after this one
      this.children.each(function(laterView) {
        if (laterView._index >= view._index) {
          laterView._index += increment ? 1 : -1;
        }
      });
    },
  
    // Internal Method. Add the view to children and render it at
    // the given index.
    _addChildView: function(view, index) {
      // Only trigger attach if already shown, attached, and not buffering, otherwise endBuffer() or
      // Region#show() handles this.
      var canTriggerAttach = this._isShown && !this.isBuffering && Marionette.isNodeAttached(this.el);
      var nestedViews;
  
      // set up the child view event forwarding
      this.proxyChildEvents(view);
  
      view.once('render', function() {
        // trigger the 'before:show' event on `view` if the collection view has already been shown
        if (this._isShown && !this.isBuffering) {
          Marionette.triggerMethodOn(view, 'before:show', view);
        }
  
        // Trigger `before:attach` following `render` to avoid adding logic and event triggers
        // to public method `renderChildView()`.
        if (canTriggerAttach && this._triggerBeforeAttach) {
          nestedViews = this._getViewAndNested(view);
          this._triggerMethodMany(nestedViews, this, 'before:attach');
        }
      }, this);
  
      // Store the child view itself so we can properly remove and/or destroy it later
      this.children.add(view);
      this.renderChildView(view, index);
  
      // Trigger `attach`
      if (canTriggerAttach && this._triggerAttach) {
        nestedViews = this._getViewAndNested(view);
        this._triggerMethodMany(nestedViews, this, 'attach');
      }
      // Trigger `show`
      if (this._isShown && !this.isBuffering) {
        Marionette.triggerMethodOn(view, 'show', view);
      }
    },
  
    // render the child view
    renderChildView: function(view, index) {
      if (!view.supportsRenderLifecycle) {
        Marionette.triggerMethodOn(view, 'before:render', view);
      }
      view.render();
      if (!view.supportsRenderLifecycle) {
        Marionette.triggerMethodOn(view, 'render', view);
      }
      this.attachHtml(this, view, index);
      return view;
    },
  
    // Build a `childView` for a model in the collection.
    buildChildView: function(child, ChildViewClass, childViewOptions) {
      var options = _.extend({model: child}, childViewOptions);
      var childView = new ChildViewClass(options);
      Marionette.MonitorDOMRefresh(childView);
      return childView;
    },
  
    // Remove the child view and destroy it.
    // This function also updates the indices of
    // later views in the collection in order to keep
    // the children in sync with the collection.
    removeChildView: function(view) {
      if (!view) { return view; }
  
      this.triggerMethod('before:remove:child', view);
  
      if (!view.supportsDestroyLifecycle) {
        Marionette.triggerMethodOn(view, 'before:destroy', view);
      }
      // call 'destroy' or 'remove', depending on which is found
      if (view.destroy) {
        view.destroy();
      } else {
        view.remove();
      }
      if (!view.supportsDestroyLifecycle) {
        Marionette.triggerMethodOn(view, 'destroy', view);
      }
  
      delete view._parent;
      this.stopListening(view);
      this.children.remove(view);
      this.triggerMethod('remove:child', view);
  
      // decrement the index of views after this one
      this._updateIndices(view, false);
  
      return view;
    },
  
    // check if the collection is empty
    isEmpty: function() {
      return !this.collection || this.collection.length === 0;
    },
  
    // If empty, show the empty view
    checkEmpty: function() {
      if (this.isEmpty(this.collection)) {
        this.showEmptyView();
      }
    },
  
    // You might need to override this if you've overridden attachHtml
    attachBuffer: function(collectionView, buffer) {
      collectionView.$el.append(buffer);
    },
  
    // Create a fragment buffer from the currently buffered children
    _createBuffer: function() {
      var elBuffer = document.createDocumentFragment();
      _.each(this._bufferedChildren, function(b) {
        elBuffer.appendChild(b.el);
      });
      return elBuffer;
    },
  
    // Append the HTML to the collection's `el`.
    // Override this method to do something other
    // than `.append`.
    attachHtml: function(collectionView, childView, index) {
      if (collectionView.isBuffering) {
        // buffering happens on reset events and initial renders
        // in order to reduce the number of inserts into the
        // document, which are expensive.
        collectionView._bufferedChildren.splice(index, 0, childView);
      } else {
        // If we've already rendered the main collection, append
        // the new child into the correct order if we need to. Otherwise
        // append to the end.
        if (!collectionView._insertBefore(childView, index)) {
          collectionView._insertAfter(childView);
        }
      }
    },
  
    // Internal method. Check whether we need to insert the view into
    // the correct position.
    _insertBefore: function(childView, index) {
      var currentView;
      var findPosition = this.getOption('sort') && (index < this.children.length - 1);
      if (findPosition) {
        // Find the view after this one
        currentView = this.children.find(function(view) {
          return view._index === index + 1;
        });
      }
  
      if (currentView) {
        currentView.$el.before(childView.el);
        return true;
      }
  
      return false;
    },
  
    // Internal method. Append a view to the end of the $el
    _insertAfter: function(childView) {
      this.$el.append(childView.el);
    },
  
    // Internal method to set up the `children` object for
    // storing all of the child views
    _initChildViewStorage: function() {
      this.children = new Backbone.ChildViewContainer();
    },
  
    // Handle cleanup and other destroying needs for the collection of views
    destroy: function() {
      if (this.isDestroyed) { return this; }
  
      this.triggerMethod('before:destroy:collection');
      this.destroyChildren({checkEmpty: false});
      this.triggerMethod('destroy:collection');
  
      return Marionette.View.prototype.destroy.apply(this, arguments);
    },
  
    // Destroy the child views that this collection view
    // is holding on to, if any
    destroyChildren: function(options) {
      var destroyOptions = options || {};
      var shouldCheckEmpty = true;
      var childViews = this.children.map(_.identity);
  
      if (!_.isUndefined(destroyOptions.checkEmpty)) {
        shouldCheckEmpty = destroyOptions.checkEmpty;
      }
  
      this.children.each(this.removeChildView, this);
  
      if (shouldCheckEmpty) {
        this.checkEmpty();
      }
      return childViews;
    },
  
    // Return true if the given child should be shown
    // Return false otherwise
    // The filter will be passed (child, index, collection)
    // Where
    //  'child' is the given model
    //  'index' is the index of that model in the collection
    //  'collection' is the collection referenced by this CollectionView
    _shouldAddChild: function(child, index) {
      var filter = this.getOption('filter');
      return !_.isFunction(filter) || filter.call(this, child, index, this.collection);
    },
  
    // Set up the child view event forwarding. Uses a "childview:"
    // prefix in front of all forwarded events.
    proxyChildEvents: function(view) {
      var prefix = this.getOption('childViewEventPrefix');
  
      // Forward all child view events through the parent,
      // prepending "childview:" to the event name
      this.listenTo(view, 'all', function() {
        var args = _.toArray(arguments);
        var rootEvent = args[0];
        var childEvents = this.normalizeMethods(_.result(this, 'childEvents'));
  
        args[0] = prefix + ':' + rootEvent;
        args.splice(1, 0, view);
  
        // call collectionView childEvent if defined
        if (typeof childEvents !== 'undefined' && _.isFunction(childEvents[rootEvent])) {
          childEvents[rootEvent].apply(this, args.slice(1));
        }
  
        this.triggerMethod.apply(this, args);
      });
    },
  
    _getImmediateChildren: function() {
      return _.values(this.children._views);
    },
  
    _getViewAndNested: function(view) {
      // This will not fail on Backbone.View which does not have #_getNestedViews.
      return [view].concat(_.result(view, '_getNestedViews') || []);
    },
  
    getViewComparator: function() {
      return this.getOption('viewComparator');
    }
  });
  
  /* jshint maxstatements: 17, maxlen: 117 */
  
  // Composite View
  // --------------
  
  // Used for rendering a branch-leaf, hierarchical structure.
  // Extends directly from CollectionView and also renders an
  // a child view as `modelView`, for the top leaf
  Marionette.CompositeView = Marionette.CollectionView.extend({
  
    // Setting up the inheritance chain which allows changes to
    // Marionette.CollectionView.prototype.constructor which allows overriding
    // option to pass '{sort: false}' to prevent the CompositeView from
    // maintaining the sorted order of the collection.
    // This will fallback onto appending childView's to the end.
    constructor: function() {
      Marionette.CollectionView.apply(this, arguments);
    },
  
    // Configured the initial events that the composite view
    // binds to. Override this method to prevent the initial
    // events, or to add your own initial events.
    _initialEvents: function() {
  
      // Bind only after composite view is rendered to avoid adding child views
      // to nonexistent childViewContainer
  
      if (this.collection) {
        this.listenTo(this.collection, 'add', this._onCollectionAdd);
        this.listenTo(this.collection, 'remove', this._onCollectionRemove);
        this.listenTo(this.collection, 'reset', this._renderChildren);
  
        if (this.getOption('sort')) {
          this.listenTo(this.collection, 'sort', this._sortViews);
        }
      }
    },
  
    // Retrieve the `childView` to be used when rendering each of
    // the items in the collection. The default is to return
    // `this.childView` or Marionette.CompositeView if no `childView`
    // has been defined
    getChildView: function(child) {
      var childView = this.getOption('childView') || this.constructor;
  
      return childView;
    },
  
    // Serialize the model for the view.
    // You can override the `serializeData` method in your own view
    // definition, to provide custom serialization for your view's data.
    serializeData: function() {
      var data = {};
  
      if (this.model) {
        data = _.partial(this.serializeModel, this.model).apply(this, arguments);
      }
  
      return data;
    },
  
    // Renders the model and the collection.
    render: function() {
      this._ensureViewIsIntact();
      this._isRendering = true;
      this.resetChildViewContainer();
  
      this.triggerMethod('before:render', this);
  
      this._renderTemplate();
      this._renderChildren();
  
      this._isRendering = false;
      this.isRendered = true;
      this.triggerMethod('render', this);
      return this;
    },
  
    _renderChildren: function() {
      if (this.isRendered || this._isRendering) {
        Marionette.CollectionView.prototype._renderChildren.call(this);
      }
    },
  
    // Render the root template that the children
    // views are appended to
    _renderTemplate: function() {
      var data = {};
      data = this.serializeData();
      data = this.mixinTemplateHelpers(data);
  
      this.triggerMethod('before:render:template');
  
      var template = this.getTemplate();
      var html = Marionette.Renderer.render(template, data, this);
      this.attachElContent(html);
  
      // the ui bindings is done here and not at the end of render since they
      // will not be available until after the model is rendered, but should be
      // available before the collection is rendered.
      this.bindUIElements();
      this.triggerMethod('render:template');
    },
  
    // Attaches the content of the root.
    // This method can be overridden to optimize rendering,
    // or to render in a non standard way.
    //
    // For example, using `innerHTML` instead of `$el.html`
    //
    // ```js
    // attachElContent: function(html) {
    //   this.el.innerHTML = html;
    //   return this;
    // }
    // ```
    attachElContent: function(html) {
      this.$el.html(html);
  
      return this;
    },
  
    // You might need to override this if you've overridden attachHtml
    attachBuffer: function(compositeView, buffer) {
      var $container = this.getChildViewContainer(compositeView);
      $container.append(buffer);
    },
  
    // Internal method. Append a view to the end of the $el.
    // Overidden from CollectionView to ensure view is appended to
    // childViewContainer
    _insertAfter: function(childView) {
      var $container = this.getChildViewContainer(this, childView);
      $container.append(childView.el);
    },
  
    // Internal method. Append reordered childView'.
    // Overidden from CollectionView to ensure reordered views
    // are appended to childViewContainer
    _appendReorderedChildren: function(children) {
      var $container = this.getChildViewContainer(this);
      $container.append(children);
    },
  
    // Internal method to ensure an `$childViewContainer` exists, for the
    // `attachHtml` method to use.
    getChildViewContainer: function(containerView, childView) {
      if (!!containerView.$childViewContainer) {
        return containerView.$childViewContainer;
      }
  
      var container;
      var childViewContainer = Marionette.getOption(containerView, 'childViewContainer');
      if (childViewContainer) {
  
        var selector = Marionette._getValue(childViewContainer, containerView);
  
        if (selector.charAt(0) === '@' && containerView.ui) {
          container = containerView.ui[selector.substr(4)];
        } else {
          container = containerView.$(selector);
        }
  
        if (container.length <= 0) {
          throw new Marionette.Error({
            name: 'ChildViewContainerMissingError',
            message: 'The specified "childViewContainer" was not found: ' + containerView.childViewContainer
          });
        }
  
      } else {
        container = containerView.$el;
      }
  
      containerView.$childViewContainer = container;
      return container;
    },
  
    // Internal method to reset the `$childViewContainer` on render
    resetChildViewContainer: function() {
      if (this.$childViewContainer) {
        this.$childViewContainer = undefined;
      }
    }
  });
  
  // Layout View
  // -----------
  
  // Used for managing application layoutViews, nested layoutViews and
  // multiple regions within an application or sub-application.
  //
  // A specialized view class that renders an area of HTML and then
  // attaches `Region` instances to the specified `regions`.
  // Used for composite view management and sub-application areas.
  Marionette.LayoutView = Marionette.ItemView.extend({
    regionClass: Marionette.Region,
  
    options: {
      destroyImmediate: false
    },
  
    // used as the prefix for child view events
    // that are forwarded through the layoutview
    childViewEventPrefix: 'childview',
  
    // Ensure the regions are available when the `initialize` method
    // is called.
    constructor: function(options) {
      options = options || {};
  
      this._firstRender = true;
      this._initializeRegions(options);
  
      Marionette.ItemView.call(this, options);
    },
  
    // LayoutView's render will use the existing region objects the
    // first time it is called. Subsequent calls will destroy the
    // views that the regions are showing and then reset the `el`
    // for the regions to the newly rendered DOM elements.
    render: function() {
      this._ensureViewIsIntact();
  
      if (this._firstRender) {
        // if this is the first render, don't do anything to
        // reset the regions
        this._firstRender = false;
      } else {
        // If this is not the first render call, then we need to
        // re-initialize the `el` for each region
        this._reInitializeRegions();
      }
  
      return Marionette.ItemView.prototype.render.apply(this, arguments);
    },
  
    // Handle destroying regions, and then destroy the view itself.
    destroy: function() {
      if (this.isDestroyed) { return this; }
      // #2134: remove parent element before destroying the child views, so
      // removing the child views doesn't retrigger repaints
      if (this.getOption('destroyImmediate') === true) {
        this.$el.remove();
      }
      this.regionManager.destroy();
      return Marionette.ItemView.prototype.destroy.apply(this, arguments);
    },
  
    showChildView: function(regionName, view, options) {
      var region = this.getRegion(regionName);
      return region.show.apply(region, _.rest(arguments));
    },
  
    getChildView: function(regionName) {
      return this.getRegion(regionName).currentView;
    },
  
    // Add a single region, by name, to the layoutView
    addRegion: function(name, definition) {
      var regions = {};
      regions[name] = definition;
      return this._buildRegions(regions)[name];
    },
  
    // Add multiple regions as a {name: definition, name2: def2} object literal
    addRegions: function(regions) {
      this.regions = _.extend({}, this.regions, regions);
      return this._buildRegions(regions);
    },
  
    // Remove a single region from the LayoutView, by name
    removeRegion: function(name) {
      delete this.regions[name];
      return this.regionManager.removeRegion(name);
    },
  
    // Provides alternative access to regions
    // Accepts the region name
    // getRegion('main')
    getRegion: function(region) {
      return this.regionManager.get(region);
    },
  
    // Get all regions
    getRegions: function() {
      return this.regionManager.getRegions();
    },
  
    // internal method to build regions
    _buildRegions: function(regions) {
      var defaults = {
        regionClass: this.getOption('regionClass'),
        parentEl: _.partial(_.result, this, 'el')
      };
  
      return this.regionManager.addRegions(regions, defaults);
    },
  
    // Internal method to initialize the regions that have been defined in a
    // `regions` attribute on this layoutView.
    _initializeRegions: function(options) {
      var regions;
      this._initRegionManager();
  
      regions = Marionette._getValue(this.regions, this, [options]) || {};
  
      // Enable users to define `regions` as instance options.
      var regionOptions = this.getOption.call(options, 'regions');
  
      // enable region options to be a function
      regionOptions = Marionette._getValue(regionOptions, this, [options]);
  
      _.extend(regions, regionOptions);
  
      // Normalize region selectors hash to allow
      // a user to use the @ui. syntax.
      regions = this.normalizeUIValues(regions, ['selector', 'el']);
  
      this.addRegions(regions);
    },
  
    // Internal method to re-initialize all of the regions by updating the `el` that
    // they point to
    _reInitializeRegions: function() {
      this.regionManager.invoke('reset');
    },
  
    // Enable easy overriding of the default `RegionManager`
    // for customized region interactions and business specific
    // view logic for better control over single regions.
    getRegionManager: function() {
      return new Marionette.RegionManager();
    },
  
    // Internal method to initialize the region manager
    // and all regions in it
    _initRegionManager: function() {
      this.regionManager = this.getRegionManager();
      this.regionManager._parent = this;
  
      this.listenTo(this.regionManager, 'before:add:region', function(name) {
        this.triggerMethod('before:add:region', name);
      });
  
      this.listenTo(this.regionManager, 'add:region', function(name, region) {
        this[name] = region;
        this.triggerMethod('add:region', name, region);
      });
  
      this.listenTo(this.regionManager, 'before:remove:region', function(name) {
        this.triggerMethod('before:remove:region', name);
      });
  
      this.listenTo(this.regionManager, 'remove:region', function(name, region) {
        delete this[name];
        this.triggerMethod('remove:region', name, region);
      });
    },
  
    _getImmediateChildren: function() {
      return _.chain(this.regionManager.getRegions())
        .pluck('currentView')
        .compact()
        .value();
    }
  });
  

  // Behavior
  // --------
  
  // A Behavior is an isolated set of DOM /
  // user interactions that can be mixed into any View.
  // Behaviors allow you to blackbox View specific interactions
  // into portable logical chunks, keeping your views simple and your code DRY.
  
  Marionette.Behavior = Marionette.Object.extend({
    constructor: function(options, view) {
      // Setup reference to the view.
      // this comes in handle when a behavior
      // wants to directly talk up the chain
      // to the view.
      this.view = view;
      this.defaults = _.result(this, 'defaults') || {};
      this.options  = _.extend({}, this.defaults, options);
      // Construct an internal UI hash using
      // the views UI hash and then the behaviors UI hash.
      // This allows the user to use UI hash elements
      // defined in the parent view as well as those
      // defined in the given behavior.
      this.ui = _.extend({}, _.result(view, 'ui'), _.result(this, 'ui'));
  
      Marionette.Object.apply(this, arguments);
    },
  
    // proxy behavior $ method to the view
    // this is useful for doing jquery DOM lookups
    // scoped to behaviors view.
    $: function() {
      return this.view.$.apply(this.view, arguments);
    },
  
    // Stops the behavior from listening to events.
    // Overrides Object#destroy to prevent additional events from being triggered.
    destroy: function() {
      this.stopListening();
  
      return this;
    },
  
    proxyViewProperties: function(view) {
      this.$el = view.$el;
      this.el = view.el;
    }
  });
  
  /* jshint maxlen: 143 */
  // Behaviors
  // ---------
  
  // Behaviors is a utility class that takes care of
  // gluing your behavior instances to their given View.
  // The most important part of this class is that you
  // **MUST** override the class level behaviorsLookup
  // method for things to work properly.
  
  Marionette.Behaviors = (function(Marionette, _) {
    // Borrow event splitter from Backbone
    var delegateEventSplitter = /^(\S+)\s*(.*)$/;
  
    function Behaviors(view, behaviors) {
  
      if (!_.isObject(view.behaviors)) {
        return {};
      }
  
      // Behaviors defined on a view can be a flat object literal
      // or it can be a function that returns an object.
      behaviors = Behaviors.parseBehaviors(view, behaviors || _.result(view, 'behaviors'));
  
      // Wraps several of the view's methods
      // calling the methods first on each behavior
      // and then eventually calling the method on the view.
      Behaviors.wrap(view, behaviors, _.keys(methods));
      return behaviors;
    }
  
    var methods = {
      behaviorTriggers: function(behaviorTriggers, behaviors) {
        var triggerBuilder = new BehaviorTriggersBuilder(this, behaviors);
        return triggerBuilder.buildBehaviorTriggers();
      },
  
      behaviorEvents: function(behaviorEvents, behaviors) {
        var _behaviorsEvents = {};
  
        _.each(behaviors, function(b, i) {
          var _events = {};
          var behaviorEvents = _.clone(_.result(b, 'events')) || {};
  
          // Normalize behavior events hash to allow
          // a user to use the @ui. syntax.
          behaviorEvents = Marionette.normalizeUIKeys(behaviorEvents, getBehaviorsUI(b));
  
          var j = 0;
          _.each(behaviorEvents, function(behaviour, key) {
            var match     = key.match(delegateEventSplitter);
  
            // Set event name to be namespaced using the view cid,
            // the behavior index, and the behavior event index
            // to generate a non colliding event namespace
            // http://api.jquery.com/event.namespace/
            var eventName = match[1] + '.' + [this.cid, i, j++, ' '].join('');
            var selector  = match[2];
  
            var eventKey  = eventName + selector;
            var handler   = _.isFunction(behaviour) ? behaviour : b[behaviour];
            if (!handler) { return; }
            _events[eventKey] = _.bind(handler, b);
          }, this);
  
          _behaviorsEvents = _.extend(_behaviorsEvents, _events);
        }, this);
  
        return _behaviorsEvents;
      }
    };
  
    _.extend(Behaviors, {
  
      // Placeholder method to be extended by the user.
      // The method should define the object that stores the behaviors.
      // i.e.
      //
      // ```js
      // Marionette.Behaviors.behaviorsLookup: function() {
      //   return App.Behaviors
      // }
      // ```
      behaviorsLookup: function() {
        throw new Marionette.Error({
          message: 'You must define where your behaviors are stored.',
          url: 'marionette.behaviors.html#behaviorslookup'
        });
      },
  
      // Takes care of getting the behavior class
      // given options and a key.
      // If a user passes in options.behaviorClass
      // default to using that. Otherwise delegate
      // the lookup to the users `behaviorsLookup` implementation.
      getBehaviorClass: function(options, key) {
        if (options.behaviorClass) {
          return options.behaviorClass;
        }
  
        // Get behavior class can be either a flat object or a method
        return Marionette._getValue(Behaviors.behaviorsLookup, this, [options, key])[key];
      },
  
      // Iterate over the behaviors object, for each behavior
      // instantiate it and get its grouped behaviors.
      parseBehaviors: function(view, behaviors) {
        return _.chain(behaviors).map(function(options, key) {
          var BehaviorClass = Behaviors.getBehaviorClass(options, key);
  
          var behavior = new BehaviorClass(options, view);
          var nestedBehaviors = Behaviors.parseBehaviors(view, _.result(behavior, 'behaviors'));
  
          return [behavior].concat(nestedBehaviors);
        }).flatten().value();
      },
  
      // Wrap view internal methods so that they delegate to behaviors. For example,
      // `onDestroy` should trigger destroy on all of the behaviors and then destroy itself.
      // i.e.
      //
      // `view.delegateEvents = _.partial(methods.delegateEvents, view.delegateEvents, behaviors);`
      wrap: function(view, behaviors, methodNames) {
        _.each(methodNames, function(methodName) {
          view[methodName] = _.partial(methods[methodName], view[methodName], behaviors);
        });
      }
    });
  
    // Class to build handlers for `triggers` on behaviors
    // for views
    function BehaviorTriggersBuilder(view, behaviors) {
      this._view      = view;
      this._behaviors = behaviors;
      this._triggers  = {};
    }
  
    _.extend(BehaviorTriggersBuilder.prototype, {
      // Main method to build the triggers hash with event keys and handlers
      buildBehaviorTriggers: function() {
        _.each(this._behaviors, this._buildTriggerHandlersForBehavior, this);
        return this._triggers;
      },
  
      // Internal method to build all trigger handlers for a given behavior
      _buildTriggerHandlersForBehavior: function(behavior, i) {
        var triggersHash = _.clone(_.result(behavior, 'triggers')) || {};
  
        triggersHash = Marionette.normalizeUIKeys(triggersHash, getBehaviorsUI(behavior));
  
        _.each(triggersHash, _.bind(this._setHandlerForBehavior, this, behavior, i));
      },
  
      // Internal method to create and assign the trigger handler for a given
      // behavior
      _setHandlerForBehavior: function(behavior, i, eventName, trigger) {
        // Unique identifier for the `this._triggers` hash
        var triggerKey = trigger.replace(/^\S+/, function(triggerName) {
          return triggerName + '.' + 'behaviortriggers' + i;
        });
  
        this._triggers[triggerKey] = this._view._buildViewTrigger(eventName);
      }
    });
  
    function getBehaviorsUI(behavior) {
      return behavior._uiBindings || behavior.ui;
    }
  
    return Behaviors;
  
  })(Marionette, _);
  

  // App Router
  // ----------
  
  // Reduce the boilerplate code of handling route events
  // and then calling a single method on another object.
  // Have your routers configured to call the method on
  // your object, directly.
  //
  // Configure an AppRouter with `appRoutes`.
  //
  // App routers can only take one `controller` object.
  // It is recommended that you divide your controller
  // objects in to smaller pieces of related functionality
  // and have multiple routers / controllers, instead of
  // just one giant router and controller.
  //
  // You can also add standard routes to an AppRouter.
  
  Marionette.AppRouter = Backbone.Router.extend({
  
    constructor: function(options) {
      this.options = options || {};
  
      Backbone.Router.apply(this, arguments);
  
      var appRoutes = this.getOption('appRoutes');
      var controller = this._getController();
      this.processAppRoutes(controller, appRoutes);
      this.on('route', this._processOnRoute, this);
    },
  
    // Similar to route method on a Backbone Router but
    // method is called on the controller
    appRoute: function(route, methodName) {
      var controller = this._getController();
      this._addAppRoute(controller, route, methodName);
    },
  
    // process the route event and trigger the onRoute
    // method call, if it exists
    _processOnRoute: function(routeName, routeArgs) {
      // make sure an onRoute before trying to call it
      if (_.isFunction(this.onRoute)) {
        // find the path that matches the current route
        var routePath = _.invert(this.getOption('appRoutes'))[routeName];
        this.onRoute(routeName, routePath, routeArgs);
      }
    },
  
    // Internal method to process the `appRoutes` for the
    // router, and turn them in to routes that trigger the
    // specified method on the specified `controller`.
    processAppRoutes: function(controller, appRoutes) {
      if (!appRoutes) { return; }
  
      var routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes
  
      _.each(routeNames, function(route) {
        this._addAppRoute(controller, route, appRoutes[route]);
      }, this);
    },
  
    _getController: function() {
      return this.getOption('controller');
    },
  
    _addAppRoute: function(controller, route, methodName) {
      var method = controller[methodName];
  
      if (!method) {
        throw new Marionette.Error('Method "' + methodName + '" was not found on the controller');
      }
  
      this.route(route, methodName, _.bind(method, controller));
    },
  
    mergeOptions: Marionette.mergeOptions,
  
    // Proxy `getOption` to enable getting options from this or this.options by name.
    getOption: Marionette.proxyGetOption,
  
    triggerMethod: Marionette.triggerMethod,
  
    bindEntityEvents: Marionette.proxyBindEntityEvents,
  
    unbindEntityEvents: Marionette.proxyUnbindEntityEvents
  });
  
  // Application
  // -----------
  
  // Contain and manage the composite application as a whole.
  // Stores and starts up `Region` objects, includes an
  // event aggregator as `app.vent`
  Marionette.Application = Marionette.Object.extend({
    constructor: function(options) {
      this._initializeRegions(options);
      this._initCallbacks = new Marionette.Callbacks();
      this.submodules = {};
      _.extend(this, options);
      this._initChannel();
      Marionette.Object.apply(this, arguments);
    },
  
    // Command execution, facilitated by Backbone.Wreqr.Commands
    execute: function() {
      this.commands.execute.apply(this.commands, arguments);
    },
  
    // Request/response, facilitated by Backbone.Wreqr.RequestResponse
    request: function() {
      return this.reqres.request.apply(this.reqres, arguments);
    },
  
    // Add an initializer that is either run at when the `start`
    // method is called, or run immediately if added after `start`
    // has already been called.
    addInitializer: function(initializer) {
      this._initCallbacks.add(initializer);
    },
  
    // kick off all of the application's processes.
    // initializes all of the regions that have been added
    // to the app, and runs all of the initializer functions
    start: function(options) {
      this.triggerMethod('before:start', options);
      this._initCallbacks.run(options, this);
      this.triggerMethod('start', options);
    },
  
    // Add regions to your app.
    // Accepts a hash of named strings or Region objects
    // addRegions({something: "#someRegion"})
    // addRegions({something: Region.extend({el: "#someRegion"}) });
    addRegions: function(regions) {
      return this._regionManager.addRegions(regions);
    },
  
    // Empty all regions in the app, without removing them
    emptyRegions: function() {
      return this._regionManager.emptyRegions();
    },
  
    // Removes a region from your app, by name
    // Accepts the regions name
    // removeRegion('myRegion')
    removeRegion: function(region) {
      return this._regionManager.removeRegion(region);
    },
  
    // Provides alternative access to regions
    // Accepts the region name
    // getRegion('main')
    getRegion: function(region) {
      return this._regionManager.get(region);
    },
  
    // Get all the regions from the region manager
    getRegions: function() {
      return this._regionManager.getRegions();
    },
  
    // Create a module, attached to the application
    module: function(moduleNames, moduleDefinition) {
  
      // Overwrite the module class if the user specifies one
      var ModuleClass = Marionette.Module.getClass(moduleDefinition);
  
      var args = _.toArray(arguments);
      args.unshift(this);
  
      // see the Marionette.Module object for more information
      return ModuleClass.create.apply(ModuleClass, args);
    },
  
    // Enable easy overriding of the default `RegionManager`
    // for customized region interactions and business-specific
    // view logic for better control over single regions.
    getRegionManager: function() {
      return new Marionette.RegionManager();
    },
  
    // Internal method to initialize the regions that have been defined in a
    // `regions` attribute on the application instance
    _initializeRegions: function(options) {
      var regions = _.isFunction(this.regions) ? this.regions(options) : this.regions || {};
  
      this._initRegionManager();
  
      // Enable users to define `regions` in instance options.
      var optionRegions = Marionette.getOption(options, 'regions');
  
      // Enable region options to be a function
      if (_.isFunction(optionRegions)) {
        optionRegions = optionRegions.call(this, options);
      }
  
      // Overwrite current regions with those passed in options
      _.extend(regions, optionRegions);
  
      this.addRegions(regions);
  
      return this;
    },
  
    // Internal method to set up the region manager
    _initRegionManager: function() {
      this._regionManager = this.getRegionManager();
      this._regionManager._parent = this;
  
      this.listenTo(this._regionManager, 'before:add:region', function() {
        Marionette._triggerMethod(this, 'before:add:region', arguments);
      });
  
      this.listenTo(this._regionManager, 'add:region', function(name, region) {
        this[name] = region;
        Marionette._triggerMethod(this, 'add:region', arguments);
      });
  
      this.listenTo(this._regionManager, 'before:remove:region', function() {
        Marionette._triggerMethod(this, 'before:remove:region', arguments);
      });
  
      this.listenTo(this._regionManager, 'remove:region', function(name) {
        delete this[name];
        Marionette._triggerMethod(this, 'remove:region', arguments);
      });
    },
  
    // Internal method to setup the Wreqr.radio channel
    _initChannel: function() {
      this.channelName = _.result(this, 'channelName') || 'global';
      this.channel = _.result(this, 'channel') || Backbone.Wreqr.radio.channel(this.channelName);
      this.vent = _.result(this, 'vent') || this.channel.vent;
      this.commands = _.result(this, 'commands') || this.channel.commands;
      this.reqres = _.result(this, 'reqres') || this.channel.reqres;
    }
  });
  
  /* jshint maxparams: 9 */
  
  // Module
  // ------
  
  // A simple module system, used to create privacy and encapsulation in
  // Marionette applications
  Marionette.Module = function(moduleName, app, options) {
    this.moduleName = moduleName;
    this.options = _.extend({}, this.options, options);
    // Allow for a user to overide the initialize
    // for a given module instance.
    this.initialize = options.initialize || this.initialize;
  
    // Set up an internal store for sub-modules.
    this.submodules = {};
  
    this._setupInitializersAndFinalizers();
  
    // Set an internal reference to the app
    // within a module.
    this.app = app;
  
    if (_.isFunction(this.initialize)) {
      this.initialize(moduleName, app, this.options);
    }
  };
  
  Marionette.Module.extend = Marionette.extend;
  
  // Extend the Module prototype with events / listenTo, so that the module
  // can be used as an event aggregator or pub/sub.
  _.extend(Marionette.Module.prototype, Backbone.Events, {
  
    // By default modules start with their parents.
    startWithParent: true,
  
    // Initialize is an empty function by default. Override it with your own
    // initialization logic when extending Marionette.Module.
    initialize: function() {},
  
    // Initializer for a specific module. Initializers are run when the
    // module's `start` method is called.
    addInitializer: function(callback) {
      this._initializerCallbacks.add(callback);
    },
  
    // Finalizers are run when a module is stopped. They are used to teardown
    // and finalize any variables, references, events and other code that the
    // module had set up.
    addFinalizer: function(callback) {
      this._finalizerCallbacks.add(callback);
    },
  
    // Start the module, and run all of its initializers
    start: function(options) {
      // Prevent re-starting a module that is already started
      if (this._isInitialized) { return; }
  
      // start the sub-modules (depth-first hierarchy)
      _.each(this.submodules, function(mod) {
        // check to see if we should start the sub-module with this parent
        if (mod.startWithParent) {
          mod.start(options);
        }
      });
  
      // run the callbacks to "start" the current module
      this.triggerMethod('before:start', options);
  
      this._initializerCallbacks.run(options, this);
      this._isInitialized = true;
  
      this.triggerMethod('start', options);
    },
  
    // Stop this module by running its finalizers and then stop all of
    // the sub-modules for this module
    stop: function() {
      // if we are not initialized, don't bother finalizing
      if (!this._isInitialized) { return; }
      this._isInitialized = false;
  
      this.triggerMethod('before:stop');
  
      // stop the sub-modules; depth-first, to make sure the
      // sub-modules are stopped / finalized before parents
      _.invoke(this.submodules, 'stop');
  
      // run the finalizers
      this._finalizerCallbacks.run(undefined, this);
  
      // reset the initializers and finalizers
      this._initializerCallbacks.reset();
      this._finalizerCallbacks.reset();
  
      this.triggerMethod('stop');
    },
  
    // Configure the module with a definition function and any custom args
    // that are to be passed in to the definition function
    addDefinition: function(moduleDefinition, customArgs) {
      this._runModuleDefinition(moduleDefinition, customArgs);
    },
  
    // Internal method: run the module definition function with the correct
    // arguments
    _runModuleDefinition: function(definition, customArgs) {
      // If there is no definition short circut the method.
      if (!definition) { return; }
  
      // build the correct list of arguments for the module definition
      var args = _.flatten([
        this,
        this.app,
        Backbone,
        Marionette,
        Backbone.$, _,
        customArgs
      ]);
  
      definition.apply(this, args);
    },
  
    // Internal method: set up new copies of initializers and finalizers.
    // Calling this method will wipe out all existing initializers and
    // finalizers.
    _setupInitializersAndFinalizers: function() {
      this._initializerCallbacks = new Marionette.Callbacks();
      this._finalizerCallbacks = new Marionette.Callbacks();
    },
  
    // import the `triggerMethod` to trigger events with corresponding
    // methods if the method exists
    triggerMethod: Marionette.triggerMethod
  });
  
  // Class methods to create modules
  _.extend(Marionette.Module, {
  
    // Create a module, hanging off the app parameter as the parent object.
    create: function(app, moduleNames, moduleDefinition) {
      var module = app;
  
      // get the custom args passed in after the module definition and
      // get rid of the module name and definition function
      var customArgs = _.drop(arguments, 3);
  
      // Split the module names and get the number of submodules.
      // i.e. an example module name of `Doge.Wow.Amaze` would
      // then have the potential for 3 module definitions.
      moduleNames = moduleNames.split('.');
      var length = moduleNames.length;
  
      // store the module definition for the last module in the chain
      var moduleDefinitions = [];
      moduleDefinitions[length - 1] = moduleDefinition;
  
      // Loop through all the parts of the module definition
      _.each(moduleNames, function(moduleName, i) {
        var parentModule = module;
        module = this._getModule(parentModule, moduleName, app, moduleDefinition);
        this._addModuleDefinition(parentModule, module, moduleDefinitions[i], customArgs);
      }, this);
  
      // Return the last module in the definition chain
      return module;
    },
  
    _getModule: function(parentModule, moduleName, app, def, args) {
      var options = _.extend({}, def);
      var ModuleClass = this.getClass(def);
  
      // Get an existing module of this name if we have one
      var module = parentModule[moduleName];
  
      if (!module) {
        // Create a new module if we don't have one
        module = new ModuleClass(moduleName, app, options);
        parentModule[moduleName] = module;
        // store the module on the parent
        parentModule.submodules[moduleName] = module;
      }
  
      return module;
    },
  
    // ## Module Classes
    //
    // Module classes can be used as an alternative to the define pattern.
    // The extend function of a Module is identical to the extend functions
    // on other Backbone and Marionette classes.
    // This allows module lifecyle events like `onStart` and `onStop` to be called directly.
    getClass: function(moduleDefinition) {
      var ModuleClass = Marionette.Module;
  
      if (!moduleDefinition) {
        return ModuleClass;
      }
  
      // If all of the module's functionality is defined inside its class,
      // then the class can be passed in directly. `MyApp.module("Foo", FooModule)`.
      if (moduleDefinition.prototype instanceof ModuleClass) {
        return moduleDefinition;
      }
  
      return moduleDefinition.moduleClass || ModuleClass;
    },
  
    // Add the module definition and add a startWithParent initializer function.
    // This is complicated because module definitions are heavily overloaded
    // and support an anonymous function, module class, or options object
    _addModuleDefinition: function(parentModule, module, def, args) {
      var fn = this._getDefine(def);
      var startWithParent = this._getStartWithParent(def, module);
  
      if (fn) {
        module.addDefinition(fn, args);
      }
  
      this._addStartWithParent(parentModule, module, startWithParent);
    },
  
    _getStartWithParent: function(def, module) {
      var swp;
  
      if (_.isFunction(def) && (def.prototype instanceof Marionette.Module)) {
        swp = module.constructor.prototype.startWithParent;
        return _.isUndefined(swp) ? true : swp;
      }
  
      if (_.isObject(def)) {
        swp = def.startWithParent;
        return _.isUndefined(swp) ? true : swp;
      }
  
      return true;
    },
  
    _getDefine: function(def) {
      if (_.isFunction(def) && !(def.prototype instanceof Marionette.Module)) {
        return def;
      }
  
      if (_.isObject(def)) {
        return def.define;
      }
  
      return null;
    },
  
    _addStartWithParent: function(parentModule, module, startWithParent) {
      module.startWithParent = module.startWithParent && startWithParent;
  
      if (!module.startWithParent || !!module.startWithParentIsConfigured) {
        return;
      }
  
      module.startWithParentIsConfigured = true;
  
      parentModule.addInitializer(function(options) {
        if (module.startWithParent) {
          module.start(options);
        }
      });
    }
  });
  

  return Marionette;
}));


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(105)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Handlebars) { Handlebars.registerPartial("datatableFilterForm", Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<form id=\"table_filter_form\">\r\n  <div id=\"table_filter_toolbar\" class=\"formulario_legend\"></div>\r\n  <fieldset id=\"table_filter_fieldset\" class=\"rup-table-filter-fieldset\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"id_filter_table\" class=\"formulario_linea_label\">Id:</label>\r\n          <input type=\"text\" name=\"id\" class=\"formulario_linea_input form-control\" id=\"id_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"nombre_filter_table\" class=\"formulario_linea_label\">Nombre:</label>\r\n          <input type=\"text\" name=\"nombre\" class=\"formulario_linea_input form-control\" id=\"nombre_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"apellido1_filter_table\" class=\"formulario_linea_label\">Primer apellido:</label>\r\n          <input type=\"text\" name=\"apellido1\" class=\"formulario_linea_input form-control\" id=\"apellido1_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"apellido2_filter_table\" class=\"formulario_linea_label\">Segundo apellido:</label>\r\n          <input type=\"text\" name=\"apellido2\" class=\"formulario_linea_input form-control\" id=\"apellido2_filter_table\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"ejie_filter_table\" class=\"formulario_linea_label\">Ejie:</label>\r\n          <div style=\"float: left;\"><select id=\"ejie_filter_table\" name=\"ejie\" class=\"rup-combo form-control\" ></select></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"fechaAlta_filter_table\" class=\"formulario_linea_label\">Fecha de alta:</label>\r\n          <input type=\"text\" name=\"fechaAlta\" class=\"formulario_linea_input form-control\" id=\"fechaAlta_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"fechaBaja_filter_table\" class=\"formulario_linea_label\">Fecha de baja:</label>\r\n          <input type=\"text\" name=\"fechaBaja\" class=\"formulario_linea_input form-control\" id=\"fechaBaja_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"rol_filter_table\" class=\"formulario_linea_label\">Rol:</label>\r\n          <input type=\"text\" name=\"rol\" class=\"formulario_linea_input form-control\" id=\"rol_filter_table\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div id=\"table_filter_buttonSet\" class=\"right_buttons\">\r\n\r\n        <a id=\"table_filter_cleanLink\" href=\"javascript:void(0)\" class=\"rup-enlaceCancelar\">Limpiar</a>\r\n        <button id=\"table_filter_filterButton\" type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all\" >Filtrar</button>\r\n    </div>\r\n  </fieldset>\r\n</form>\r\n";
},"useData":true}));
this["App"] = this["App"] || {};
this["App"]["Templates"] = this["App"]["Templates"] || {};
this["App"]["Templates"]["demo"] = this["App"]["Templates"]["demo"] || {};
this["App"]["Templates"]["demo"]["app"] = this["App"]["Templates"]["demo"]["app"] || {};
this["App"]["Templates"]["demo"]["app"]["dashboard"] = this["App"]["Templates"]["demo"]["app"]["dashboard"] || {};
this["App"]["Templates"]["demo"]["app"]["dashboard"]["dashboardBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"button-view\">\r\n  <h3>Escritorio</h3>\r\n  <p>\r\n    El Escritorio te ofrece una visión general de la información que usas a diario.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["dashboard"]["dashboardHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "";
},"useData":true});
Handlebars.registerPartial("detailButtonSet", Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"ui-dialog-buttonset\">\r\n    <button id=\"table_detail_button_save\" type=\"button\">\r\n        Guardar\r\n    </button>\r\n    <button id=\"table_detail_button_save_repeat\" type=\"button\">\r\n        Guardar y continuar\r\n    </button>\r\n    <a href=\"javascript:void(0)\" role=\"button\" id=\"table_detail_link_cancel\"\r\n        class=\"rup-enlaceCancelar\">\r\n        Cancelar\r\n    </a>\r\n</div>\r\n";
},"useData":true}));
this["App"]["Templates"]["demo"]["app"]["dashboard"]["dashboardJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "";
},"useData":true});
Handlebars.registerPartial("detailForm", Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<form id=\"table_detail_form\">\r\n    <div id =\"table_detail_feedback\"></div>\r\n    <div class=\"floating_left_pad_right\">\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"id_detailForm_table\">Id:</label>\r\n            <input type=\"text\" name=\"id\" class=\"formulario_linea_input\" id=\"id_detailForm_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"nombre_detail_table\">Nombre:</label>\r\n            <input type=\"text\" name=\"nombre\" class=\"formulario_linea_input\" id=\"nombre_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"apellido1_detail_table\">Primer apellido:</label>\r\n            <input type=\"text\" name=\"apellido1\" class=\"formulario_linea_input\" id=\"apellido1_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"apellido2_detail_table\">Segundo apellido:</label>\r\n            <input type=\"text\" name=\"apellido2\" class=\"formulario_linea_input\" id=\"apellido2_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"ejie_detail_table\">Ejie:</label>\r\n            <input type=\"checkbox\" id=\"ejie_detail_table\" name=\"ejie\"  value=\"1\"/>\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"fechaAlta_detail_table\">Fecha de alta:</label>\r\n            <input type=\"text\" name=\"fechaAlta\" class=\"formulario_linea_input\" id=\"fechaAlta_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\" style=\"clear: left;\">\r\n            <label for=\"fechaBaja_detail_table\">Fecha de baja:</label>\r\n            <input type=\"text\" name=\"fechaBaja\" class=\"formulario_linea_input\" id=\"fechaBaja_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"rol_detail_table\">Rol:</label>\r\n            <select id=\"rol_detail_table\" name=\"rol\" class=\"formulario_linea_input\" ></select>\r\n        </div>\r\n    </div>\r\n</form>";
},"useData":true}));
this["App"]["Templates"]["demo"]["app"]["dashboard"]["dashboardTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"container-fluid dashboard-container\">\r\n\r\n\r\n  <!-- New Dashboard dialog -->\r\n  <div id=\"newDashboardDialog\" style=\"display:none\">\r\n    <div class=\"row col-md-12\">\r\n      <p>Se va a crear un nuevo escritorio.</p>\r\n      <p>Para ello, debe de introducir un nombre con el que se identificará.</p>\r\n    </div>\r\n    <div class=\"row col-md-12\">\r\n      <div class=\"form-group\">\r\n			     <label for=\"feedback_type\">Nombre:</label>\r\n					 <input id=\"feedback_imgClass\" class=\"form-control\" type=\"text\" placeholder=\"feedbackImgPruebas\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- New Dashboard dialog -->\r\n  <div id=\"addWidgetDialog\">\r\n    <div class=\"row col-md-12\">\r\n      <p>Se va a añadir un widget al escritorio.</p>\r\n      <p>Por fevor, seleccione el widget que desea añadir:</p>\r\n    </div>\r\n    <div class=\"row col-md-12\">\r\n      <div class=\"form-group\">\r\n        <ul class=\"list-group\">\r\n          <a id=\"newWidgetHtmlInline\" class=\"list-group-item\" >\r\n            <h5 class=\"list-group-item-heading\">Widget HTML inline</h5>\r\n            <p class=\"list-group-item-text\">El contenido del widget consiste en código HTML indicado como parámetro en la declaración del mismo.</p>\r\n          </a>\r\n          <a  id=\"newWidgetTemplateInline\" class=\"list-group-item\">\r\n            <h5 class=\"list-group-item-heading\">Widget HTML Inline</h5>\r\n            <p class=\"list-group-item-text\">El contenido del widget se define en un <code>div</code> existente en la propia página.</p>\r\n          </a>\r\n          <a  id=\"newWidgetTemplateXhr\" class=\"list-group-item\">\r\n            <h5 class=\"list-group-item-heading\">Widget HTML Remoto</h5>\r\n            <p class=\"list-group-item-text\">El contenido del widget se obtiene a partir de la respuesta HTML realizada a la <code>url</code> especificada en la definición del widget.</p>\r\n          </a>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- FAB Button -->\r\n  <button type=\"button\" id=\"fabButton\" data-fab=\"true\" data-fixed=\"true\" data-layer=\"fabButtonDiv\"><span class=\"glyphicon glyphicon-cog\" /></button>\r\n  <div id=\"fabButtonDiv\">\r\n\r\n	</div>\r\n  <div class=\"dashboard-aside\">\r\n    <div class=\"dashboard-menu-title\">\r\n      <a id=\"currentDashboardLink\">\r\n        <i class=\"fa fa-tachometer\" aria-hidden=\"true\"></i><span class=\"current-dashboard\" id=\"currentDashboard\"></span>\r\n      </a>\r\n    </div>\r\n    <ul>\r\n      <li>\r\n        <a data-toggle=\"collapse\" href=\"#dashboardList\" aria-expanded=\"false\" aria-controls=\"dashboardList\">\r\n          <i class=\"fa fa-desktop\" aria-hidden=\"true\"></i><span>Escritorios</span>\r\n        </a>\r\n        <div class=\"collapse\" id=\"dashboardList\">\r\n          <ul>\r\n\r\n          </ul>\r\n        </div>\r\n\r\n      </li>\r\n      <li>\r\n        <a data-toggle=\"collapse\" href=\"#toolsList\" aria-expanded=\"false\" aria-controls=\"toolsList\">\r\n          <i class=\"fa fa-cog\" aria-hidden=\"true\"></i><span>Acciones</span>\r\n        </a>\r\n        <div class=\"collapse\" id=\"toolsList\">\r\n          <ul>\r\n            <li><a id=\"addWidget\">Añadir widget</a></li>\r\n            <li><a id=\"newDashboard\">Nuevo Escritorio</a></li>\r\n            <li><a id=\"deleteDashboard\">Eliminar Escritorio</a></li>\r\n            <li><a id=\"saveDashboard\">Guardar Escritorio</a></li>\r\n          </ul>\r\n        </div>\r\n\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"dashboard-main\">\r\n    <div class=\"\">\r\n\r\n      <section>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <br/>\r\n          <div>\r\n        </div>\r\n      </section>\r\n\r\n      <div id=\"dashboard\" class=\"grid-stack\" >\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <script type=\"text/template\" id=\"templateInline\">\r\n\r\n    Prueba de template\r\n    </script>\r\n\r\n\r\n    <script type=\"text/template\" id=\"templateConfig\">\r\n\r\n    Dialogo de configuración\r\n    </script>\r\n  </div>\r\n</div>\r\n";
},"useData":true});
Handlebars.registerPartial("filterForm", Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<form id=\"table_filter_form\">\r\n  <div id=\"table_filter_toolbar\" class=\"formulario_legend\"></div>\r\n  <fieldset id=\"table_filter_fieldset\" class=\"rup-table-filter-fieldset\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"id_filter_table\" class=\"formulario_linea_label\">Id:</label>\r\n          <input type=\"text\" name=\"id\" class=\"formulario_linea_input form-control\" id=\"id_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"nombre_filter_table\" class=\"formulario_linea_label\">Nombre:</label>\r\n          <input type=\"text\" name=\"nombre\" class=\"formulario_linea_input form-control\" id=\"nombre_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"apellido1_filter_table\" class=\"formulario_linea_label\">Primer apellido:</label>\r\n          <input type=\"text\" name=\"apellido1\" class=\"formulario_linea_input form-control\" id=\"apellido1_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"apellido2_filter_table\" class=\"formulario_linea_label\">Segundo apellido:</label>\r\n          <input type=\"text\" name=\"apellido2\" class=\"formulario_linea_input form-control\" id=\"apellido2_filter_table\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"ejie_filter_table\" class=\"formulario_linea_label\">Ejie:</label>\r\n          <div style=\"float: left;\"><select id=\"ejie_filter_table\" name=\"ejie\" class=\"rup-combo form-control\" ></select></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"fechaAlta_filter_table\" class=\"formulario_linea_label\">Fecha de alta:</label>\r\n          <input type=\"text\" name=\"fechaAlta\" class=\"formulario_linea_input form-control\" id=\"fechaAlta_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"fechaBaja_filter_table\" class=\"formulario_linea_label\">Fecha de baja:</label>\r\n          <input type=\"text\" name=\"fechaBaja\" class=\"formulario_linea_input form-control\" id=\"fechaBaja_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"rol_filter_table\" class=\"formulario_linea_label\">Rol:</label>\r\n          <input type=\"text\" name=\"rol\" class=\"formulario_linea_input form-control\" id=\"rol_filter_table\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div id=\"table_filter_buttonSet\" class=\"right_buttons\">\r\n\r\n        <a id=\"table_filter_cleanLink\" href=\"javascript:void(0)\" class=\"rup-enlaceCancelar\">Limpiar</a>\r\n        <button id=\"table_filter_filterButton\" type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all\" >Filtrar</button>\r\n    </div>\r\n  </fieldset>\r\n</form>\r\n";
},"useData":true}));
Handlebars.registerPartial("basic", Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<span class=\"btn btn-success fileinput-button\">\r\n      <i class=\"glyphicon glyphicon-plus\"></i>\r\n      <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : {},"upload.button.addFiles",{"name":"i18n","hash":{},"data":data}))
    + "</span>\r\n      <input id=\"basicFileupload\" type=\"file\" name=\"files[]\" data-url=\"../upload\" multiple=\"multiple\" />\r\n</span>\r\n<span id=\"basicFileuploadContext\"></span>\r\n";
},"useData":true}));
this["App"]["Templates"]["demo"]["app"]["dashboard"]["dashboardTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"dashboard\" class=\"grid-stack\" >\r\n\r\n</div>\r\n";
},"useData":true});
Handlebars.registerPartial("treeTestExample", Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<ul>\r\n  <li id=\"node1\">\r\n    <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo1",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n    <ul>\r\n      <li id=\"node11\">\r\n        <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo2",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n        <ul>\r\n          <li id=\"node111\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n          </li>\r\n          <li id=\"node112\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo3",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n            <ul>\r\n              <li id=\"node1121\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li id=\"node113\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo3",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n            <ul>\r\n              <li id=\"node1131\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n              <li id=\"node1132\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li id=\"node12\">\r\n        <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo2",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n        <ul>\r\n          <li id=\"node121\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo3",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n            <ul>\r\n              <li id=\"node1211\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n              <li id=\"node1212\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n              <li id=\"node1213\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n              <li id=\"node1214\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li id=\"node122\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li id=\"node13\">\r\n        <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n  <li id=\"node2\">\r\n    <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n  </li>\r\n</ul>\r\n";
},"useData":true}));
this["App"]["Templates"]["demo"]["app"]["datatable"] = this["App"]["Templates"]["demo"]["app"]["datatable"] || {};
this["App"]["Templates"]["demo"]["app"]["datatable"]["_datatableFilterForm"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<form id=\"table_filter_form\">\r\n  <div id=\"table_filter_toolbar\" class=\"formulario_legend\"></div>\r\n  <fieldset id=\"table_filter_fieldset\" class=\"rup-table-filter-fieldset\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"id_filter_table\" class=\"formulario_linea_label\">Id:</label>\r\n          <input type=\"text\" name=\"id\" class=\"formulario_linea_input form-control\" id=\"id_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"nombre_filter_table\" class=\"formulario_linea_label\">Nombre:</label>\r\n          <input type=\"text\" name=\"nombre\" class=\"formulario_linea_input form-control\" id=\"nombre_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"apellido1_filter_table\" class=\"formulario_linea_label\">Primer apellido:</label>\r\n          <input type=\"text\" name=\"apellido1\" class=\"formulario_linea_input form-control\" id=\"apellido1_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"apellido2_filter_table\" class=\"formulario_linea_label\">Segundo apellido:</label>\r\n          <input type=\"text\" name=\"apellido2\" class=\"formulario_linea_input form-control\" id=\"apellido2_filter_table\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"ejie_filter_table\" class=\"formulario_linea_label\">Ejie:</label>\r\n          <div style=\"float: left;\"><select id=\"ejie_filter_table\" name=\"ejie\" class=\"rup-combo form-control\" ></select></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"fechaAlta_filter_table\" class=\"formulario_linea_label\">Fecha de alta:</label>\r\n          <input type=\"text\" name=\"fechaAlta\" class=\"formulario_linea_input form-control\" id=\"fechaAlta_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"fechaBaja_filter_table\" class=\"formulario_linea_label\">Fecha de baja:</label>\r\n          <input type=\"text\" name=\"fechaBaja\" class=\"formulario_linea_input form-control\" id=\"fechaBaja_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"rol_filter_table\" class=\"formulario_linea_label\">Rol:</label>\r\n          <input type=\"text\" name=\"rol\" class=\"formulario_linea_input form-control\" id=\"rol_filter_table\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div id=\"table_filter_buttonSet\" class=\"right_buttons\">\r\n\r\n        <a id=\"table_filter_cleanLink\" href=\"javascript:void(0)\" class=\"rup-enlaceCancelar\">Limpiar</a>\r\n        <button id=\"table_filter_filterButton\" type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all\" >Filtrar</button>\r\n    </div>\r\n  </fieldset>\r\n</form>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["datatable"]["datatableTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "\r\n\r\n"
    + ((stack1 = container.invokePartial(partials.datatableFilterForm,depth0,{"name":"datatableFilterForm","data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\r\n\r\n<table id=\"example\" class=\"table table-striped table-bordered\" cellspacing=\"0\" width=\"100%\">\r\n        <thead>\r\n            <tr>\r\n                <th data-col-prop=\"id\">Id</th>\r\n                <th data-col-prop=\"nombre\">Nombre</th>\r\n                <th data-col-prop=\"apellido1\">Primer apellido</th>\r\n                <th data-col-prop=\"ejie\">Ejie</th>\r\n                <th data-col-prop=\"fechaAlta\">Fecha alta</th>\r\n                <th data-col-prop=\"fechaBaja\">Fecha baja</th>\r\n                <th data-col-prop=\"rol\">Rol</th>\r\n            </tr>\r\n        </thead>\r\n        <tfoot>\r\n          <tr>\r\n              <th>Id</th>\r\n              <th>Nombre</th>\r\n              <th>Primer apellido</th>\r\n              <th>Ejie</th>\r\n              <th>Fecha alta</th>\r\n              <th>Fecha baja</th>\r\n              <th>Rol</th>\r\n          </tr>\r\n        </tfoot>\r\n</table>\r\n";
},"usePartial":true,"useData":true});
this["App"]["Templates"]["demo"]["app"]["styleGuide"] = this["App"]["Templates"]["demo"]["app"]["styleGuide"] || {};
this["App"]["Templates"]["demo"]["app"]["styleGuide"]["styleGuideTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n\r\n<div id=\"contenedor\">\r\n  <section>\r\n    <h2 class=\"page-header\">Tipografía</h2>\r\n\r\n\r\n    <p>El tema por defecto de UDA define una serie de estilos predeterminados para las aplicaciones.</p>\r\n\r\n    <p>Así pues, se consideran los siguientes valores:</p>\r\n\r\n    <ul>\r\n      <li><code>font-family</code> : El tipo de letra utilizado por defecto es \"Open Sans\".</li>\r\n      <li><code>font-size</code> : Se establece un valor de <strong>12px</strong> para el tamaño de letra</li>\r\n    </ul>\r\n\r\n    <div class=\"example\">\r\n      <h1>h1. Encabezado <small>Texto secundario</small></h1>\r\n      <h2>h2. Encabezado <small>Texto secundario</small></h2>\r\n      <h3>h3. Encabezado <small>Texto secundario</small></h3>\r\n      <h4>h4. Encabezado <small>Texto secundario</small></h4>\r\n      <h5>h5. Encabezado <small>Texto secundario</small></h5>\r\n      <h6>h6. Encabezado <small>Texto secundario</small></h6>\r\n    </div>\r\n\r\n  </section>\r\n\r\n  <section>\r\n    <h2 class=\"page-header\">Botones</h2>\r\n\r\n    <p>Se determina una misma apariencia para los botones nativos HTML, de bootstrap y UDA.</p>\r\n\r\n    <p>Así pues la apariencia de los botones nativos <code>button</code>, <code>&lt;input type=\"text\" /&gt;</code> y <code>&lt;input type=\"submit\" /&gt;</code>sería:</p>\r\n\r\n    <div class=\"example\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <button class=\"\" type=\"submit\">Submit</button>\r\n          <button class=\"\" >Botón defecto</button>\r\n          <input type=\"button\" value=\"Input button\" />\r\n          <input type=\"submit\" value=\"Input submit\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <p>Los botones de bootstrap <code>.btn</code> se visualizarían del siguiente modo:</p>\r\n\r\n    <div class=\"example\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <!-- Standard button -->\r\n          <button type=\"button\" class=\"btn btn-primary\">Principal</button>\r\n\r\n          <!-- Provides extra visual weight and identifies the primary action in a set of buttons -->\r\n          <button type=\"button\" class=\"btn btn-secondary\">Secundario</button>\r\n\r\n          <!-- Indicates a successful or positive action -->\r\n          <button type=\"button\" class=\"btn btn-success\">Success</button>\r\n\r\n          <!-- Contextual button for informational alert messages -->\r\n          <button type=\"button\" class=\"btn btn-info\">Info</button>\r\n\r\n          <!-- Indicates caution should be taken with this action -->\r\n          <button type=\"button\" class=\"btn btn-warning\">Warning</button>\r\n\r\n          <!-- Indicates a dangerous or potentially negative action -->\r\n          <button type=\"button\" class=\"btn btn-danger\">Danger</button>\r\n\r\n          <!-- Deemphasize a button by making it look like a link while maintaining button behavior -->\r\n          <button type=\"button\" class=\"btn btn-link\">Link</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <p>Este sería el aspecto de los botones <code>rup_button</code> de UDA:</p>\r\n\r\n    <div class=\"example\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <!-- Standard button -->\r\n          <button type=\"button\" class=\"rup-button\">Default</button>\r\n\r\n          <button type=\"button\" id=\"dropdownHtmlListButton\">Lista HTML</button>\r\n          <ul id=\"dropdownHtmlList\" class=\"rup-dropdown-option-list\">\r\n          	<li><a href=\"#\" id=\"dropdownElem1\">Elemento 1</a></li>\r\n          	<li><a href=\"#\" id=\"dropdownElem2\">Elemento 2</a></li>\r\n          	<li><a href=\"#\" id=\"dropdownElem3\">Elemento 3</a></li>\r\n          	<li class=\"divider\"></li>\r\n          	<li><a href=\"#\" id=\"dropdownElem4\">Elemento 4</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section>\r\n    <h2 class=\"page-header\">Formulario</h2>\r\n\r\n    <p>El tema de UDA proporciona una apariencia unificada de los diferentes elementos que pueden estar presentes en un formulario.</p>\r\n\r\n    <h3>Campos de texto</h3>\r\n\r\n    <p>Se busca normalizar la apariencia de los campos de texto por defecto así como de los que hacen uso de los estilos de bootstrap.</p>\r\n    <p>Un campo de texto por defecto hace uso de las siguientes propiedades de css:</p>\r\n\r\n    <ul>\r\n      <li><code>font-family</code> : El tipo de letra utilizado por defecto es \"Open Sans\".</li>\r\n      <li><code>font-size</code> : Se establece un valor de <strong>1rem</strong> para el tamaño de letra. Como es relativo al tamaño base definido para <code>html</code> el valor por defecto será de <strong>12px</strong>.</li>\r\n      <li><code>height</code> : Se establece un valor de <strong>2rem</strong> para la altura del campo de texto. Como es relativo al tamaño base definido para <code>html</code> el valor por defecto será de <strong>24px</strong>.</li>\r\n    </ul>\r\n\r\n    <div class=\"example\">\r\n      <label for=\"textFieldDefault\">Campo de texto por defecto</label>\r\n      <input type=\"text\" id=\"textFieldDefault\" placeholder=\"default\"/>\r\n    </div>\r\n\r\n    <p>En caso de utilizar los estilos de bootstrap a la hora de diseñar los campos de los formularios el estilo será similar.</p>\r\n\r\n    <div class=\"example\">\r\n      <div class=\"form-group\">\r\n        <label for=\"textFieldBootstrap\">Campo de texto Bootstrap</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"textFieldBootstrap\" placeholder=\".form-control\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"passwordFieldBootstrap\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"passwordFieldBootstrap\" placeholder=\"Password\">\r\n      </div>\r\n    </div>\r\n\r\n    <h4>Tamaños</h4>\r\n\r\n    <p>Mediante determinadas clases es posible modificar el tamaño de los campos de entrada.</p>\r\n\r\n    <div class=\"example\">\r\n      <input type=\"text\" class=\"form-control form-control-lg\" id=\"textFieldBootstrap\" placeholder=\".form-control-lg\">\r\n      <input type=\"text\" class=\"form-control\" id=\"textFieldBootstrap\" placeholder=\"Tamaño por defecto\">\r\n      <input type=\"text\" class=\"form-control form-control-sm\" id=\"textFieldBootstrap\" placeholder=\".form-control-sm\">\r\n      form-control-lg\r\n    </div>\r\n\r\n\r\n    <h3>Select</h3>\r\n\r\n    <p>Del mismo modo se trata de obtener una apariencia similar en el uso de los controles <code>select</code>.</p>\r\n\r\n    <p>Las propiedades aplicadas a los estilos son:</p>\r\n\r\n    <ul>\r\n      <li><code>font-family</code> : El tipo de letra utilizado por defecto es \"Open Sans\".</li>\r\n      <li><code>font-size</code> : Se establece un valor de <strong>1rem</strong> para el tamaño de letra. Como es relativo al tamaño base definido para <code>html</code> el valor por defecto será de <strong>12px</strong>.</li>\r\n      <li><code>height</code> : Se establece un valor de <strong>2rem</strong> para la altura del combo. Como es relativo al tamaño base definido para <code>html</code> el valor por defecto será de <strong>24px</strong>.</li>\r\n    </ul>\r\n\r\n    <p>Así pués la apariencia de los diferentes combos que pueden ser incluidos en el formulario es la siguiente:</p>\r\n\r\n    <p>Combo por defecto:</p>\r\n\r\n    <div class=\"example\">\r\n      <select  id=\"selectDefault\">\r\n        <option>Opción 1</option>\r\n        <option>Opción 2</option>\r\n        <option>Opción 3</option>\r\n        <option>Opción 4</option>\r\n        <option>Opción 5</option>\r\n      </select>\r\n    </div>\r\n\r\n    <p>Combo Bootstrap:</p>\r\n\r\n    <div class=\"example\">\r\n      <select  id=\"selectBootstrap\" class=\"form-control\">\r\n        <option>Opción 1</option>\r\n        <option>Opción 2</option>\r\n        <option>Opción 3</option>\r\n        <option>Opción 4</option>\r\n        <option>Opción 5</option>\r\n      </select>\r\n    </div>\r\n\r\n    <p>Combo UDA:</p>\r\n\r\n    <div class=\"example\">\r\n      <select  id=\"rupCombo\">\r\n        <option>Opción 1</option>\r\n        <option>Opción 2</option>\r\n        <option>Opción 3</option>\r\n        <option>Opción 4</option>\r\n        <option>Opción 5</option>\r\n      </select>\r\n    </div>\r\n  </section>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["table"] = this["App"]["Templates"]["demo"]["app"]["table"] || {};
this["App"]["Templates"]["demo"]["app"]["table"]["_detailButtonSet"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"ui-dialog-buttonset\">\r\n    <button id=\"table_detail_button_save\" type=\"button\">\r\n        Guardar\r\n    </button>\r\n    <button id=\"table_detail_button_save_repeat\" type=\"button\">\r\n        Guardar y continuar\r\n    </button>\r\n    <a href=\"javascript:void(0)\" role=\"button\" id=\"table_detail_link_cancel\"\r\n        class=\"rup-enlaceCancelar\">\r\n        Cancelar\r\n    </a>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["table"]["_detailForm"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<form id=\"table_detail_form\">\r\n    <div id =\"table_detail_feedback\"></div>\r\n    <div class=\"floating_left_pad_right\">\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"id_detailForm_table\">Id:</label>\r\n            <input type=\"text\" name=\"id\" class=\"formulario_linea_input\" id=\"id_detailForm_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"nombre_detail_table\">Nombre:</label>\r\n            <input type=\"text\" name=\"nombre\" class=\"formulario_linea_input\" id=\"nombre_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"apellido1_detail_table\">Primer apellido:</label>\r\n            <input type=\"text\" name=\"apellido1\" class=\"formulario_linea_input\" id=\"apellido1_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"apellido2_detail_table\">Segundo apellido:</label>\r\n            <input type=\"text\" name=\"apellido2\" class=\"formulario_linea_input\" id=\"apellido2_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"ejie_detail_table\">Ejie:</label>\r\n            <input type=\"checkbox\" id=\"ejie_detail_table\" name=\"ejie\"  value=\"1\"/>\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"fechaAlta_detail_table\">Fecha de alta:</label>\r\n            <input type=\"text\" name=\"fechaAlta\" class=\"formulario_linea_input\" id=\"fechaAlta_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\" style=\"clear: left;\">\r\n            <label for=\"fechaBaja_detail_table\">Fecha de baja:</label>\r\n            <input type=\"text\" name=\"fechaBaja\" class=\"formulario_linea_input\" id=\"fechaBaja_detail_table\" />\r\n        </div>\r\n        <div class=\"floating_left_pad_right one-column\">\r\n            <label for=\"rol_detail_table\">Rol:</label>\r\n            <select id=\"rol_detail_table\" name=\"rol\" class=\"formulario_linea_input\" ></select>\r\n        </div>\r\n    </div>\r\n</form>";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["table"]["_filterForm"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<form id=\"table_filter_form\">\r\n  <div id=\"table_filter_toolbar\" class=\"formulario_legend\"></div>\r\n  <fieldset id=\"table_filter_fieldset\" class=\"rup-table-filter-fieldset\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"id_filter_table\" class=\"formulario_linea_label\">Id:</label>\r\n          <input type=\"text\" name=\"id\" class=\"formulario_linea_input form-control\" id=\"id_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"nombre_filter_table\" class=\"formulario_linea_label\">Nombre:</label>\r\n          <input type=\"text\" name=\"nombre\" class=\"formulario_linea_input form-control\" id=\"nombre_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"apellido1_filter_table\" class=\"formulario_linea_label\">Primer apellido:</label>\r\n          <input type=\"text\" name=\"apellido1\" class=\"formulario_linea_input form-control\" id=\"apellido1_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"apellido2_filter_table\" class=\"formulario_linea_label\">Segundo apellido:</label>\r\n          <input type=\"text\" name=\"apellido2\" class=\"formulario_linea_input form-control\" id=\"apellido2_filter_table\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"ejie_filter_table\" class=\"formulario_linea_label\">Ejie:</label>\r\n          <div style=\"float: left;\"><select id=\"ejie_filter_table\" name=\"ejie\" class=\"rup-combo form-control\" ></select></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"fechaAlta_filter_table\" class=\"formulario_linea_label\">Fecha de alta:</label>\r\n          <input type=\"text\" name=\"fechaAlta\" class=\"formulario_linea_input form-control\" id=\"fechaAlta_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"fechaBaja_filter_table\" class=\"formulario_linea_label\">Fecha de baja:</label>\r\n          <input type=\"text\" name=\"fechaBaja\" class=\"formulario_linea_input form-control\" id=\"fechaBaja_filter_table\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xs-6 col-md-3\">\r\n        <div class=\"form-group form-group-sm\">\r\n          <label for=\"rol_filter_table\" class=\"formulario_linea_label\">Rol:</label>\r\n          <input type=\"text\" name=\"rol\" class=\"formulario_linea_input form-control\" id=\"rol_filter_table\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div id=\"table_filter_buttonSet\" class=\"right_buttons\">\r\n\r\n        <a id=\"table_filter_cleanLink\" href=\"javascript:void(0)\" class=\"rup-enlaceCancelar\">Limpiar</a>\r\n        <button id=\"table_filter_filterButton\" type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all\" >Filtrar</button>\r\n    </div>\r\n  </fieldset>\r\n</form>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["table"]["simpleFilter"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["table"]["tableFilterTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"feedback-view container-fluid\">\r\n  <section>\r\n		<h2>Filtro simple</h2> <!-- Titulo pagina -->\r\n\r\n		<div id=\"table_div\" class=\"rup-table-container\">\r\n			<div id=\"table_feedback\"></div>\r\n			<div id=\"table_toolbar\"></div>\r\n			<div id=\"table_filter_div\" class=\"rup-table-filter\">\r\n"
    + ((stack1 = container.invokePartial(partials.filterForm,depth0,{"name":"filterForm","data":data,"indent":"\t\t\t\t","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "			</div>\r\n\r\n			<div id=\"table_grid_div\">\r\n				<!-- Tabla -->\r\n				<table id=\"table\"></table>\r\n				<!-- Barra de paginación -->\r\n				<div id=\"table_pager\"></div>\r\n			</div>\r\n		</div>\r\n\r\n		<div id=\"table_detail_div\" class=\"rup-table-formEdit-detail\">\r\n			<div id =\"table_detail_navigation\"></div>\r\n			<div class=\"ui-dialog-content ui-widget-content\" >\r\n"
    + ((stack1 = container.invokePartial(partials.detailForm,depth0,{"name":"detailForm","data":data,"indent":"\t\t        ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "		    </div>\r\n			<div class=\"rup-table-buttonpane ui-widget-content ui-helper-clearfix\">\r\n"
    + ((stack1 = container.invokePartial(partials.detailButtonSet,depth0,{"name":"detailButtonSet","data":data,"indent":"\t\t        ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "		    </div>\r\n		</div>\r\n  </section>\r\n</div>\r\n";
},"usePartial":true,"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"] = this["App"]["Templates"]["demo"]["app"]["components"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["accordion"] = this["App"]["Templates"]["demo"]["app"]["components"]["accordion"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["accordion"]["accordionBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"contextMenu-view\">\r\n  <h3>Accordion</h3>\r\n  <p>\r\n    El objetivo principal del componente Accordion es la presentación de un contenido donde conceptos relacionados pueden agruparse (ej. secciones) de manera que el usuario puede mostrar u ocultar información sin perder el contexto del contenido principal.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["accordion"]["accordionHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"accordion\" class=\"rup_accordion\">\r\n\r\n	<h1><a>Primera sección</a></h1>\r\n	<div class=\"section\">\r\n		<img alt=\"La primera secci&oacute;n\" src=\"images/primera_seccion.PNG\">\r\n	</div>\r\n	<h1><a>Segunda sección</a></h1>\r\n	<div class=\"section2\">\r\n		<img alt=\"La segunda secci&oacute;n\" src=\"images/segunda_seccion.PNG\">\r\n	</div>\r\n	<h1><a>Tercera sección</a></h1>\r\n	<div class=\"section\">\r\n		<img alt=\"La tercera secci&oacute;n\" src=\"images/tercera_seccion.PNG\">\r\n	</div>\r\n	<h1><a>Cuarta sección</a></h1>\r\n	<div class=\"section2\">\r\n		<img alt=\"La cuarta secci&oacute;n\" src=\"images/cuarta_seccion.PNG\">\r\n	</div>\r\n\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["accordion"]["accordionJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#accordion\").rup_accordion({\r\n  animated: \"bounceslide\",\r\n  active: false,\r\n  autoHeight: false,\r\n  collapsible: true\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["accordion"]["accordionTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Accordion</h2>\r\n\r\n<div id=\"accordionExample1\" class=\"rup_accordion\">\r\n\r\n	<h1><a>Primera sección</a></h1>\r\n	<div class=\"section\">\r\n		<img alt=\"La primera secci&oacute;n\" src=\"images/primera_seccion.PNG\">\r\n	</div>\r\n	<h1><a>Segunda sección</a></h1>\r\n	<div class=\"section2\">\r\n		<img alt=\"La segunda secci&oacute;n\" src=\"images/segunda_seccion.PNG\">\r\n	</div>\r\n	<h1><a>Tercera sección</a></h1>\r\n	<div class=\"section\">\r\n		<img alt=\"La tercera secci&oacute;n\" src=\"images/tercera_seccion.PNG\">\r\n	</div>\r\n	<h1><a>Cuarta sección</a></h1>\r\n	<div class=\"section2\">\r\n		<img alt=\"La cuarta secci&oacute;n\" src=\"images/cuarta_seccion.PNG\">\r\n	</div>\r\n\r\n</div>\r\n\r\n<br/>\r\n<div class=\"separator\"></div>\r\n<div class=\"separator\"></div>\r\n<br/>\r\n\r\n<div id=\"accordionExample2\" class=\"rup_accordion\">\r\n\r\n	<h1><a>Sección con Autocomplete</a></h1>\r\n	<div class=\"sectionAuto\">\r\n		<h3 class=\"sectionh2\">Autocomplete local</h3>\r\n		<label for=\"autocomplete\">Lenguaje:</label><input id=\"autocomplete\" name=\"autocomplete\" />\r\n		[asp, c, c++, coldfusion, groovy, haskell, java, javascript, perl, php, python, ruby, scala]\r\n		<br/>\r\n\r\n		<h3>Autocomplete remoto</h3>\r\n		<label for=\"patron\">Departamento-Provincia:</label><input id=\"patron\" name=\"patron\" /> [Castellano: \" de \" // Euskara: arab, gipuz, bilb]\r\n		<br/>\r\n\r\n	</div>\r\n	<h1><a>Sección con Mantenimiento</a></h1>\r\n	<div class=\"sectionMaint\">\r\n		<h2 class=\"sectionh2\">Mantenimiento Agrupado</h2>\r\n		<div id=\"maintGroup\"></div>\r\n	</div>\r\n	<h1><a>Sección con Tabs</a></h1>\r\n	<div class=\"sectionTab\">\r\n		<h2 class=\"sectionh2\">Mantenimientos en Tabs</h2>\r\n		<div id=\"maintTab\"></div>\r\n	</div>\r\n	<h1><a>Sección con Upload</a></h1>\r\n	<div class=\"sectionUpload\">\r\n		<h2 class=\"sectionh2\"><spring:message code=\"uploadFormMultiple\" /></h2>\r\n		<div id=\"fileupload_form_multiple\">\r\n			<form action=\"../upload/formSimple\" id=\"usuarioFormSimple\" enctype=\"multipart/form-data\" method=\"POST\">\r\n				<fieldset style=\"border:1px solid #DADADA;\" id=\"fieldset_formulario\">\r\n					<div id=\"feedback_fileupload_form_multiple\"></div>\r\n					<div class=\"formulario_columna_cnt\">\r\n						<div class=\"formulario_linea_izda_float\">\r\n							<label id=\"label_nombre\"  for=\"nombre\" >Nombre :</label>\r\n							<input id=\"nombre\" name=\"nombre\" />\r\n						</div>\r\n						<div class=\"formulario_linea_izda_float\">\r\n							<label id=\"label_apellido1\"  for=\"apellido1\" >Apellido 1:</label>\r\n							<input id=\"apellido1\" name=\"apellido1\" />\r\n						</div>\r\n						<div class=\"formulario_linea_izda_float\">\r\n							<label id=\"label_apellido2\"  for=\"apellido2\" >Apellido 2:</label>\r\n							<input id=\"apellido2\" name=\"apellido2\" />\r\n						</div>\r\n						<div class=\"formulario_linea_izda_float\">\r\n							<label id=\"label_ejie\"  for=\"ejie\" >EJIE:</label>\r\n							<input type=\"checkbox\" id=\"ejie\" name=\"ejie\" value=\"1\" />\r\n						</div>\r\n					</div>\r\n					<div class=\"formulario_columna_cnt\">\r\n					&nbsp;\r\n					</div>\r\n					<div class=\"formulario_columna_cnt\">\r\n						<div class=\"formulario_linea_izda_float\">\r\n							Archivos adjuntos:\r\n						</div>\r\n					</div>\r\n					<div class=\"formulario_columna_cnt\">\r\n						<div class=\"formulario_linea_izda_float\">\r\n					        <div id=\"fileupload_file_form_padre\" >\r\n						    	<div class=\"fileupload-buttonbar\">\r\n						        	<label for=\"file\">Foto padre: </label>\r\n						        	<input id=\"file_form_padre\" type=\"file\" name=\"fotoPadre\">\r\n								</div>\r\n								<div class=\"fileupload-content\">\r\n							        <table class=\"files\"></table>\r\n							    </div>\r\n					        </div>\r\n\r\n					        <div id=\"fileupload_file_form_madre\">\r\n					        	<div class=\"fileupload-buttonbar\">\r\n						            <label for=\"file\">Foto madre: </label>\r\n						            <input id=\"file_form_madre\" type=\"file\" name=\"fotoMadre\">\r\n								</div>\r\n								<div class=\"fileupload-content\">\r\n							        <table class=\"files\"></table>\r\n							    </div>\r\n					        </div>\r\n\r\n					    </div>\r\n					</div>\r\n				  	<div class=\"formulario_columna_cnt\">\r\n				 		<div class=\"formulario_linea_izda_float fileupload-buttonbar\"  >\r\n							<button id=\"sendButtonMultiple\" type=\"submit\" class=\"start\">Enviar formulario</button>\r\n						</div>\r\n					</div>\r\n				</fieldset>\r\n			</form>\r\n		</div>\r\n	</div>\r\n</div> \r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["autocomplete"] = this["App"]["Templates"]["demo"]["app"]["components"]["autocomplete"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["autocomplete"]["autocompleteBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"contextMenu-view\">\r\n  <h3>Autocomplete</h3>\r\n  <p>\r\n    En cuanto el usuario comienza a escribir una búsqueda se le sugieren búsquedas relacionadas con lo que ha escrito que pueden ser de su interés.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["autocomplete"]["autocompleteHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"autocomplete\" name=\"patron\" />\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["autocomplete"]["autocompleteJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#autocomplete\").rup_autocomplete({\r\n  source : \"autocomplete/remote\",\r\n  sourceParam : {\r\n          label:\"desc\"+$.rup_utils.capitalizedLang(),\r\n          value:\"code\"\r\n      },\r\n  minLength: 4\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["autocomplete"]["autocompleteTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<!-- <div id=\"dialogo\"> -->\r\n<h3>Autocomplete local</h3>\r\n<label for=\"autocomplete\">Lenguaje:</label><input id=\"autocomplete\" name=\"autocomplete\" />\r\n[asp, c, c++, coldfusion, groovy, haskell, java, javascript, perl, php, python, ruby, scala]\r\n<br/>\r\n<!-- </div> -->\r\n\r\n<h3>Autocomplete remoto</h3>\r\n<label for=\"patron\">Departamento-Provincia:</label><input id=\"patron\" name=\"patron\" /> [Castellano: \" de \" // Euskara: arab, gipuz, bilb]\r\n<br/>\r\n\r\n\r\n<h3>Combobox local</h3>\r\n<label for=\"comboboxLocal\">Lenguaje:</label><input id=\"comboboxLocal\" name=\"comboboxLocal\" /> [asp, c, c++, coldfusion, groovy, haskell, java, javascript, perl, php, python, ruby, scala]\r\n\r\n\r\n<h3>Combobox remoto</h3>\r\n<label for=\"comboboxRemoto\">Departamento-Provincia:</label><input id=\"comboboxRemoto\" name=\"comboboxRemoto\" /> [Castellano: \" de \" // Euskara: arab, gipuz, bilb]\r\n<br/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["button"] = this["App"]["Templates"]["demo"]["app"]["components"]["button"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["button"]["buttonBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"button-view\">\r\n  <h3>Botón</h3>\r\n  <p>\r\n    Permite al usuario seleccionar una acción a realizar de entre las que ofrece la aplicación haciendo click sobre el.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["button"]["buttonHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<button type=\"button\" id=\"boton\">Acci&oacute;n</button>\r\n\r\n<button type=\"button\" id=\"dropdownHtmlListButton\">Lista HTML</button>\r\n<ul id=\"dropdownHtmlList\" class=\"rup-dropdown-option-list\">\r\n	<li><a href=\"#\" id=\"dropdownElem1\">Elemento 1</a></li>\r\n	<!-- Resto de elementos -->\r\n</ul>\r\n\r\n<button type=\"button\" id=\"dropdownDialogButton\">Dialogo</button>\r\n\r\n<div id=\"dropdownDialog\" style=\"width:380px;\">\r\n		<fieldset class=\"dropdownButton-inputs\">\r\n			<!-- Contenido del div -->\r\n		</fieldset>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["button"]["buttonJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#boton\").rup_button({});\r\n\r\n$(\"#dropdownHtmlListButton\").rup_button({\r\n  dropdown:{\r\n    dropdownListId:\"dropdownHtmlList\"\r\n  }\r\n});\r\n\r\n// Dropdown dialog\r\n\r\n$(\"#dropdownDialogButton\").rup_button({\r\n  dropdown:{\r\n    dropdownDialog: \"dropdownDialog\",\r\n    dropdownDialogConfig:{\r\n      title:\"<span class='rup-icon rup-icon-filter'/>Administración de filtros\",\r\n      width:\"380px\",\r\n      buttons: [{\r\n        text: \"Guardar\",\r\n        click: function () {\r\n        }\r\n      }\r\n    }\r\n    ]\r\n  }\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["button"]["buttonTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<p>Botón básico</p>\r\n<div class=\"example\">\r\n	<button type=\"button\" id=\"boton\">Acci&oacute;n</button>\r\n</div>\r\n\r\n<p>Botón con desplegable</p>\r\n<div class=\"example\">\r\n	<button type=\"button\" id=\"dropdownHtmlListButton\">Lista HTML</button>\r\n	<ul id=\"dropdownHtmlList\" class=\"rup-dropdown-option-list\">\r\n		<li><a href=\"#\" id=\"dropdownElem1\">Elemento 1</a></li>\r\n		<li><a href=\"#\" id=\"dropdownElem2\">Elemento 2</a></li>\r\n		<li><a href=\"#\" id=\"dropdownElem3\">Elemento 3</a></li>\r\n		<li class=\"divider\"></li>\r\n		<li><a href=\"#\" id=\"dropdownElem4\">Elemento 4</a></li>\r\n	</ul>\r\n\r\n\r\n	<button type=\"button\" id=\"dropdownDialogButton\">Dialogo</button>\r\n	<div id=\"dropdownDialog\" style=\"width:380px;\">\r\n		<form>\r\n			<fieldset class=\"dropdownButton-inputs\">\r\n				<div class=\"formulario_columna_cnt\">\r\n					<div class=\"formulario_linea_izda_float\">\r\n						<label for=\"dropdownButton-combo\">Filtros</label>\r\n						<input id=\"dropdownButton-combo\" />\r\n					</div>\r\n					<div class=\"formulario_linea_izda_float\">\r\n						<input type=\"checkbox\" id=\"dropdownButton-defaultFilter\"/>\r\n						<label for=\"dropdownButton-defaultFilter\">Filtro por defecto</label>\r\n					</div>\r\n				</div>\r\n			</fieldset>\r\n		</form>\r\n	</div>\r\n</div>\r\n\r\n<p>Botón FAB (Floating Action Button)</p>\r\n<div class=\"example\">\r\n	<button type=\"button\" id=\"fabButton\" data-fab=\"true\"><span class=\"glyphicon glyphicon-cog\" /></button>\r\n	<button type=\"button\" id=\"fabButtonLayer\" data-fab=\"true\"><span class=\"glyphicon glyphicon-cog\" /></button>\r\n\r\n	<ul id=\"fabButtonFixedList\">\r\n		<li><button type=\"button\" id=\"fabButtonList1\" data-fab=\"true\" ><span class=\"glyphicon glyphicon-plus\" /></button></li>\r\n		<li><button type=\"button\" id=\"fabButtonList2\" data-fab=\"true\" ><span class=\"glyphicon glyphicon-pencil\" /></button></li>\r\n		<li><button type=\"button\" id=\"fabButtonList3\" data-fab=\"true\" ><span class=\"glyphicon glyphicon-trash\" /></button></li>\r\n	</ul>\r\n	<button type=\"button\" id=\"fabButtonFixed\" data-fab=\"true\" data-fixed=\"true\" data-list=\"fabButtonFixedList\"><span class=\"glyphicon glyphicon-cog\" /></button>\r\n\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["chart"] = this["App"]["Templates"]["demo"]["app"]["components"]["chart"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["chart"]["chartBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tooltip-view\">\r\n  <h3>Charts</h3>\r\n  <p>\r\n    Permite ilustrar y presentar un conjunto de\r\n    datos relacionados entre sí, de manera que facilite su comprensión, comparación y análisis.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["chart"]["chartHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n		  <div class=\"\">\r\n				<canvas id=\"graficoLine\" ></canvas>\r\n		  </div>\r\n			<div class=\"\">\r\n				<canvas id=\"graficoBar\" ></canvas>\r\n			</div>\r\n			<div class=\"\">\r\n				<canvas id=\"graficoRadar\" ></canvas>\r\n			</div>\r\n			<div class=\"\">\r\n				<canvas id=\"graficoPolar\" ></canvas>\r\n			</div>\r\n			<div class=\"\">\r\n				<canvas id=\"graficoPie\" ></canvas>\r\n			</div>\r\n			<div class=\"\">\r\n				<canvas id=\"graficoDoughnut\"></canvas>\r\n			</div>\r\n			<div class=\"\">\r\n				<canvas id=\"graficoBubble\" ></canvas>\r\n			</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["chart"]["chartJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "  var options = {\r\n          legend: {\r\n              display: true\r\n          }\r\n\r\n      };\r\n      //line chart\r\n      $('#graficoLine').rup_chart({\r\n          type: \"line\",\r\n          data: {\r\n              labels: $.rup.i18n.app.charts.mesesLabels,\r\n              datasets: [{\r\n                  label: $.rup.i18n.app.charts.datasetRadar.dataset1,\r\n                  data: [65, 59, 80, 81, 56, 55, 40]\r\n              }]\r\n          },\r\n          options: options\r\n      });\r\n\r\n      //bar chart\r\n      $('#graficoBar').rup_chart({\r\n          type: \"bar\",\r\n          data: {\r\n              labels: $.rup.i18n.app.charts.mesesLabels,\r\n              datasets: [{\r\n                  label: $.rup.i18n.app.charts.datasetRadar.dataset1,\r\n                  data: [65, 59, 80, 81, 56, 55, 40]\r\n              }]\r\n          },\r\n          options: options\r\n      });\r\n\r\n      //radar chart\r\n      $('#graficoRadar').rup_chart({\r\n          type: \"radar\",\r\n          data: {\r\n              labels: $.rup.i18n.app.charts.radarLabels,\r\n              datasets: [{\r\n                  label: $.rup.i18n.app.charts.datasetRadar.dataset1,\r\n                  data: [65, 59, 90, 81, 56, 55, 40]\r\n              }, {\r\n                  label: $.rup.i18n.app.charts.datasetRadar.dataset2,\r\n                  data: [28, 48, 40, 19, 96, 27, 100]\r\n              }]\r\n          }\r\n      });\r\n\r\n      //polar chart\r\n      $('#graficoPolar').rup_chart({\r\n          type: \"polarArea\",\r\n          data: {\r\n\r\n              labels: $.rup.i18n.app.charts.colorLabels,\r\n              datasets: [{\r\n                  data: [300, 50, 100],\r\n                  backgroundColor: [\r\n                      \"#FF6384\",\r\n                      \"#36A2EB\",\r\n                      \"#FFCE56\"\r\n                  ],\r\n                  hoverBackgroundColor: [\r\n                      \"#FF6384\",\r\n                      \"#36A2EB\",\r\n                      \"#FFCE56\"\r\n                  ]\r\n              }]\r\n          }\r\n\r\n      });\r\n\r\n      //pie chart\r\n      $('#graficoPie').rup_chart({\r\n          type: \"pie\",\r\n          data: {\r\n\r\n              labels: $.rup.i18n.app.charts.colorLabels,\r\n              datasets: [{\r\n                  data: [300, 50, 100],\r\n                  backgroundColor: [\r\n                      \"#FF6384\",\r\n                      \"#36A2EB\",\r\n                      \"#FFCE56\"\r\n                  ],\r\n                  hoverBackgroundColor: [\r\n                      \"#FF6384\",\r\n                      \"#36A2EB\",\r\n                      \"#FFCE56\"\r\n                  ]\r\n              }]\r\n          }\r\n\r\n      });\r\n\r\n      // doughnut chart\r\n      $('#graficoDoughnut').rup_chart({\r\n          type: \"doughnut\",\r\n          data: {\r\n\r\n              labels: $.rup.i18n.app.charts.colorLabels,\r\n              datasets: [{\r\n                  data: [300, 50, 100],\r\n                  backgroundColor: [\r\n                      \"#FF6384\",\r\n                      \"#36A2EB\",\r\n                      \"#FFCE56\"\r\n                  ],\r\n                  hoverBackgroundColor: [\r\n                      \"#FF6384\",\r\n                      \"#36A2EB\",\r\n                      \"#FFCE56\"\r\n                  ]\r\n              }]\r\n          }\r\n\r\n      });\r\n\r\n      //bubble chart\r\n      $('#graficoBubble').rup_chart({\r\n          type: 'bubble',\r\n          data: {\r\n              datasets: [{\r\n                  label: $.rup.i18n.app.charts.datasetRadar.dataset1,\r\n                  data: [{\r\n                      x: 20,\r\n                      y: 30,\r\n                      r: 15\r\n                  }, {\r\n                      x: 40,\r\n                      y: 10,\r\n                      r: 10\r\n                  }],\r\n                  backgroundColor: \"#FF6384\",\r\n                  hoverBackgroundColor: \"#FF6384\",\r\n              }]\r\n          }\r\n\r\n      });\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["chart"]["chartTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "\r\n<section class=\"espacioLinea\">\r\n	<!--LINEA-->\r\n	<div class=\" row\">\r\n		<div class=\"col-xl-6  col-xs-12  col-sm-5\">\r\n			<div class=\"butstyle\">\r\n				<h3>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"charts.line",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<canvas id=\"graficoLine\" ></canvas>\r\n			</div>\r\n		</div>\r\n		<div class=\"col-xl-6  col-xs-12  col-sm-5\">\r\n			<div class=\"butstyle\">\r\n				<h3>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"charts.bar",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<canvas id=\"graficoBar\" ></canvas>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<!--FIN LINEA-->\r\n	<!--LINEA-->\r\n	<div class=\" row\">\r\n		<div class=\"col-xl-6  col-xs-12  col-sm-5\">\r\n			<div class=\"butstyle\">\r\n				<h3>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"charts.radar",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<canvas id=\"graficoRadar\" ></canvas>\r\n			</div>\r\n		</div>\r\n		<div class=\"col-xl-6  col-xs-12  col-sm-5\">\r\n			<div class=\"butstyle\">\r\n				<h3>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"charts.polar",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<canvas id=\"graficoPolar\" ></canvas>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<!--FIN LINEA-->\r\n	<!--LINEA-->\r\n	<div class=\" row\">\r\n		<div class=\"col-xl-6  col-xs-12  col-sm-5\">\r\n			<div class=\"butstyle\">\r\n				<h3>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"charts.pie",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<canvas id=\"graficoPie\" ></canvas>\r\n			</div>\r\n		</div>\r\n		<div class=\"col-xl-6 col-xs-12  col-sm-5 \">\r\n			<div class=\"butstyle\">\r\n				<h3>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"charts.doughnut",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<canvas id=\"graficoDoughnut\"></canvas>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<!--FIN LINEA-->\r\n	<!--LINEA-->\r\n	<div class=\"row\">\r\n		<div class=\"col-xl-6  col-xs-12  col-sm-5\">\r\n			<div class=\"butstyle\">\r\n				<h3>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"charts.bubble",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<canvas id=\"graficoBubble\" ></canvas>\r\n			</div>\r\n		</div>\r\n		<div class=\"\"></div>\r\n	</div>\r\n</section>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["contextMenu"] = this["App"]["Templates"]["demo"]["app"]["components"]["contextMenu"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["contextMenu"]["contextMenuBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"contextMenu-view\">\r\n  <h3>Menú contextual</h3>\r\n  <p>\r\n    Un menú contextual consta de un menú dentro de una interfaz gráfica que se muestra a partir de una interacción del usuario. El menú contextual muestra una serie de opciones disponibles en el contexto o estado actual de la aplicación.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["contextMenu"]["contextMenuHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"feedback-ok\" role=\"alert\"></div>\r\n<div id=\"feedback-alert\" role=\"alert\"></div>\r\n<div id=\"feedback-error\"role=\"alert\"></div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["contextMenu"]["contextMenuJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$view.ui.feedbackOk.rup_feedback({\r\n    message:\"<strong>Ok!</strong> Se ha realizado correctamente la acción solicitada.\",\r\n    type:\"ok\"\r\n});\r\n$view.ui.feedbackAlert.rup_feedback({\r\n    message:\"<strong>Atención!</strong> El resultado de la acción requiere su atención.\",\r\n    type:\"alert\"\r\n});\r\n$view.ui.feedbackError.rup_feedback({\r\n    message:\"<strong>Error!</strong> Se ha producido un error inesperado.\",\r\n    type:\"error\"\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["contextMenu"]["contextMenuTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Context Menu</h2>\r\n\r\n<div id=\"contextMenu\" class=\"contextMenu-box\">Right click + Opciones desabilitadas</div><br>\r\n<div class=\"contextMenu-left contextMenu-box\">Left click + Atajos de teclado</div><br>\r\n<div id=\"contextMenu-hover\" class=\"contextMenu-box\">Hover + submenus</div><br>\r\n<div class=\"contextMenu-other contextMenu-box\">Abrir desde otro elemento + bajo demanda\r\n	<button type=\"button\" id=\"activate-menu\">click me</button>\r\n</div><br>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["date"] = this["App"]["Templates"]["demo"]["app"]["components"]["date"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["date"]["dateBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"button-view\">\r\n  <h3>Fecha</h3>\r\n  <p>\r\nPermite al usuario introducir y seleccionar una fecha, tanto de forma manual como visual, moviéndose fácilmente por días, meses y años. Además, para minimizar las posibilidades de introducir una fecha\r\nincorrecta, ofrece al usuario ayudas y sugerencias de formato.\r\n\r\nAdemás, este sistema permite la introducción de fechas independiente de dispositivo y flexible, ya quetanto los usuarios avanzados como los novatos podrán utilizarlo sin problemas.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["date"]["dateHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<!-- Fecha -->\r\n<label for=\"fecha\">Fecha </label><label for=\"fecha\" id=\"fecha-mask\"></label>:\r\n<input id=\"fecha\" type=\"text\" />\r\n\r\n<!-- Fecha mÃºltiple-->\r\n<label for=\"fecha\">Fecha multiple </label><label for=\"fecha_multi\" id=\"fecha_multi-mask\"/></label>:\r\n<input id=\"fecha_multi\" type=\"text\" />\r\n\r\n<!-- Intervalo Fecha-->\r\n<label for=\"fecha\">Intervalo desde </label><label for=\"desde\" id=\"intervalo-mask\"/></label>:\r\n<input type=\"text\" id=\"desde\" />\r\n<label for=\"fecha\">hasta: </label>\r\n<input type=\"text\" id=\"hasta\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["date"]["dateJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#fecha\").rup_date({\r\n  labelMaskId : \"fecha-mask\",\r\n  showButtonPanel : true,\r\n  showOtherMonths : true,\r\n  noWeekend : true\r\n  //, buttonImage : \"/rup/basic-theme/images/exclamation.png\"\r\n});\r\n\r\n$(\"#fecha_multi\").rup_date({\r\n  multiSelect: 3,\r\n  //multiSelect: [0,5],\r\n  labelMaskId : \"fecha_multi-mask\",\r\n  buttonImage : \"/rup/css/images/exclamation.png\"\r\n});\r\n\r\n$.rup_date({\r\n  from: \"desde\",\r\n  to: \"hasta\",\r\n  //Resto igual que en date\r\n  labelMaskId : \"intervalo-mask\",\r\n  numberOfMonths: 3,\r\n  onSelect: function(selectedDate){\r\n    /*alert(\"La fecha seleccionada es: \" + selectedDate);*/\r\n  }\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["date"]["dateTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<label for=\"fecha\">Fecha </label><label for=\"fecha\" id=\"fecha-mask\"></label>:\r\n<input id=\"fecha\" type=\"text\" />\r\n&nbsp;&nbsp;<input id=\"fecha_button\" type=\"button\" value=\"getDate()\" />\r\n<br/><br/>\r\n\r\n<!-- Fecha mÃºltiple-->\r\n<label for=\"fecha\">Fecha multiple </label><label for=\"fecha_multi\" id=\"fecha_multi-mask\"/></label>:\r\n<input id=\"fecha_multi\" type=\"text\" />\r\n&nbsp;&nbsp;<input id=\"fecha_multi_button\" type=\"button\" value=\"getDates()\" />\r\n<br/><br/>\r\n\r\n<!-- Intervalo Fecha-->\r\n<label for=\"fecha\">Intervalo desde </label><label for=\"desde\" id=\"intervalo-mask\"/></label>:\r\n<input type=\"text\" id=\"desde\" />\r\n<label for=\"fecha\">hasta: </label>\r\n<input type=\"text\" id=\"hasta\"/>\r\n<br/><br/>\r\n\r\n<!-- Intervalo Fecha y hora -->\r\n<label for=\"fecha\">Intervalo desde </label><label for=\"desde\" id=\"intervalo-mask-date-time\"/></label>:\r\n<input type=\"text\" id=\"desdeDateTime\" />\r\n<label for=\"fecha\">hasta: </label>\r\n<input type=\"text\" id=\"hastaDateTime\"/>\r\n<br/><br/>\r\n\r\n<!-- Fecha desplegada -->\r\n<div id=\"fecha_inline\"></div>\r\n<div style=\"margin-right: 33em;\"><input id=\"fecha_inline_button\" type=\"button\" value=\"getDate()\" /></div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["dialog"] = this["App"]["Templates"]["demo"]["app"]["components"]["dialog"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["dialog"]["dialogBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"dialog-view\">\r\n  <h2>Diálogo</h2>\r\n  <p>\r\n    Permite lanzar un subproceso o un mensaje de confirmación dentro de un proceso principal sin salirse de este. Es una evolución del patrón mensaje.\r\n  </p>\r\n  <div class=\"rup-callout rup-callout-warning\">\r\n    <p>\r\n      Debido a las modificaciones incluidas en la versión 1.10 de jQueryUi, no es posible invocar un diálogo directamente a partir del objeto <code>document</code>.\r\n    </p>\r\n    <p>\r\n      Por lo tanto la llamada de inicialización <code>$(document).rup_dialog(...)</code> deberá de modificarse para que se realice sobre un elemento del DOM. <code>$(\"#idDialog\").rup_dialog(...)</code>\r\n    </p>\r\n  </div>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["dialog"]["dialogHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"idDialog\" style=\"display:none\">Esto es una prueba de un diálogo con texto dentro de él</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["dialog"]["dialogJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#idDialog\").rup_dialog({\r\n    type: $.rup.dialog.DIV,\r\n    autoOpen: false,\r\n    modal: true,\r\n    resizable: true,\r\n    title: \"Título del dialog (div)\",\r\n    buttons: [{\r\n            text: \"Aceptar\",\r\n            click: function () {\r\n                $view.ui.dialog.dialog(\"close\");\r\n            }\r\n        },\r\n        {\r\n            text: \"Abandonar\",\r\n            click: function () {\r\n                $view.ui.dialog.dialog(\"close\");\r\n            },\r\n            btnType: $.rup.dialog.LINK\r\n        }\r\n    ]    \r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["dialog"]["dialogTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"idDialog\" style=\"display:none\">Esto es una prueba de un diálogo con texto dentro de él</div>\r\n<div id=\"pruebas\">\r\n	<button id=\"btnDialog\">Diálogo normal</button>\r\n	<button id=\"btnAjaxDialogWAR\">Diálogo con petición Ajax (War)</button>\r\n	<button id=\"btnAjaxDialogStatics\">Diálogo con petición Ajax (Statics) </button>\r\n	<button id=\"btnTextDialog\">Diálogo con texto</button>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["feedback"] = this["App"]["Templates"]["demo"]["app"]["components"]["feedback"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["feedback"]["feedbackBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"feedback-view\">\r\n  <section>\r\n    <h2>Feedback</h2>\r\n    <p>\r\n      Informa al usuario de cómo interactuar con los elementos de la aplicación y del resultado de cualquier acción que realice o cualquier problema que tenga y de cómo solucionarlo.\r\n    </p>\r\n    <section>\r\n      <h3>Ejemplos</h3>\r\n      <div id=\"feedbackOk\" role=\"alert\"></div>\r\n      <div id=\"feedbackAlert\" role=\"alert\"></div>\r\n      <div id=\"feedbackError\"role=\"alert\"></div>\r\n    </section>\r\n  </section>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["feedback"]["feedbackHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"feedback-ok\" role=\"alert\"></div>\r\n<div id=\"feedback-alert\" role=\"alert\"></div>\r\n<div id=\"feedback-error\"role=\"alert\"></div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["feedback"]["feedbackJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$view.ui.feedbackOk.rup_feedback({\r\n    message:\"<strong>Ok!</strong> Se ha realizado correctamente la acción solicitada.\",\r\n    type:\"ok\"\r\n});\r\n$view.ui.feedbackAlert.rup_feedback({\r\n    message:\"<strong>Atención!</strong> El resultado de la acción requiere su atención.\",\r\n    type:\"alert\"\r\n});\r\n$view.ui.feedbackError.rup_feedback({\r\n    message:\"<strong>Error!</strong> Se ha producido un error inesperado.\",\r\n    type:\"error\"\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["feedback"]["feedbackTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"feedback\"></div>\r\n\r\n<div class=\"panel panel-default\">\r\n  <div class=\"panel-heading\">Valores feedback</div>\r\n  <div class=\"panel-body\">\r\n    <form>\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-6 col-md-3\">\r\n          <div class=\"form-group form-group-sm\">\r\n            <label for=\"feedback_type\">Tipo</label>\r\n            <select id=\"feedback_type\" class=\"form-control input-sm\">\r\n              <option value=\"\">---</option>\r\n              <option value=\"ok\" selected=\"selected\">ok</option>\r\n              <option value=\"alert\">alert</option>\r\n              <option value=\"error\">error</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-md-3\">\r\n          <div class=\"form-group form-group-sm\">\r\n            <label for=\"feedback_gotoTop\">gotoTop</label>\r\n            <select id=\"feedback_gotoTop\" class=\"form-control\">\r\n              <option value=\"true\">true</option>\r\n              <option value=\"false\">false</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-md-3\">\r\n          <div class=\"form-group form-group-sm\">\r\n            <label for=\"feedback_block\">block</label>\r\n            <select id=\"feedback_block\" class=\"form-control\">\r\n              <option value=\"true\">true</option>\r\n              <option value=\"false\">false</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-md-3\">\r\n          <div class=\"form-group form-group-sm\">\r\n            <label for=\"feedback_closeLink\">closeLink</label>\r\n            <select id=\"feedback_closeLink\" class=\"form-control\">\r\n              <option value=\"true\">true</option>\r\n              <option value=\"false\">false</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-6 col-md-4\">\r\n          <div class=\"form-group form-group-sm\">\r\n            <label for=\"feedback_imgClass\">imgClass</label>\r\n            <input id=\"feedback_imgClass\" class=\"form-control\" type=\"text\" placeholder=\"feedbackImgPruebas\"/>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-md-4\">\r\n          <div class=\"form-group form-group-sm\">\r\n            <label for=\"feedback_delay\">delay (ms)</label>\r\n            <input id=\"feedback_delay\"  class=\"form-control\" type=\"text\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-md-4\">\r\n          <div class=\"form-group form-group-sm\">\r\n            <label for=\"feedback_fadeSpeed\">fadeSpeed (ms)</label>\r\n            <input id=\"feedback_fadeSpeed\" class=\"form-control\" type=\"text\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n<button id=\"boton_create\" class=\"feedback-test-button\">_Create</button>\r\n<button id=\"boton_destroy\" class=\"feedback-test-button\" disabled=\"disabled\">Destroy</button>\r\n<button id=\"boton_set\" class=\"feedback-test-button\">Set</button>\r\n<button id=\"boton_setOptions\" class=\"feedback-test-button\">Set_options</button>\r\n<button id=\"boton_setType\" class=\"feedback-test-button\">Set_type</button>\r\n<button id=\"boton_setImgClass\" class=\"feedback-test-button\">Set_imgClass</button>\r\n<button id=\"boton_hide\" class=\"feedback-test-button\">Hide</button>\r\n<button id=\"boton_close\" class=\"feedback-test-button\">Close</button>\r\n<button id=\"boton_show\" class=\"feedback-test-button\">Show</button>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["form"] = this["App"]["Templates"]["demo"]["app"]["components"]["form"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["form"]["formBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tooltip-view\">\r\n  <h3>Formulario</h3>\r\n  <p>\r\n    Permite al usuario introducir datos en una serie de campos para ser enviados al servidor y ser procesados.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["form"]["formHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"nombre\" name=\"nombre\" title=\"Introduzca su nombre.\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["form"]["formJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"[title]\").rup_tooltip();\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["form"]["formTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div id=\"feedbackMensajes\"></div>\r\n<div id=\"tabsFormulario\"></div>\r\n<div id=\"divformHttpSubmit\">\r\n\r\n\r\n<!-- 			<fieldset class=\"alumnoFieldset\"> -->\r\n<!-- 					<legend>Configuracion</legend> -->\r\n<!-- 					<input type=\"checkbox\" id=\"liveCheckingErrors\" checked=\"checked\" />Comprobar mensajes al vuelo -->\r\n<!-- 					<input type=\"checkbox\" id=\"checkFeedbackError\" checked=\"checked\" />Mostrar mensaje en feedback  -->\r\n<!-- 					<input type=\"checkbox\" id=\"checkShowErrorsFeedback\" />Mostrar errores en feedback -->\r\n<!-- 					<input type=\"checkbox\" id=\"checkShowFieldErrorsTip\" />Mostrar errores de campos como tip -->\r\n<!-- 					<br/> -->\r\n\r\n<!-- 					<select id=\"formTypeCombo\"> -->\r\n<!-- 						<option value=\"ajax\" selected=\"selected\">Ajax Submit</option> -->\r\n<!-- 						<option value=\"http\">Http Submit</option> -->\r\n<!-- 					</select> -->\r\n<!-- 					<button id=\"botonConfiguracion\">Configurar</button> -->\r\n<!-- 				</fieldset> -->\r\n\r\n		<form id=\"formHttpSubmit\" action=\"form/ejemplo\" >\r\n\r\n				<fieldset class=\"alumnoFieldset\">\r\n					<legend>Datos personales</legend>\r\n					<div class=\"two-col\" >\r\n						    <div class=\"col1\">\r\n						       <label for=\"nombre\" class=\"label\">Nombre</label>\r\n								<input type=\"text\" name=\"nombre\" class=\"formulario_linea_input\" size=\"20\" id=\"nombre\" />\r\n						    </div>\r\n\r\n						    <div class=\"col1\">\r\n						        <label for=\"apellido1\" class=\"label\">Primer apellido</label>\r\n								<input type=\"text\" name=\"apellido1\" class=\"formulario_linea_input\" size=\"30\" id=\"apellido1\" />\r\n						    </div>\r\n\r\n						     <div class=\"col1\">\r\n						        <label for=\"apellido2\" class=\"label\">Segundo apellido</label>\r\n								<input type=\"text\" name=\"apellido2\" class=\"formulario_linea_input\" size=\"30\" id=\"apellido2\" />\r\n						    </div>\r\n					</div>\r\n\r\n					<div class=\"two-col\" >\r\n					    <div class=\"col1\">\r\n					       <label for=\"sexo\" class=\"label\">Sexo</label>\r\n							<input type=\"text\" name=\"sexo\" class=\"formulario_linea_input\" id=\"sexo\" />\r\n					    </div>\r\n\r\n					    <div class=\"col1\">\r\n					        <label for=\"fechaNacimiento\" class=\"label\">Fecha de nacimiento</label>\r\n							<input type=\"text\" name=\"fechaNacimiento\" class=\"formulario_linea_input\" id=\"fechaNacimiento\" />\r\n					    </div>\r\n\r\n					     <div class=\"col1\">\r\n					        <label for=\"telefono\" class=\"label\">Telefono</label>\r\n							<input type=\"text\" name=\"telefono\" class=\"formulario_linea_input\" id=\"telefono\" />\r\n					    </div>\r\n					</div>\r\n\r\n					<div class=\"two-col\" >\r\n					    <div class=\"col1\">\r\n					       <label for=\"dni\" class=\"label\">DNI</label>\r\n							<input type=\"text\" name=\"dni\" class=\"formulario_linea_input\" id=\"dni\" />\r\n					    </div>\r\n\r\n					</div>\r\n\r\n				</fieldset>\r\n\r\n				<fieldset class=\"alumnoFieldset\">\r\n					<legend>Datos cuenta usuario</legend>\r\n\r\n					<div class=\"two-col\">\r\n					    <div class=\"col1\">\r\n					       <label for=\"usuario\" class=\"label\">Usuario</label>\r\n							<input type=\"text\" name=\"usuario\" class=\"formulario_linea_input\" id=\"usuario\" />\r\n					    </div>\r\n					    <div class=\"col1\">\r\n					    	<div>\r\n					       <label for=\"password\" class=\"label\">Contrase&ntilde;a</label>\r\n							<input type=\"password\" name=\"password\" class=\"formulario_linea_input\" id=\"password\" />\r\n							</div>\r\n							<div>\r\n							<label for=\"password_confirm\" class=\"label\">Confirmar contrase&ntilde;a</label>\r\n							<input type=\"password\" name=\"password_confirm\" class=\"formulario_linea_input\" id=\"password_confirm\" />\r\n							</div>\r\n					    </div>\r\n					      <div class=\"col1\">\r\n					      <div>\r\n					       <label for=\"email\" class=\"label\">Email</label>\r\n							<input type=\"text\" name=\"email\" class=\"formulario_linea_input\" id=\"email\" />\r\n						</div>\r\n						<div>\r\n							<label for=\"email_confirm\" class=\"label\">Confirmar email</label>\r\n							<input type=\"text\" name=\"email_confirm\" class=\"formulario_linea_input\" id=\"email_confirm\" />\r\n						</div>\r\n					    </div>\r\n					</div>\r\n\r\n				</fieldset>\r\n\r\n				<fieldset class=\"alumnoFieldset\">\r\n					<legend>Datos domicilio</legend>\r\n\r\n					<div class=\"two-col\">\r\n					    <div class=\"col1\">\r\n					       <label for=\"nombre\" class=\"label\">País</label>\r\n					     <select path=\"pais.id\" class=\"formulario_linea_input\" id=\"pais\" >\r\n                            </select>\r\n<!-- 						   <input type=\"text\" name=\"pais.id\" class=\"formulario_linea_input\" id=\"pais\" /> -->\r\n					    </div>\r\n					    <div class=\"col1\">\r\n					       <label for=\"autonomia\" class=\"label\">Autonomía</label>\r\n					       <select path=\"autonomia.id\" class=\"formulario_linea_input\" id=\"autonomia\" >\r\n                            </select>\r\n<!-- 							<input type=\"text\" name=\"autonomia.id\" class=\"formulario_linea_input\" id=\"autonomia\" /> -->\r\n					    </div>\r\n					     <div class=\"col1\">\r\n					       <label for=\"provincia\" class=\"label\">Provincia</label>\r\n							<input type=\"text\" name=\"provincia.id\" class=\"formulario_linea_input\" id=\"provincia\" />\r\n					    </div>\r\n					</div>\r\n\r\n					<div class=\"two-col\">\r\n						 <div class=\"col1\">\r\n					       <label for=\"municipio\" class=\"label\">Municipio</label>\r\n							<input type=\"text\" name=\"municipio.id\" class=\"formulario_linea_input\" size=\"30\" id=\"municipio\" />\r\n					    </div>\r\n					     <div class=\"col1\">\r\n					       <label for=\"calle\" class=\"label\">Calle</label>\r\n							<input type=\"text\" name=\"calle.id\" class=\"formulario_linea_input\" size=\"50\" id=\"calle\" />\r\n					    </div>\r\n					</div>\r\n\r\n				</fieldset>\r\n\r\n				<input type=\"submit\" value=\"Enviar\" />\r\n\r\n			</form>\r\n\r\n\r\n<fieldset class=\"alumnoFieldset\">\r\n	<legend>Funciones ajaxForm</legend>\r\n		<div>\r\n			<span>formSerialize</span>\r\n			<code>\r\n				<br />$(\"#formHttpSubmit\").rup_form(\"formSerialize\");<br />\r\n			</code>\r\n			<button id=\"botonFormSerialize\">formSerialize</button>\r\n			<div id=\"resultadoFormSerialize\" class=\"col1\"></div>\r\n		</div>\r\n		<div>\r\n			<span>fieldSerialize</span>\r\n			<code>\r\n				<br />$(\"input\",$(\"#formHttpSubmit\")).rup_form(\"fieldSerialize\");<br />\r\n			</code>\r\n			<button id=\"botonFieldSerialize\">fieldSerialize</button>\r\n			<div id=\"resultadoFieldSerialize\" class=\"col1\"></div>\r\n		</div>\r\n		<div>\r\n			<span>fieldValue</span>\r\n			<code>\r\n				<br />$(\"input\",$(\"#formHttpSubmit\")).rup_form(\"fieldValue\");<br />\r\n			</code>\r\n			<button id=\"botonFieldValue\">fieldValue</button>\r\n			<div id=\"resultadoFieldValue\" class=\"col1\"></div>\r\n		</div>\r\n		<div>\r\n			<span>resetForm</span>\r\n			<code>\r\n				<br />$(\"#formHttpSubmit\").rup_form(\"resetForm\");<br />\r\n			</code>\r\n			<button id=\"botonResetForm\">resetForm</button>\r\n			<div id=\"resultadoResetForm\" class=\"col1\"></div>\r\n		</div>\r\n		<div>\r\n			<span>clearForm</span>\r\n			<code>\r\n				<br />$(\"#formHttpSubmit\").rup_form(\"clearForm\");<br />\r\n			</code>\r\n			<button id=\"botonClearForm\">clearForm</button>\r\n			<div id=\"resultadoClearForm\" class=\"col1\"></div>\r\n		</div>\r\n		<div>\r\n			<span>clearFields</span>\r\n			<code>\r\n				<br />$(\"input\",$(\"#formHttpSubmit\")).rup_form(\"clearFields\");<br />\r\n			</code>\r\n			<button id=\"botonClearFields\">clearFields</button>\r\n			<div id=\"resultadoClearFields\" class=\"col1\"></div>\r\n		</div>\r\n\r\n\r\n	</fieldset>\r\n</div>\r\n\r\n<div id=\"divMultiplesEntidades\">\r\n	<form id=\"formMultientidades\" action='${pageContext.request.contextPath}/patrones/form/multientidades' method=\"post\">\r\n		<fieldset class=\"alumnoFieldset\">\r\n			<legend>Envío de varias entidades</legend>\r\n\r\n			<span>\r\n                <pre>\r\nMediante este formulario se realiza el envío de varias entidades en la misma petición.\r\n\r\nLos campos Nombre, Primer apellido y Segundo apellido corresponden a la entidad Alumno.\r\nLos campos Code, Descripcion castellano y Descripcion euskera corresponden a la entidad Departamento.\r\n                </pre>\r\n            </span>\r\n\r\n			<fieldset class=\"alumnoFieldset\">\r\n				<legend>Alumno</legend>\r\n				<div class=\"two-col\" >\r\n				    <div class=\"col1\">\r\n				       <label for=\"alumno_nombre_multi\" class=\"label\">Nombre</label>\r\n						<input type=\"text\" name=\"alumno.nombre\" class=\"formulario_linea_input\" size=\"20\" id=\"alumno_nombre_multi\" />\r\n				    </div>\r\n\r\n				    <div class=\"col1\">\r\n				        <label for=\"alumno_apellido1_multi\" class=\"label\">Primer apellido</label>\r\n						<input type=\"text\" name=\"alumno.apellido1\" class=\"formulario_linea_input\" size=\"30\" id=\"alumno_apellido1_multi\" />\r\n				    </div>\r\n\r\n				     <div class=\"col1\">\r\n				        <label for=\"alumno_apellido2_multi\" class=\"label\">Segundo apellido</label>\r\n						<input type=\"text\" name=\"alumno.apellido2\" class=\"formulario_linea_input\" size=\"30\" id=\"alumno_apellido2_multi\" />\r\n				    </div>\r\n				</div>\r\n			</fieldset>\r\n			<fieldset class=\"alumnoFieldset\">\r\n				<legend>Departamento</legend>\r\n				<div class=\"two-col\" >\r\n				    <div class=\"col1\">\r\n				       <label for=\"departamento_code_multi\" class=\"label\">C&oacute;digo</label>\r\n						<input type=\"text\" name=\"departamento.code\" class=\"formulario_linea_input\" size=\"20\" id=\"departamento_code_multi\" />\r\n				    </div>\r\n\r\n				    <div class=\"col1\">\r\n				        <label for=\"departamento_descEs_multi\" class=\"label\">Descripci&oacute;n castellano</label>\r\n						<input type=\"text\" name=\"departamento.descEs\" class=\"formulario_linea_input\" size=\"30\" id=\"departamento_descEs_multi\" />\r\n				    </div>\r\n\r\n				     <div class=\"col1\">\r\n				        <label for=\"departamento_descEu_multi\" class=\"label\">Descripci&oacute;n euskera</label>\r\n						<input type=\"text\" name=\"departamento.descEu\" class=\"formulario_linea_input\" size=\"30\" id=\"departamento_descEu_multi\" />\r\n				    </div>\r\n				</div>\r\n			</fieldset>\r\n		<input type=\"submit\" value=\"Env&iacute;o multientidad\" />\r\n		</fieldset>\r\n	</form>\r\n\r\n	<form id=\"formMultientidadesMismoTipo\" action='${pageContext.request.contextPath}/patrones/form/multientidadesMismoTipo' method=\"post\">\r\n		<fieldset class=\"alumnoFieldset\">\r\n			<legend>Envío de varias entidades del mismo tipo</legend>\r\n\r\n			<span>\r\n                <pre>\r\nMediante este formulario se realiza el envío de varias entidades del mismo tipo en la misma petición.\r\n\r\nSe envían tres entidades de tipo comarca.Los campos enviados son Código, Descripción castellano y Descripción euskera.\r\nEn la última entidad se envía también la entidad anidada Localidad\r\n                </pre>\r\n            </span>\r\n\r\n			<fieldset class=\"alumnoFieldset\">\r\n				<legend>Comarca</legend>\r\n				<div class=\"two-col\" >\r\n				    <div class=\"col1\">\r\n				       	<label for=\"comarca1_code_multi\" class=\"label\">C&oacute;digo</label>\r\n						<input type=\"text\" name=\"comarca1.code\" class=\"formulario_linea_input\" size=\"20\" id=\"comarca1_code_multi\" />\r\n				    </div>\r\n\r\n				    <div class=\"col1\">\r\n				        <label for=\"comarca1_descEs_multi\" class=\"label\">Descripci&oacute;n castellano</label>\r\n						<input type=\"text\" name=\"comarca1.descEs\" class=\"formulario_linea_input\" size=\"30\" id=\"comarca1_descEs_multi\" />\r\n				    </div>\r\n\r\n				     <div class=\"col1\">\r\n				        <label for=\"comarca1_descEu_multi\" class=\"label\">Descripci&oacute;n euskera</label>\r\n						<input type=\"text\" name=\"comarca1.descEu\" class=\"formulario_linea_input\" size=\"30\" id=\"comarca1_descEu_multi\" />\r\n				    </div>\r\n				</div>\r\n			</fieldset>\r\n			<fieldset class=\"alumnoFieldset\">\r\n				<legend>Comarca y provincia anidada</legend>\r\n				<div class=\"two-col\" >\r\n				    <div class=\"col1\">\r\n				       	<label for=\"comarca2_code_multi\" class=\"label\">C&oacute;digo</label>\r\n						<input type=\"text\" name=\"comarca2.code\" class=\"formulario_linea_input\" size=\"20\" id=\"comarca2_code_multi\" />\r\n				    </div>\r\n\r\n				    <div class=\"col1\">\r\n				        <label for=\"comarca2_descEs_multi\" class=\"label\">Descripci&oacute;n castellano</label>\r\n						<input type=\"text\" name=\"comarca2.descEs\" class=\"formulario_linea_input\" size=\"30\" id=\"comarca2_descEs_multi\" />\r\n				    </div>\r\n\r\n				     <div class=\"col1\">\r\n				        <label for=\"comarca2_descEu_multi\" class=\"label\">Descripci&oacute;n euskera</label>\r\n						<input type=\"text\" name=\"comarca2.descEu\" class=\"formulario_linea_input\" size=\"30\" id=\"comarca2_descEu_multi\" />\r\n				    </div>\r\n				</div>\r\n			</fieldset>\r\n			<fieldset class=\"alumnoFieldset\">\r\n				<legend><spring:message code=\"comarcaYprovincia\" /></legend>\r\n				<br/>\r\n					<i><spring:message code=\"comarca\" /></i>\r\n				<br/>\r\n				<div class=\"two-col\" >\r\n				    <div class=\"col1\">\r\n				       	<label for=\"comarca3_code_multi\" class=\"label\">C&oacute;digo</label>\r\n						<input type=\"text\" name=\"comarca3.code\" class=\"formulario_linea_input\" size=\"20\" id=\"comarca3_code_multi\" />\r\n				    </div>\r\n\r\n				    <div class=\"col1\">\r\n				        <label for=\"comarca3_descEs_multi\" class=\"label\">Descripci&oacute;n castellano</label>\r\n						<input type=\"text\" name=\"comarca3.descEs\" class=\"formulario_linea_input\" size=\"30\" id=\"comarca3_descEs_multi\" />\r\n				    </div>\r\n\r\n				     <div class=\"col1\">\r\n				        <label for=\"comarca3_descEu_multi\" class=\"label\">Descripci&oacute;n euskera</label>\r\n						<input type=\"text\" name=\"comarca3.descEu\" class=\"formulario_linea_input\" size=\"30\" id=\"comarca3_descEu_multi\" />\r\n				    </div>\r\n				</div>\r\n				<br/><br/>\r\n				<br/>\r\n					<i><spring:message code=\"provincia\" /></i>\r\n				<br/>\r\n				<div class=\"two-col\" >\r\n				    <div class=\"col1\">\r\n				       	<label for=\"comarca3_provincia_code_multi\" class=\"label\">C&oacute;digo</label>\r\n						<input type=\"text\" name=\"comarca3.provincia.code\" class=\"formulario_linea_input\" size=\"20\" id=\"comarca3_provincia_code_multi\" />\r\n				    </div>\r\n\r\n				    <div class=\"col1\">\r\n				        <label for=\"comarca3_provincia_descEs_multi\" class=\"label\">Descripci&oacute;n castellano</label>\r\n						<input type=\"text\" name=\"comarca3.provincia.descEs\" class=\"formulario_linea_input\" size=\"30\" id=\"comarca3_provincia_descEs_multi\" />\r\n				    </div>\r\n\r\n				     <div class=\"col1\">\r\n				        <label for=\"comarca3_descEu_multi\" class=\"label\">Descripci&oacute;n euskera</label>\r\n						<input type=\"text\" name=\"comarca3.provincia.descEu\" class=\"formulario_linea_input\" size=\"30\" id=\"comarca3_provincia_descEu_multi\" />\r\n				    </div>\r\n				</div>\r\n			</fieldset>\r\n		<input type=\"submit\" value=\"Env&iacute;o multientidad\" />\r\n		</fieldset>\r\n	</form>\r\n</div>\r\n\r\n<div id=\"divSubidaFicheros\">\r\n	<fieldset class=\"alumnoFieldset\">\r\n		<legend>Subida de ficheros</legend>\r\n\r\n		<form id=\"formSubidaArchivos\" action='${pageContext.request.contextPath}/patrones/form/subidaArchivos' method=\"post\">\r\n\r\n			<div id=\"feedback_fileupload_form_multiple\"></div>\r\n			<div class=\"formulario_columna_cnt\">\r\n				<div class=\"formulario_linea_izda_float\">\r\n					<label id=\"label_nombre\"  for=\"nombre\" >Nombre :</label>\r\n					<input id=\"nombre\" name=\"nombre\" />\r\n				</div>\r\n				<div class=\"formulario_linea_izda_float\">\r\n					<label id=\"label_apellido1\"  for=\"apellido1\" >Apellido 1:</label>\r\n					<input id=\"apellido1\" name=\"apellido1\" />\r\n				</div>\r\n				<div class=\"formulario_linea_izda_float\">\r\n					<label id=\"label_apellido2\"  for=\"apellido2\" >Apellido 2:</label>\r\n					<input id=\"apellido2\" name=\"apellido2\" />\r\n				</div>\r\n				<div class=\"formulario_linea_izda_float\">\r\n					<label id=\"label_ejie\"  for=\"ejie\" >EJIE:</label>\r\n					<input type=\"checkbox\" id=\"ejie\" name=\"ejie\" value=\"1\" />\r\n				</div>\r\n			</div>\r\n			<div class=\"formulario_columna_cnt\">\r\n			&nbsp;\r\n			</div>\r\n			<div class=\"formulario_columna_cnt\">\r\n				<div class=\"formulario_linea_izda_float\">\r\n					Archivos adjuntos:\r\n				</div>\r\n			</div>\r\n			<div class=\"formulario_columna_cnt\">\r\n				<div class=\"formulario_linea_izda_float\">\r\n			        <div id=\"fileupload_file_form_padre\" >\r\n				        <div class=\"fileupload-buttonbar\">\r\n				            <label for=\"file\">Foto padre: </label>\r\n				            <input id=\"file_form_padre\" type=\"file\" name=\"fotoPadre\">\r\n						</div>\r\n						 <div class=\"fileupload-content\">\r\n					        <table class=\"files\"></table>\r\n					    </div>\r\n			        </div>\r\n\r\n			        <div id=\"fileupload_file_form_madre\">\r\n			        	<div class=\"fileupload-buttonbar\">\r\n				            <label for=\"file\">Foto madre: </label>\r\n				            <input id=\"file_form_madre\" type=\"file\" name=\"fotoMadre\">\r\n						</div>\r\n						<div class=\"fileupload-content\">\r\n					        <table class=\"files\"></table>\r\n					    </div>\r\n			        </div>\r\n\r\n			    </div>\r\n			  </div>\r\n			  <div class=\"formulario_columna_cnt\">\r\n			 	 <div class=\"formulario_linea_izda_float fileupload-buttonbar\"  >\r\n					<button id=\"sendButtonArchivos\" type=\"submit\" class=\"start\">Enviar formulario</button>\r\n				</div>\r\n			</div>\r\n			</form>\r\n		</fieldset>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["menu"] = this["App"]["Templates"]["demo"]["app"]["components"]["menu"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["menu"]["menuHorizontalTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Men&uacute;</h2>	\r\n<p>\r\n	Lorem ipsum ad his scripta blandit partiendo, eum fastidii accumsan euripidis in, eum liber hendrerit an. Qui ut wisi vocibus suscipiantur, quo dicit ridens inciderint id. Quo mundi lobortis reformidans eu, legimus senserit definiebas an eos. Eu sit tincidunt incorrupte definitionem, vis mutat affert percipit cu, eirmod consectetuer signiferumque eu per. In usu latine equidem dolores. Quo no falli viris intellegam, ut fugit veritus placerat per.\r\n	Ius id vidit volumus mandamus, vide veritus democritum te nec, ei eos debet libris consulatu. No mei ferri graeco dicunt, ad cum veri accommodare. Sed at malis omnesque delicata, usu et iusto zzril meliore. Dicunt maiorum eloquentiam cum cu, sit summo dolor essent te. Ne quodsi nusquam legendos has, ea dicit voluptua eloquentiam pro, ad sit quas qualisque. Eos vocibus deserunt quaestio ei.\r\n</p>";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["menu"]["menuMixtoTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["menu"]["menuVerticalTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["menu"]["navMenuTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Men&uacute;</h2>\r\n\r\n<ul id=\"example\">\r\n\r\n			<li>\r\n				<a href=\"/x21aResponsiveWar/patrones/all\">\r\n					[Todos los patrones]\r\n				</a>\r\n			</li>\r\n			<li class=\"ui-widget-content ui-menu-divider\"></li>\r\n			<li><strong>Notificaciones</strong></li>\r\n			<li>\r\n				<a href=\"#feedback\">\r\n					Feedback\r\n					<span class=\"ui-icon feedback_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#tooltip\">\r\n					Tooltip\r\n					<span class=\"ui-icon tooltip_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#message\">\r\n					Mensajes\r\n					<span class=\"ui-icon message_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#dialog\">\r\n					Diálogos\r\n					<span class=\"ui-icon dialog_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#progressbar\">\r\n					Barra de progreso\r\n					<span class=\"ui-icon dialog_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li class=\"ui-widget-content ui-menu-divider\"></li>\r\n			<li><strong>Navegación</strong></li>\r\n\r\n					<li>\r\n						<a href=\"#menuHorizontal\">\r\n							Horizontal\r\n						</a>\r\n					</li>\r\n					<li>\r\n						<a href=\"#menuVertical\">\r\n							Vertical\r\n						</a>\r\n					</li>\r\n					<li>\r\n						<a	href=\"#menuMixto\">\r\n							Mixto\r\n						</a>\r\n					</li>\r\n					<li>\r\n						<a href=\"#navMenu\">\r\n							Con Navegación\r\n						</a>\r\n					</li>\r\n\r\n			<li>\r\n				<a href=\"#contextMenu\">\r\n					Menú contextual\r\n					<span class=\"ui-icon contextMenu_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#toolbar\">\r\n					Botonera\r\n					<span class=\"ui-icon toolbar_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#button\">\r\n					Botón\r\n					<span class=\"ui-icon toolbar_icon\"></span>\r\n				</a>\r\n			</li>\r\n\r\n			<li>\r\n				<a href=\"#accordion\">\r\n					Accordion\r\n					<span class=\"ui-icon accordion_icon\"></span>\r\n				</a>\r\n			</li>\r\n\r\n					<li>\r\n						<a href=\"#tabsStatic\">\r\n							Pestañas carga estática\r\n						</a>\r\n					</li>\r\n					<li>\r\n						<a	href=\"#tabsAjax\">\r\n							Pestañas carga Ajax\r\n						</a>\r\n					</li>\r\n					<li>\r\n						<a	href=\"#tabsMixto\">\r\n							Pestañas carga mixta\r\n						</a>\r\n					</li>\r\n					<li>\r\n						<a href=\"/x21aResponsiveWar/patrones/maintTab\">\r\n							Pestañas con mantenimientos\r\n						</a>\r\n					</li>\r\n					<li>\r\n						<a href=\"#tabsScrollable\">\r\n							Pestañas con navegación\r\n						</a>\r\n					</li>\r\n\r\n\r\n\r\n					<li>\r\n						<a	href=\"#wizard\">\r\n							Wizard simple\r\n						</a>\r\n					</li>\r\n					<li>\r\n						<a	href=\"#wizardDinamico\">\r\n							Wizard dinámico\r\n						</a>\r\n					</li>\r\n\r\n\r\n					<li>\r\n						<a	href=\"/x21aResponsiveWar/patrones/trees\">\r\n							Árboles con diferentes configuraciones\r\n						</a>\r\n					</li>\r\n\r\n					<li>\r\n						<a href=\"/x21aResponsiveWar/patrones/treeDAD\">\r\n							Árboles con interaccion mediante Drag & Drop\r\n						</a>\r\n					</li>\r\n\r\n\r\n\r\n			<li>\r\n				<a href=\"#autocomplete\">\r\n					Autocomplete\r\n					<span class=\"ui-icon autocomplete_icon\"></span>\r\n				</a>\r\n			</li>\r\n\r\n\r\n\r\n\r\n\r\n\r\n			<li>\r\n				<a href=\"#slider\">\r\n					Deslizador\r\n					<span class=\"ui-icon date_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#date\">\r\n					Fecha\r\n					<span class=\"ui-icon date_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#form\">\r\n					Formulario\r\n					<span class=\"ui-icon form_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#time\">\r\n					Hora\r\n					<span class=\"ui-icon time_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#slider\">\r\n					Slider\r\n					<span class=\"ui-icon date_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#spinner\">\r\n					Spinner\r\n					<span class=\"ui-icon date_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#upload\">\r\n					Upload\r\n					<span class=\"ui-icon upload_icon\"></span>\r\n				</a>\r\n			</li>\r\n			<li>\r\n				<a href=\"#validate\">\r\n					Validación\r\n					<span class=\"ui-icon validate_icon\"></span>\r\n				</a>\r\n			</li>\r\n	</ul>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["message"] = this["App"]["Templates"]["demo"]["app"]["components"]["message"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["message"]["messageBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"message-view\">\r\n  <h3>Mensaje</h3>\r\n  <p>\r\n    Tiene como objetivo mostrar al usuario de forma homogénea, clara y llamativa, los posibles mensajes que pueden desencadenar las acciones en la aplicación. Estos mensajes predefinidos pueden ser de diferente tipología: error, confirmación, aviso o alerta\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["message"]["messageHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<button id=\"btnOK\" class=\"message-button\">Mostrar Ok</button>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["message"]["messageJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$.rup_messages(\"msgOK\", {\r\n  title: \"Correcto\",\r\n  message: \"Todo ha ido OK.\"\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["message"]["messageTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"fluid-container\">\r\n\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col-md-2 col-md-offset-1\">\r\n      <button id=\"btnError\" class=\"message-button btn-block\">Mostrar Error</button>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n      <button id=\"btnConfirm\" class=\"message-button btn-block\">Mostrar Confirmacion</button>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n      <button id=\"btnOK\" class=\"message-button btn-block\">Mostrar Ok</button>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n      <button id=\"btnAlert\" class=\"message-button btn-block\">Mostrar Alert</button>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n      <button id=\"btnAlertJS\" class=\"message-button btn-block\">Mostrar Alert Javascript</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["progressbar"] = this["App"]["Templates"]["demo"]["app"]["components"]["progressbar"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["progressbar"]["progressbarBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"contextMenu-view\">\r\n  <h3>Barra de progreso</h3>\r\n  <p>\r\n    Elemento de las interfaces gráficas que permite mostrar de forma gráfica el estado de avance de una tarea o proceso. \r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["progressbar"]["progressbarHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"progressbar\"></div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["progressbar"]["progressbarJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#progressbar\").rup_progressbar({\r\n  value: 37\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["progressbar"]["progressbarTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<span> Barra de progreso simple </span>\r\n<div id=\"progressbar\"></div>\r\n<br/><br/>\r\n<span> Barra de progreso mostrando un mensaje </span>\r\n<div id=\"progressbarLabel\"></div>\r\n<br/><br/>\r\n<span> Barra de progreso sin mostrar un valor concreto </span>\r\n<div id=\"progressbarValueFalse\"></div>\r\n<br/><br/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["slider"] = this["App"]["Templates"]["demo"]["app"]["components"]["slider"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["slider"]["sliderBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"slider-view\">\r\n  <h3>Deslizador</h3>\r\n  <p>\r\n     Permite seleccionar un valor moviendo un indicador o, en algunos casos, el usuario puede hacer clic sobre algún punto del slider para cambiar hacia ese valor.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["slider"]["sliderHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"slider\"></div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["slider"]["sliderJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#slider\").rup_slider({});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["slider"]["sliderTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"slider-examples\">\r\n  <div class=\"example\">\r\n    <div id=\"slider\"></div>\r\n  </div>\r\n\r\n  <div class=\"example\">\r\n    <p>\r\n      <label for=\"amount\">Price range:</label>\r\n      <input type=\"text\" id=\"amount\" readonly style=\"border:0; color:#f6931f; font-weight:bold;\">\r\n    </p>\r\n    <div id=\"sliderRange\"></div>\r\n  </div>\r\n\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["spinner"] = this["App"]["Templates"]["demo"]["app"]["components"]["spinner"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["spinner"]["spinnerBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"spinner-view\">\r\n  <h3>Spinner</h3>\r\n  <p>\r\n    Un spinner es un elemento de las interfaces gráficas que permite al usuario ajustar un valor dentro de un cuadro de texto adjunto a dos flechas que apuntan en direcciones opuestas.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["spinner"]["spinnerHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"progressbar\"></div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["spinner"]["spinnerJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#progressbar\").rup_progressbar({\r\n  value: 37\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["spinner"]["spinnerTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<p>\r\n  <label for=\"spinner\">Seleccione un valor:</label>\r\n  <input id=\"spinner\" name=\"value\">\r\n</p>\r\n\r\n<p>\r\n  <button id=\"disable\">Habilitar/deshabilitar</button>\r\n  <button id=\"destroy\">Destruir/inicializar</button>\r\n</p>\r\n\r\n<p>\r\n  <button id=\"getvalue\">Obtener valor</button>\r\n  <button id=\"setvalue\">Asignar valor a 5</button>\r\n</p>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tabs"] = this["App"]["Templates"]["demo"]["app"]["components"]["tabs"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["tabs"]["tabsAjaxTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Tab (carga mediante llamadas de tipo Ajax)</h2>\r\n<div id=\"tabs\"></div>\r\n\r\n<div id=\"testButtons\" style=\"padding-top: 0.8em\">\r\n	<button title=\"<spring:message code=\"tab.changeUrlTab.tooltip\" />\" id=\"changeUrlTab\">Cambia url del \"Tab 0\"</button>\r\n	<button title=\"<spring:message code=\"tab.AddTab.tooltip\" />\" id=\"addSubPestana\">Añade una nueva pestaña</button>\r\n	<button title=\"<spring:message code=\"tab.AddSubTab.tooltip\" />\" id=\"addSubLevelPestana\">Añadir sub-nivel de pestañas estáticas</button>\r\n	<button title=\"<spring:message code=\"tab.AddSubTabPlusTab.tooltip\" />\" id=\"addSubLevelPestanaMasPestaÃ±a\">Añadir sub-nivel de pestañas estáticas con pestaña de url adicional</button>\r\n	<button title=\"<spring:message code=\"tab.mainTab.tooltip\" />\" id=\"addSubLevelPestana3Maint\">Pestaña con mantenimientos</button>\r\n</div>\r\n\r\n<div class=\"estiloo\" style=\"display: none;\">\r\n\r\n	<h1>PestaÃ±as de navegaciÃ³n</h1>\r\n	<p id=\"docu\">\r\n		<a target=\"_blank\" href=\"#\">Descargar documentaciÃ³n</a>\r\n	</p>\r\n	<br>\r\n\r\n	<h2>DescripciÃ³n</h2>\r\n	<p>MenÃº de navegaciÃ³n de la aplicaciÃ³n que divide Ã©sta en secciones\r\n		claramente excluyentes entre sÃ­ y da acceso a ellas.</p>\r\n	<h2>Usar cuando</h2>\r\n	<p>Cuando tengamos una aplicaciÃ³n web cuyos contenidos se puedan\r\n		dividir en secciones claramente excluyentes entre sÃ­ y queramos\r\n		proporcionar a los usuarios un menÃº de navegaciÃ³n para navegar por\r\n		ellas.</p>\r\n\r\n	<h2>Accesibilidad</h2>\r\n	<p>\r\n		Es muy importante que los contenidos estÃ¡n estructurados y\r\n		jerarquizados correctamente en funciÃ³n de los modelos mentales de los\r\n		usuarios y que los rÃ³tulos sean sencillos de comprender. Cuanto mÃ­s\r\n		lÃ³gica, sencilla y fÃ¡cil de comprender sea la navegaciÃ³n mÃ­s accesible\r\n		serÃ¡, especialmente para los usuarios con problemas cognitivos o\r\n		sordera prelocutiva ya que estos perfiles de accesibilidad pueden\r\n		tener problemas a la hora de comprender estructuras de informaciÃ³n\r\n		complejas o terminologÃ­a muy especÃ­fica.<br> <br>Los menÃºs\r\n		de navegaciÃ³n basados en pestaÃ±as, si estÃ¡n bien implementados, pueden\r\n		suponer una mejora de accesibilidad notable ya que facilitan mucho la\r\n		comprensiÃ³n de la estructura de la aplicaciÃ³n y del funcionamiento del\r\n		sistema de navegaciÃ³n.\r\n	</p>\r\n	<p>\r\n		<em>Nivel de accesibilidad alcanzado por cada tecnologÃ­a</em>:\r\n	</p>\r\n	<ul>\r\n		<li style=\"margin-left: 25px; margin-top: 20px;\"><em>Geremua\r\n				2:</em> El componente ha sido implementado con jQuery, con lo que al\r\n			ejecutar javascript no cumple las normas de accesibilidad.</li>\r\n		<li style=\"margin-left: 25px;\"><em>.NET:</em> El componente ha\r\n			sido implementado con jQuery, con lo que al ejecutar javascript no\r\n			cumple las normas de accesibilidad.</li>\r\n	</ul>\r\n	<h2>PatrÃ³n relacionado con</h2>\r\n	<ul>\r\n		<li style=\"margin-left: 25px; margin-top: 20px;\">2.1.1.\r\n			OrganizaciÃ³n y jerarquÃ­a de pantalla</li>\r\n		<li style=\"margin-left: 25px;\">2.2.1. MenÃºs de navegaciÃ³n</li>\r\n	</ul>\r\n\r\n</div>";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tabs"]["tabsMixtoTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Tab (Combinación de carga por url y por html)</h2>\r\n\r\n<div id=\"tabsMixta\"></div>\r\n\r\n<div id=\"ejemploVisual\" class=\"estiloMixto\" style=\"display: none;\">\r\n	<div class=\"box-content-2\">\r\n		<div class=\"box-content-5\">\r\n			<h1>\r\n				<a rel=\"permalink\"\r\n					href=\"http://desarrollo.jakina.ejiedes.net:7001/x21aPilotoPatronesWar/patrones/tabsStatic\">JSRs\r\n					for Java 7 and Java 8 Approved</a>\r\n			</h1>\r\n\r\n			<p>The results of the recent Java JSRs are in, and all have\r\n				passed with all but Apache voting consistently against them. Google\r\n				and Tim Peierls voted against the Java SE 7 and Java SE 8 JSRs,\r\n				supporting the ongoing licensing issues and field-of-use\r\n				restrictions for the TCK.</p>\r\n			<ul>\r\n				<li>Project Coin, <a\r\n					href=\"http://jcp.org/en/jsr/summary?id=334\">JSR 334</a>, <a\r\n					href=\"http://jcp.org/en/jsr/results?id=5109\">passed</a> with 13\r\n					votes to 1 (and 1 abstention)</li>\r\n				<li>Project Lambda, <a\r\n					href=\"http://jcp.org/en/jsr/summary?id=335\">JSR 335</a>, <a\r\n					href=\"http://jcp.org/en/jsr/results?id=5110\">passed</a> with 13\r\n					votes to 1 (and 1 abstention)</li>\r\n				<li>Java SE 7, <a href=\"http://jcp.org/en/jsr/summary?id=336\">JSR\r\n						336</a>, <a href=\"http://jcp.org/en/jsr/results?id=5111\">passed</a>\r\n					with 12 votes to 3</li>\r\n				<li>Java SE 8, <a href=\"http://jcp.org/en/jsr/summary?id=337\">JSR\r\n						337</a>, <a href=\"http://jcp.org/en/jsr/results?id=5112\">passed</a>\r\n					with 12 votes to 3</li>\r\n			</ul>\r\n			<p>\r\n				The comments make interesting reading; Steven Colebourne <a\r\n					href=\"http://www.jroller.com/scolebourne/entry/java_se_7_8_passed\">summarises\r\n					them on one page</a>. Even though the majority voted for the TCK, the\r\n				comments continue to criticise the licensing issues:\r\n			</p>\r\n			<ul>\r\n				<li><b>Google</b>: is voting no because of its licensing terms</li>\r\n				<li><b>SAP AG</b>: While we believe it is important for Java 7\r\n					to proceed now, we want to express our disagreement about Oracle's\r\n					decision regarding the TCK for Apache.</li>\r\n				<li><b>Eclipse</b>: is disappointed with the continuing issues\r\n					around Java licensing</li>\r\n				<li><b>RedHat</b>: is extremely disappointed with the license\r\n					terms and that a more open license has not been adopted by the\r\n					Specification Lead</li>\r\n				<li><b>Credit Suisse</b>: The current battle around licensing\r\n					term, however, reveals that Java never actually was an open\r\n					standard.</li>\r\n			</ul>\r\n			<p>Many of the comments also show that they are begrudgingly\r\n				voting for the JSR if only to move the Java platform forwards from\r\n				the stagnant location it is today. In addition, modularity raises\r\n				its voice in both the Java SE 7 and Java SE 8 discussions, with OSGi\r\n				interoperability being mentioned specifically for the Java SE 8 JSR.</p>\r\n			<p>This is also the first time an umbrella Java SE JSR has been\r\n				put to the vote before it's actually ready. Whilst the work on\r\n				Project Coin and Project Lambda have made significant progress\r\n				recently, and the other inclusions (such as JDBC 4.1) in Java SE 7\r\n				will be welcomed, the contents of the Java SE 8 JSR include a number\r\n				of not-even-started JSRs. Perhaps when Java SE 8 is ready, Oracle\r\n				can point back to the votes and claim that it was agreed by most,\r\n				even if the Java SE 8 content differs markedly from its original\r\n				version.</p>\r\n			<p>\r\n				However, with the licensing issue left unresolved, some are calling\r\n				the JCP â<a\r\n					href=\"http://communityovercode.com/2010/12/java-no-longer-free-as-in-speech/\">Just\r\n					Customers, Please</a>â &ndash; Oracle does not appear to take the JCP\r\n				seriously any more. The last stage in this saga will be Apache's\r\n				resignation from the JCP which will follow up on their <a\r\n					href=\"https://blogs.apache.org/foundation/entry/statement_by_the_asf_board1\">earlier\r\n					threat</a>. Here is what may be the Apache Foundation's last vote on a\r\n				JSR:\r\n			</p>\r\n			<blockquote>\r\n				<p>The Apache Software Foundation must vote no on this JSR.\r\n					While we support the technical contents of the JSR, and earnestly\r\n					support the need for the Java platform to move forward, we cannot\r\n					in good conscience vote for this JSR because:</p>\r\n				<ol>\r\n					<li type=\"a\">This JSR's TCK license includes a \"Field of Use\"\r\n						restriction that restricts commonplace and mundane use of\r\n						independent implementations, a licensing element that not only is\r\n						prohibited by the JSPA but also has been unanimously rejected by\r\n						the majority of the members of the JCP EC - including Oracle - on\r\n						several occasions. We can only speculate why Oracle included such\r\n						an element, but we believe that an open specification ecosystem\r\n						must be independent of - and protected from - any entity's\r\n						commercial interests.</li>\r\n					<li type=\"a\">On process grounds, this JSR is in conflict with\r\n						it's own TCK license. The JSR explicitly states that Java SE is\r\n						targeted for, among others, embedded deployments. Yet the TCK\r\n						license specifically prohibits such usages (for example, netbooks)\r\n						of tested independent implementations. We find this to be a\r\n						misleading legal trap for potential implementers, and believe that\r\n						any independent implementation that passes the TCK should be able\r\n						to be used and distributed under whatever terms deemed fit by the\r\n						implementer.</li>\r\n					<li type=\"a\">The spec lead has ignored repeated requests from\r\n						multiple EC members for and explanation of both a. and b.</li>\r\n					<li type=\"a\">The spec lead - Oracle - is in breach of their\r\n						obligations under the JSPA by continuing to provide a TCK license\r\n						for Apache Harmony under terms that allow Apache to distribute its\r\n						independent implementation under terms of its choice. We do not\r\n						believe that anyone that willfully fails to meet their contractual\r\n						obligations under the JSPA should be allowed to participate as a\r\n						member in good stating in the JCP. The rules apply to everyone.</li>\r\n				</ol>\r\n				<p>While we understand that it's Oracle's stated intent to move\r\n					forward irrespective of the EC's decision, we urge Oracle to fix\r\n					the above-mentioned issues, and continue to work with the members\r\n					of the JCP within the structure of the JCP to keep Java a vital and\r\n					viable platform.</p>\r\n			</blockquote>\r\n			<p>\r\n				Since Oracle looks unlikely to <a\r\n					href=\"https://blogs.apache.org/foundation/entry/statement_by_the_asf_board2\">honor\r\n					the agreement</a>, a statement by the <a\r\n					href=\"https://blogs.apache.org/foundation/\">Apache Foundation</a>\r\n				is expected in the next week.\r\n			</p>\r\n			<div class=\"box-bottom\"></div>\r\n		</div>\r\n	</div>\r\n	<div class=\"bottom-corners\">\r\n		<div></div>\r\n	</div>\r\n</div>";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tabs"]["tabsScrollableTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Pestaña con navegación</h2>\r\n\r\n<div id=\"tabsScrollableExample\"></div>\r\n		\r\n		<div id=\"tabs-1-3\">Tab 1<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-2-3\">This is tab 2<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-3-3\">This is tab number 3<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-4-3\">Tab no 4<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-5-3\">And this is the tab number 5<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-6-3\">Tab number 6<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-7-3\">And last tab number 7<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-8-3\">And last tab number 7<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-9-3\">And last tab number 7<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-10-3\">And last tab number 7<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		\r\n		<div id=\"tabs-11-3\">Tab 1<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-12-3\">This is tab 2<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-13-3\">This is tab number 3<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-14-3\">Tab no 4<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-15-3\">And this is the tab number 5<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-16-3\">Tab number 6<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-17-3\">And last tab number 7<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-18-3\">And last tab number 7<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n		<div id=\"tabs-19-3\">And last tab number 7<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div>\r\n<!-- 		<div id=\"tabs-20-3\">And last tab number 7<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque hendrerit vulputate porttitor. Fusce purus leo, faucibus a sagittis congue, molestie tempus felis. Donec convallis semper enim, varius sagittis eros imperdiet in. Vivamus semper sem at metus mattis a aliquam neque ornare. Proin sed semper lacus.</div> -->";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tabs"]["tabsStaticTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tabs-view container-fluid\">\r\n  <section>\r\n    <h3>Pestañas (carga mediante htmls previamente cargados)</h3>\r\n    <p>\r\n			Permiten dar acceso de forma compacta a grupos de contenidos mutuamente excluyentes pudiendo ser integradas en zonas muy reducidas de la interfaz.\r\n    </p>\r\n    <h4>Ejemplos</h4>\r\n\r\n		<div id=\"tabsStatic\"></div>\r\n\r\n    <pre>\r\n      <code class=\"html\">\r\n      \r\n      </code>\r\n    </pre>\r\n  </section>\r\n</div>\r\n\r\n<div class=\"estiloo\" style=\"display: none;\">\r\n\r\n	<h1>Pestañas de navegación</h1>\r\n	<p id=\"docu\">\r\n		<a target=\"_blank\" href=\"#\">Descargar documentación</a>\r\n	</p>\r\n	<br>\r\n\r\n	<h2>Descripción</h2>\r\n	<p>Menú de navegación de la aplicación que divide í©sta en secciones\r\n		claramente excluyentes entre sí­ y da acceso a ellas.</p>\r\n	<h2>Usar cuando</h2>\r\n	<p>Cuando tengamos una aplicación web cuyos contenidos se puedan\r\n		dividir en secciones claramente excluyentes entre sí­ y queramos\r\n		proporcionar a los usuarios un menú de navegación para navegar por\r\n		ellas.</p>\r\n\r\n	<h2>Accesibilidad</h2>\r\n	<p>\r\n		Es muy importante que los contenidos estí¡n estructurados y\r\n		jerarquizados correctamente en función de los modelos mentales de los\r\n		usuarios y que los rótulos sean sencillos de comprender. Cuanto mí­s\r\n		lógica, sencilla y fí¡cil de comprender sea la navegación mí­s accesible\r\n		serí¡, especialmente para los usuarios con problemas cognitivos o\r\n		sordera prelocutiva ya que estos perfiles de accesibilidad pueden\r\n		tener problemas a la hora de comprender estructuras de información\r\n		complejas o terminologí­a muy especí­fica.<br> <br>Los menús\r\n		de navegación basados en pestañas, si estí¡n bien implementados, pueden\r\n		suponer una mejora de accesibilidad notable ya que facilitan mucho la\r\n		comprensión de la estructura de la aplicación y del funcionamiento del\r\n		sistema de navegación.\r\n	</p>\r\n	<p>\r\n		<em>Nivel de accesibilidad alcanzado por cada tecnologí­a</em>:\r\n	</p>\r\n	<ul>\r\n		<li style=\"margin-left: 25px; margin-top: 20px;\"><em>Geremua\r\n				2:</em> El componente ha sido implementado con jQuery, con lo que al\r\n			ejecutar javascript no cumple las normas de accesibilidad.</li>\r\n		<li style=\"margin-left: 25px;\"><em>.NET:</em> El componente ha\r\n			sido implementado con jQuery, con lo que al ejecutar javascript no\r\n			cumple las normas de accesibilidad.</li>\r\n	</ul>\r\n	<h2>Patrón relacionado con</h2>\r\n	<ul>\r\n		<li style=\"margin-left: 25px; margin-top: 20px;\">2.1.1.\r\n			Organización y jerarquí­a de pantalla</li>\r\n		<li style=\"margin-left: 25px;\">2.2.1. Menús de navegación</li>\r\n	</ul>\r\n\r\n</div>\r\n\r\n<div class=\"estiloo2\" style=\"display: none;\">\r\n\r\n	<h1>Pestañas de navegación</h1>\r\n	<p id=\"docu\">\r\n		<a target=\"_blank\" href=\"#\">Descargar documentación</a>\r\n	</p>\r\n	<br>\r\n\r\n	<h2>Patrón relacionado con</h2>\r\n	<ul>\r\n		<li style=\"margin-left: 25px; margin-top: 20px;\">2.1.1.\r\n			Organización y jerarquí­a de pantalla</li>\r\n		<li style=\"margin-left: 25px;\">2.2.1. Menús de navegación</li>\r\n	</ul>\r\n\r\n</div>\r\n\r\n<div id=\"ejemploVisual\" class=\"box-content\" style=\"display: none;\">\r\n	<div class=\"box-content-2\">\r\n		<div class=\"box-content-5\">\r\n			<h1>\r\n				<a rel=\"permalink\"\r\n					href=\"http://desarrollo.jakina.ejiedes.net:7001/x21aPilotoPatronesWar/patrones/tabsStatic\">JSRs\r\n					for Java 7 and Java 8 Approved</a>\r\n			</h1>\r\n\r\n			<p>The results of the recent Java JSRs are in, and all have\r\n				passed with all but Apache voting consistently against them. Google\r\n				and Tim Peierls voted against the Java SE 7 and Java SE 8 JSRs,\r\n				supporting the ongoing licensing issues and field-of-use\r\n				restrictions for the TCK.</p>\r\n			<ul>\r\n				<li>Project Coin, <a\r\n					href=\"http://jcp.org/en/jsr/summary?id=334\">JSR 334</a>, <a\r\n					href=\"http://jcp.org/en/jsr/results?id=5109\">passed</a> with 13\r\n					votes to 1 (and 1 abstention)</li>\r\n				<li>Project Lambda, <a\r\n					href=\"http://jcp.org/en/jsr/summary?id=335\">JSR 335</a>, <a\r\n					href=\"http://jcp.org/en/jsr/results?id=5110\">passed</a> with 13\r\n					votes to 1 (and 1 abstention)</li>\r\n				<li>Java SE 7, <a href=\"http://jcp.org/en/jsr/summary?id=336\">JSR\r\n						336</a>, <a href=\"http://jcp.org/en/jsr/results?id=5111\">passed</a>\r\n					with 12 votes to 3</li>\r\n				<li>Java SE 8, <a href=\"http://jcp.org/en/jsr/summary?id=337\">JSR\r\n						337</a>, <a href=\"http://jcp.org/en/jsr/results?id=5112\">passed</a>\r\n					with 12 votes to 3</li>\r\n			</ul>\r\n			<p>\r\n				The comments make interesting reading; Steven Colebourne <a\r\n					href=\"http://www.jroller.com/scolebourne/entry/java_se_7_8_passed\">summarises\r\n					them on one page</a>. Even though the majority voted for the TCK, the\r\n				comments continue to criticise the licensing issues:\r\n			</p>\r\n			<ul>\r\n				<li><b>Google</b>: is voting no because of its licensing terms</li>\r\n				<li><b>SAP AG</b>: While we believe it is important for Java 7\r\n					to proceed now, we want to express our disagreement about Oracle's\r\n					decision regarding the TCK for Apache.</li>\r\n				<li><b>Eclipse</b>: is disappointed with the continuing issues\r\n					around Java licensing</li>\r\n				<li><b>RedHat</b>: is extremely disappointed with the license\r\n					terms and that a more open license has not been adopted by the\r\n					Specification Lead</li>\r\n				<li><b>Credit Suisse</b>: The current battle around licensing\r\n					term, however, reveals that Java never actually was an open\r\n					standard.</li>\r\n			</ul>\r\n			<p>Many of the comments also show that they are begrudgingly\r\n				voting for the JSR if only to move the Java platform forwards from\r\n				the stagnant location it is today. In addition, modularity raises\r\n				its voice in both the Java SE 7 and Java SE 8 discussions, with OSGi\r\n				interoperability being mentioned specifically for the Java SE 8 JSR.</p>\r\n			<p>This is also the first time an umbrella Java SE JSR has been\r\n				put to the vote before it's actually ready. Whilst the work on\r\n				Project Coin and Project Lambda have made significant progress\r\n				recently, and the other inclusions (such as JDBC 4.1) in Java SE 7\r\n				will be welcomed, the contents of the Java SE 8 JSR include a number\r\n				of not-even-started JSRs. Perhaps when Java SE 8 is ready, Oracle\r\n				can point back to the votes and claim that it was agreed by most,\r\n				even if the Java SE 8 content differs markedly from its original\r\n				version.</p>\r\n			<p>\r\n				However, with the licensing issue left unresolved, some are calling\r\n				the JCP â<a\r\n					href=\"http://communityovercode.com/2010/12/java-no-longer-free-as-in-speech/\">Just\r\n					Customers, Please</a>â &ndash; Oracle does not appear to take the JCP\r\n				seriously any more. The last stage in this saga will be Apache's\r\n				resignation from the JCP which will follow up on their <a\r\n					href=\"https://blogs.apache.org/foundation/entry/statement_by_the_asf_board1\">earlier\r\n					threat</a>. Here is what may be the Apache Foundation's last vote on a\r\n				JSR:\r\n			</p>\r\n			<blockquote>\r\n				<p>The Apache Software Foundation must vote no on this JSR.\r\n					While we support the technical contents of the JSR, and earnestly\r\n					support the need for the Java platform to move forward, we cannot\r\n					in good conscience vote for this JSR because:</p>\r\n				<ol>\r\n					<li type=\"a\">This JSR's TCK license includes a \"Field of Use\"\r\n						restriction that restricts commonplace and mundane use of\r\n						independent implementations, a licensing element that not only is\r\n						prohibited by the JSPA but also has been unanimously rejected by\r\n						the majority of the members of the JCP EC - including Oracle - on\r\n						several occasions. We can only speculate why Oracle included such\r\n						an element, but we believe that an open specification ecosystem\r\n						must be independent of - and protected from - any entity's\r\n						commercial interests.</li>\r\n					<li type=\"a\">On process grounds, this JSR is in conflict with\r\n						it's own TCK license. The JSR explicitly states that Java SE is\r\n						targeted for, among others, embedded deployments. Yet the TCK\r\n						license specifically prohibits such usages (for example, netbooks)\r\n						of tested independent implementations. We find this to be a\r\n						misleading legal trap for potential implementers, and believe that\r\n						any independent implementation that passes the TCK should be able\r\n						to be used and distributed under whatever terms deemed fit by the\r\n						implementer.</li>\r\n					<li type=\"a\">The spec lead has ignored repeated requests from\r\n						multiple EC members for and explanation of both a. and b.</li>\r\n					<li type=\"a\">The spec lead - Oracle - is in breach of their\r\n						obligations under the JSPA by continuing to provide a TCK license\r\n						for Apache Harmony under terms that allow Apache to distribute its\r\n						independent implementation under terms of its choice. We do not\r\n						believe that anyone that willfully fails to meet their contractual\r\n						obligations under the JSPA should be allowed to participate as a\r\n						member in good stating in the JCP. The rules apply to everyone.</li>\r\n				</ol>\r\n				<p>While we understand that it's Oracle's stated intent to move\r\n					forward irrespective of the EC's decision, we urge Oracle to fix\r\n					the above-mentioned issues, and continue to work with the members\r\n					of the JCP within the structure of the JCP to keep Java a vital and\r\n					viable platform.</p>\r\n			</blockquote>\r\n			<p>\r\n				Since Oracle looks unlikely to <a\r\n					href=\"https://blogs.apache.org/foundation/entry/statement_by_the_asf_board2\">honor\r\n					the agreement</a>, a statement by the <a\r\n					href=\"https://blogs.apache.org/foundation/\">Apache Foundation</a>\r\n				is expected in the next week.\r\n			</p>\r\n			<div class=\"box-bottom\"></div>\r\n		</div>\r\n	</div>\r\n	<div class=\"bottom-corners\">\r\n		<div></div>\r\n	</div>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["time"] = this["App"]["Templates"]["demo"]["app"]["components"]["time"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["time"]["timeBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"slider-view\">\r\n  <h3>Hora</h3>\r\n  <p>\r\n    El usuario puede introducir y seleccionar una hora tanto de forma manual como visual, moviéndose fácilmente por las horas y los minutos, recibiendo ayudas y sugerencias para minimizar las posibilidades de introducir una hora incorrecta.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["time"]["timeHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"hora\" type=\"text\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["time"]["timeJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#hora\").rup_time({\r\n  labelMaskId : \"hora-mask\",\r\n  showSecond : true,\r\n  timeFormat: 'hh:mm:ss',\r\n  showButtonPanel: true\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["time"]["timeTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div>\r\n	<!-- Hora -->\r\n	<label for=\"hora\">Hora </label><label for=\"hora\" id=\"hora-mask\"></label>:\r\n	<input id=\"hora\" type=\"text\"/>\r\n	<br/><br/>\r\n\r\n	<!-- Hora2 -->\r\n	<label for=\"hora2\">Hora </label>:\r\n	<input id=\"hora2\" type=\"text\"/>\r\n	<br/><br/>\r\n\r\n	<div id=\"hora_inline\"></div>\r\n\r\n	<!-- Fecha y Hora -->\r\n	<!--	<label for=\"fecha_hora\">Fecha y Hora </label><label id=\"fecha_hora-mask\"></label>:-->\r\n	<!--	<input id=\"fecha_hora\" type=\"text\" />-->\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["toolbar"] = this["App"]["Templates"]["demo"]["app"]["components"]["toolbar"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["toolbar"]["toolbarBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["toolbar"]["toolbarHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n\r\n<div id=toolbar></div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["toolbar"]["toolbarJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"toolbar\").rup_toolbar({\r\n  width: 1000,\r\n  buttons:[\r\n    {i18nCaption:\"cancelar\", css:\"cancelar\", click: handlerMButtons, right: true},\r\n    {i18nCaption:\"buscar\", css:\"buscar\", click: handlerBoton },\r\n    {id: \"mbuton1\", i18nCaption:\"otros\", buttons:[\r\n      {i18nCaption:\"nuevo\", css:\"nuevo\", click: handlerMButtons},\r\n      {i18nCaption:\"editar\", css:\"editar\", click: handlerMButtons},\r\n      {i18nCaption:\"cancelar\", css:\"cancelar\", click: handlerMButtons},\r\n      {i18nCaption:\"borrar\", css:\"borrar\", click: handlerMButtons},\r\n      {i18nCaption:\"filtrar\", css:\"filtrar\", click: handlerMButtons},\r\n     ]},\r\n     {id : \"mbuton2\", i18nCaption:\"ficheros\", right: true, buttons:[\r\n        {i18nCaption:\"DOC\", css:\"doc\", click: handlerMButtons},\r\n        {i18nCaption:\"PDF\", css:\"pdf\", click: handlerMButtons},\r\n        {i18nCaption:\"PPT\", css:\"ppt\", click: handlerMButtons},\r\n        {i18nCaption:\"XLS\", css:\"xls\", click: handlerMButtons}\r\n      ]},\r\n      {i18nCaption:\"filtrar\", css:\"filtrar\", click: handlerMButtons},\r\n      {i18nCaption:\"imprimir\", css:\"imprimir\", click: handlerMButtons, right: true}\r\n  ]\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["toolbar"]["toolbarTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h3>Botonera</h3>\r\n<p>\r\n  Se les presenta a los usuarios una barra de botones con diversas funcionalidades relacionadas a elementos de la página. Gracias a este componente se presentan, ordenan y agrupan las distintas funcionalidades gestionadas por las aplicaciones.\r\n</p>\r\n<p>\r\n  La configuración de la botonera puede realizarse mediante un json en el que indican los diferentes botones que se van a incluir o directamente mediante elementos HTML.\r\n</p>\r\n<p>\r\n  Un ejemplo de construcción de una botonera a partir de un json sería la siguiente:\r\n</p>\r\n<div class=\"example\">\r\n  <div id=\"toolbar\"></div>\r\n</div>\r\n\r\n<p>\r\n  En el json de definición de los botones es posible especificar que  ciertos botones se agrupen a la izquierda de la botonera.\r\n</p>\r\n<p>\r\n  Para ello, se debe de hacer uso de la propiedad <code>right: true</code> en la definición del botón.\r\n</p>\r\n<div class=\"example\">\r\n  <div id=\"toolbarRight\"></div>\r\n</div>\r\n\r\n<p>\r\n  Naturalmente, es posible combinar botones alineados tanto a la derecha como a la izquierda.\r\n</p>\r\n<div class=\"example\">\r\n  <div id=\"toolbarMixta\"></div>\r\n</div>\r\n\r\n<p>\r\n  Configruación de mbuttons responsive\r\n</p>\r\n<div class=\"example\">\r\n  <div id=\"toolbarRwd\"></div>\r\n</div>\r\n\r\n\r\n\r\n<h4>Compatibilidad jQueryUI</h4>\r\n<p>\r\n  El componente proporciona compatibilidad con las configuraciones y estilos utilizados en las aplicaciones UDA anteriores a la versión v3.0.0.\r\n</p>\r\n<p>\r\n  En el caso de que se quiera inicializar un componente Toolbar con el modo de compatibilidad activado, se debera:\r\n</p>\r\n<ul>\r\n  <li>Utilizar la propiedad <code>adapter: \"toolbar_jqueryui\"</code> en la inicialización del componente.</li>\r\n  <li>Indicar la propiedad <code>data-adapter=\"toolbar_jqueryui\"</code> en el <code>&lt;div&gt;</code> sobre el que se inicializa el componente.</li>\r\n</ul>\r\n<p>Este es un ejemplo de las posibles configuraciones:</p>\r\n\r\n<div class=\"example\">\r\n\r\n  <div id=\"jQueryUIToolbar\"></div>\r\n  <br/>\r\n  <div class=\"separator\"></div>\r\n  <div class=\"separator\"></div>\r\n  <br/>\r\n  <div id=\"jQueryUIToolbarMixta\"></div>\r\n  <br/>\r\n  <div class=\"separator\"></div>\r\n  <div class=\"separator\"></div>\r\n  <br/>\r\n  <div id=\"jQueryUIToolbarRight\"></div>\r\n\r\n</div>\r\n\r\n\r\n<!-- <div id=\"toolbarNew\" class=\"rup-toolbar\">\r\n\r\n  <button type=\"button\"class=\"btn btn-secondary\">\r\n    <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n    <span class=\"rup-ui-button-text\">Buscar</span>\r\n  </button>\r\n  <button type=\"button\"class=\"btn btn-secondary\">\r\n    <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n    <span class=\"rup-ui-button-text\">Editar</span>\r\n  </button>\r\n  <button type=\"button\"class=\"btn btn-secondary\">\r\n    <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n    <span class=\"rup-ui-button-text\">Borrar</span>\r\n  </button>\r\n  <button type=\"button\"class=\"btn btn-secondary\">\r\n    <i class=\"fa fa-filter\" aria-hidden=\"true\"></i>\r\n    <span class=\"rup-ui-button-text\">Filtrar</span>\r\n  </button>\r\n\r\n  <button type=\"button\"class=\"btn btn-secondary rup-button-right rup-toolbar_menuButton\" data-mbutton=\"ficherosMButton\">\r\n    <i class=\"fa fa-print\" aria-hidden=\"true\"></i>\r\n    <span class=\"rup-ui-button-text\">Ficheros</span>\r\n  </button>\r\n  <div class=\"rup-toolbar-mbutton\" id=\"ficherosMButton\">\r\n    <li>\r\n      <button type=\"button\"class=\"btn btn-secondary rup-button-right\">\r\n        <i class=\"fa fa-print\" aria-hidden=\"true\"></i>\r\n        <span class=\"rup-ui-button-text\">Ficheros</span>\r\n      </button>\r\n    </li>\r\n    <li>\r\n      <button type=\"button\"class=\"btn btn-secondary rup-button-right\">\r\n        <i class=\"fa fa-print\" aria-hidden=\"true\"></i>\r\n        <span class=\"rup-ui-button-text\">Ficheros</span>\r\n      </button>\r\n    </li>\r\n    <li>\r\n      <button type=\"button\"class=\"btn btn-secondary rup-button-right\">\r\n        <i class=\"fa fa-print\" aria-hidden=\"true\"></i>\r\n        <span class=\"rup-ui-button-text\">Ficheros</span>\r\n      </button>\r\n    </li>\r\n    <li>\r\n      <button type=\"button\"class=\"btn btn-secondary rup-button-right\">\r\n        <i class=\"fa fa-print\" aria-hidden=\"true\"></i>\r\n        <span class=\"rup-ui-button-text\">Ficheros</span>\r\n      </button>\r\n    </li>\r\n  </ul>\r\n\r\n\r\n  <button type=\"button\"class=\"btn btn-secondary rup-button-right\">\r\n    <i class=\"fa fa-print\" aria-hidden=\"true\"></i>\r\n    <span class=\"rup-ui-button-text\">Imprimir</span>\r\n  </button>\r\n  <button type=\"button\"class=\"btn btn-secondary rup-button-right\">\r\n    <i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\r\n    <span class=\"rup-ui-button-text\">Cancelar</span>\r\n  </button>\r\n\r\n\r\n\r\n</div> -->\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tooltip"] = this["App"]["Templates"]["demo"]["app"]["components"]["tooltip"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["tooltip"]["tooltipBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tooltip-view\">\r\n  <h3>Tooltip</h3>\r\n  <p>\r\n    Todas las aplicaciones deben tener un sistema de ayuda aunque algunas necesiten uno más completo y\r\npreciso que otras. El objetivo del sistema de ayuda debe ser, por un lado ayudar al impaciente y/o al\r\nusuario ocasional tan extensamente como sea posible y, por otro, ayudar a los usuarios expertos.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tooltip"]["tooltipHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"nombre\" name=\"nombre\" title=\"Introduzca su nombre.\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tooltip"]["tooltipJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"[title]\").rup_tooltip();\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tooltip"]["tooltipTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<fieldset>\r\n	<div>\r\n		<label for=\"nombre\">Nombre:</label>\r\n		<input id=\"nombre\" name=\"nombre\" title=\"Introduzca su nombre.\"/>\r\n	</div>\r\n	<br/>\r\n	<div>\r\n		<label for=\"apellido\">Apellido:</label>\r\n		<input id=\"apellido\" name=\"apellido\" title=\"Introduzca su apellido.\"/>\r\n	</div>\r\n	<br/>\r\n	<div>\r\n		<label for=\"code\">CÃ³digo:</label>\r\n		<input id=\"code\" name=\"code\" />&nbsp;<img id=\"codeTooltip\" alt=\"Imagen Tooltip\" src=\"../css/images/rup.confirm.png\" />\r\n	</div>\r\n	<br/>\r\n	<div>\r\n		<label for=\"identificador\">Identificador:</label>\r\n		<input id=\"identificador\" name=\"identificador\" />&nbsp;<img id=\"idTooltip\" alt=\"Imagen Tooltip\" src=\"../css/images/rup.confirm.png\" />\r\n	</div>\r\n	<br/>\r\n	<div>\r\n		<label for=\"htmlTooltip\">HTML:</label>\r\n		<input id=\"htmlTooltip\" name=\"htmlTooltip\" />&nbsp;<img id=\"idHtmlTooltip\" alt=\"Imagen Tooltip\" src=\"../css/images/rup.confirm.png\" />\r\n	</div>\r\n	<br/>\r\n	<input id=\"button\" type=\"button\" value=\"Aplicar ThemeRoller\" />\r\n</fieldset>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["upload"] = this["App"]["Templates"]["demo"]["app"]["components"]["upload"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["upload"]["_basic"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<span class=\"btn btn-success fileinput-button\">\r\n      <i class=\"glyphicon glyphicon-plus\"></i>\r\n      <span>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : {},"upload.button.addFiles",{"name":"i18n","hash":{},"data":data}))
    + "</span>\r\n      <input id=\"basicFileupload\" type=\"file\" name=\"files[]\" data-url=\"../upload\" multiple=\"multiple\" />\r\n</span>\r\n<span id=\"basicFileuploadContext\"></span>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["upload"]["uploadBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["upload"]["uploadHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"nombre\" name=\"nombre\" title=\"Introduzca su nombre.\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["upload"]["uploadJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"[title]\").rup_tooltip();\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["upload"]["uploadTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "\r\n<section>\r\n	<h2>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"upload.title",{"name":"i18n","hash":{},"data":data}))
    + "</h2>\r\n	<p>\r\n      	"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"upload.paragraph.line1",{"name":"i18n","hash":{},"data":data}))
    + "\r\n    </p>\r\n    <p>\r\n    	"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"upload.paragraph.line2",{"name":"i18n","hash":{},"data":data}))
    + "\r\n    </p>\r\n    <p>\r\n    	"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"upload.paragraph.basic",{"name":"i18n","hash":{},"data":data}))
    + "\r\n    </p>\r\n\r\n    <div class=\"example\">\r\n"
    + ((stack1 = container.invokePartial(partials.basic,depth0,{"name":"basic","data":data,"indent":"\t\t","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "	</div>\r\n\r\n\r\n\r\n</section>\r\n";
},"usePartial":true,"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["validate"] = this["App"]["Templates"]["demo"]["app"]["components"]["validate"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["validate"]["validateBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tooltip-view\">\r\n  <h3>Tooltip</h3>\r\n  <p>\r\n    Todas las aplicaciones deben tener un sistema de ayuda aunque algunas necesiten uno más completo y\r\npreciso que otras. El objetivo del sistema de ayuda debe ser, por un lado ayudar al impaciente y/o al\r\nusuario ocasional tan extensamente como sea posible y, por otro, ayudar a los usuarios expertos.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["validate"]["validateHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"nombre\" name=\"nombre\" title=\"Introduzca su nombre.\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["validate"]["validateJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"[title]\").rup_tooltip();\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["validate"]["validateTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div id=\"feedbackErroresValidaciones\"></div>\r\n<div>\r\n<fieldset class=\"alumnoFieldset\">\r\n	<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.configuracion.titulo",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n	<span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.configuracion.texto",{"name":"i18n","hash":{},"data":data}))
    + "</span>\r\n	<br/><br/>\r\n\r\n	<input type=\"checkbox\" id=\"liveCheckingErrors\" /><label for=\"liveCheckingErrors\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.configuracion.liveCheckingErrors",{"name":"i18n","hash":{},"data":data}))
    + "</label><br/>\r\n	<input type=\"checkbox\" id=\"checkFeedbackError\" checked=\"checked\" /><label for=\"checkFeedbackError\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.configuracion.checkFeedbackError",{"name":"i18n","hash":{},"data":data}))
    + "</label><br/>\r\n	<input type=\"checkbox\" id=\"checkShowErrorsFeedback\" checked=\"checked\"/><label for=\"checkShowErrorsFeedback\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.configuracion.checkShowErrorsFeedback",{"name":"i18n","hash":{},"data":data}))
    + "</label><br/>\r\n	<input type=\"checkbox\" id=\"checkShowFieldErrorsTip\" checked=\"checked\"/><label for=\"checkShowFieldErrorsTip\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.configuracion.checkShowFieldErrorsTip",{"name":"i18n","hash":{},"data":data}))
    + "</label><br/>\r\n	<br/>\r\n	<form:errors></form:errors>\r\n	<button id=\"botonConfiguracion\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.aplicarConfiguracion",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n</fieldset>\r\n</div>\r\n\r\n<div id=\"tabsValidacion\"></div>\r\n<div id=\"validacionesServidor\"></div>\r\n<div id=\"validacionesCliente\"></div>\r\n\r\n<div id=\"divValidaciones\">\r\n	<form id=\"formValidaciones\" action='${pageContext.request.contextPath}/patrones/validacion/cliente' modelAttribute=\"alumno\" >\r\n\r\n	<fieldset class=\"alumnoFieldset\">\r\n		<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.obligatoriedad",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n		     	<label for=\"campoObligatorio1\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.campoObligatorio",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"campoObligatorio1\" class=\"formulario_linea_input abajo\" size=\"40\" id=\"campoObligatorio1\" />\r\n		    </div>\r\n		    <div class=\"col1\">\r\n	     		<input type=\"checkbox\" name=\"esObligatorio\" class=\"formulario_linea_input\" size=\"20\" id=\"esObligatorio\" style=\"float:left;\"/>\r\n		     	<label for=\"esObligatorio\" class=\"label\">\r\n		     		&nbsp;"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.obligatorioSi",{"name":"i18n","hash":{},"data":data}))
    + "\r\n	     		</label>\r\n			  	<input type=\"text\" name=\"campoObligatorio2\" class=\"formulario_linea_input\" size=\"40\" id=\"campoObligatorio2\" />\r\n		    </div>\r\n		    <div class=\"col1\">\r\n		     	<select id=\"diaObligatorio\" style=\"float: left\">\r\n		     	</select>\r\n		     	<label for=\"campoObligatorio3\" class=\"label\">\r\n			     	&nbsp;"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.obligatorioSiCombo",{"name":"i18n","hash":{},"data":data}))
    + "\r\n		     	</label>\r\n			  	<input type=\"text\" name=\"campoObligatorio3\" class=\"formulario_linea_input\" size=\"40\" id=\"campoObligatorio3\" />\r\n		    </div>\r\n		  </div>\r\n	</fieldset>\r\n\r\n	<fieldset class=\"alumnoFieldset\">\r\n		<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.validacionesNumericas",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n		<div class=\"two-col\">\r\n	   		<div class=\"col1\">\r\n		     	<label for=\"valorMinimo\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.min",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"valorMinimo\" class=\"formulario_linea_input\" size=\"40\" id=\"valorMinimo\" />\r\n		    </div>\r\n		    <div class=\"col1\">\r\n		     	<label for=\"valorMaximo\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.max",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"valorMaximo\" class=\"formulario_linea_input\" size=\"40\" id=\"valorMaximo\" />\r\n		    </div>\r\n		    <div class=\"col1\">\r\n		     	<label for=\"valorIntervalo\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.range",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"valorIntervalo\" class=\"formulario_linea_input\" size=\"40\" id=\"valorIntervalo\" />\r\n		    </div>\r\n		 </div>\r\n		 <div class=\"two-col\">\r\n		    <div class=\"two-col col1\">\r\n		     	<label for=\"entero\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.integer",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"entero\" class=\"formulario_linea_input\" size=\"40\" id=\"entero\" />\r\n		    </div>\r\n		    <div class=\"col1\">\r\n		     	<label for=\"numeroDecimal\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.number",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"numeroDecimal\" class=\"formulario_linea_input\" size=\"40\" id=\"numeroDecimal\" />\r\n		    </div>\r\n\r\n		</div>\r\n	</fieldset>\r\n\r\n	<fieldset class=\"alumnoFieldset\">\r\n		<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.validacionesTexto",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n		<div class=\"two-col\">\r\n			 <div class=\"col1\">\r\n		     	<label for=\"longitudMinima\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.minlength",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"longitudMinima\" class=\"formulario_linea_input\" size=\"40\" id=\"longitudMinima\" />\r\n		    </div>\r\n		    <div class=\"col1\">\r\n		     	<label for=\"longitudMaxima\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.maxlength",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"longitudMaxima\" class=\"formulario_linea_input\" size=\"40\" id=\"longitudMaxima\" />\r\n		    </div>\r\n		    <div class=\"col1\">\r\n		     	<label for=\"longitudIntervalo\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.rangelength",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"longitudIntervalo\" class=\"formulario_linea_input\" size=\"40\" id=\"longitudIntervalo\" />\r\n		    </div>\r\n		 </div>\r\n		<div class=\"two-col\">\r\n			<div class=\"two-col col1\">\r\n		     	<label for=\"palabrasMaximo\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.maxWords",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"palabrasMaximo\" class=\"formulario_linea_input\" size=\"40\" id=\"palabrasMaximo\" />\r\n		    </div>\r\n		    <div class=\"two-col col1\">\r\n		     	<label for=\"palabrasMinimo\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.minWords",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"palabrasMinimo\" class=\"formulario_linea_input\" size=\"40\" id=\"palabrasMinimo\" />\r\n		    </div>\r\n		    <div class=\"two-col col1\">\r\n		     	<label for=\"palabrasIntervalo\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.number",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"palabrasIntervalo\" class=\"formulario_linea_input\" size=\"40\" id=\"palabrasIntervalo\" />\r\n		    </div>\r\n		</div>\r\n		<div class=\"two-col\">\r\n			<div class=\"two-col col1\">\r\n		     	<label for=\"letrasYPuntuacion\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.letterswithbasicpunc",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"letrasYPuntuacion\" class=\"formulario_linea_input\" size=\"40\" id=\"letrasYPuntuacion\" />\r\n		    </div>\r\n		     <div class=\"two-col col1\">\r\n		     	<label for=\"alfanumerico\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.alphanumeric",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"alfanumerico\" class=\"formulario_linea_input\" size=\"40\" id=\"alfanumerico\" />\r\n		    </div>\r\n			<div class=\"two-col col1\">\r\n		     	<label for=\"soloLetras\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.lettersonly",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"soloLetras\" class=\"formulario_linea_input\" size=\"40\" id=\"soloLetras\" />\r\n		    </div>\r\n\r\n		</div>\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n		     	<label for=\"soloDigitos\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.digits",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"soloDigitos\" class=\"formulario_linea_input\" size=\"40\" id=\"soloDigitos\" />\r\n		    </div>\r\n			<div class=\"col1\">\r\n		     	<label for=\"sinEspacios\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.nowhitespace",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"sinEspacios\" class=\"formulario_linea_input\" size=\"40\" id=\"sinEspacios\" />\r\n		    </div>\r\n		    <div class=\"two-col col1\">\r\n		     	<label for=\"patron\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.pattern",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"patron\" class=\"formulario_linea_input\" size=\"40\" id=\"patron\" />\r\n		    </div>\r\n		</div>\r\n\r\n	</fieldset>\r\n\r\n	<fieldset class=\"alumnoFieldset\">\r\n		<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.validacionesFormato",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n		     	<label for=\"validacionEmail\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.email",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"validacionEmail\" class=\"formulario_linea_input\" size=\"40\" id=\"validacionEmail\" />\r\n		    </div>\r\n		    <div class=\"col1\">\r\n		     	<label for=\"validacionUrl\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.url",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"validacionUrl\" class=\"formulario_linea_input\" size=\"40\" id=\"validacionUrl\" />\r\n		    </div>\r\n		    <div class=\"two-col col1\">\r\n		     	<label for=\"dni\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.dni",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"dni\" class=\"formulario_linea_input\" size=\"40\" id=\"dni\" />\r\n		    </div>\r\n		</div>\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n		     	<label for=\"validacionFecha\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.date",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"validacionFecha\" class=\"formulario_linea_input\" size=\"40\" id=\"validacionFecha\" />\r\n		    </div>\r\n		    <div class=\"col1\">\r\n		     	<label for=\"validacionFechaISO\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.dateISO",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"validacionFechaISO\" class=\"formulario_linea_input\" size=\"40\" id=\"validacionFechaISO\" />\r\n		    </div>\r\n		    <div class=\"two-col col1\">\r\n		     	<label for=\"tarjetaCredito\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.creditcard",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"tarjetaCredito\" class=\"formulario_linea_input\" size=\"40\" id=\"tarjetaCredito\" />\r\n		    </div>\r\n		</div>\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n	     		<label for=\"extension\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.accept",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n		  		<input type=\"text\" name=\"extension\" class=\"formulario_linea_input\" size=\"40\" id=\"extension\" />\r\n	    	</div>\r\n	     	<div class=\"col1\">\r\n		     	<label for=\"clave\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.equalTo.clave",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"clave\" class=\"formulario_linea_input\" size=\"40\" id=\"clave\" /><br/>\r\n			  	<label for=\"clave_confirmar\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.equalTo.confirmarClave",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			  	<input type=\"text\" name=\"clave_confirmar\" class=\"formulario_linea_input\" size=\"40\" id=\"clave_confirmar\" />\r\n	    	</div>\r\n		</div>\r\n	</fieldset>\r\n\r\n\r\n		<input type=\"submit\" value=\"Validar\"  />\r\n\r\n	</form>\r\n</div>\r\n\r\n<div id=\"divValidaciones2\">\r\n	<form id=\"formValidaciones2\" action='${pageContext.request.contextPath}/patrones/validacion/cliente' modelAttribute=\"alumno\" >\r\n\r\n	<fieldset class=\"alumnoFieldset\">\r\n		<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.options",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n\r\n			<input  type=\"radio\" id=\"gender_male\" value=\"m\" name=\"gender\" validate=\"required:true\" />\r\n			<label for=\"gender_male\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.primeraOpcion",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			<input  type=\"radio\" id=\"gender_female\" value=\"f\" name=\"gender\"/>\r\n			<label for=\"gender_female\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.segundaOpcion",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			<label for=\"gender\" class=\"error\" style=\"display:none\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.seleccioneUnaOpcion",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n\r\n			<br/>\r\n\r\n\r\n	</fieldset>\r\n\r\n	<fieldset class=\"alumnoFieldset\">\r\n		<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.checkbox",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n		<fieldset class=\"alumnoFieldset\">\r\n		<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.obligatorio",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n			<input type=\"checkbox\" class=\"checkbox\" id=\"agree\" name=\"agree\" validate=\"required:true\" />"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.aceptarCondiciones",{"name":"i18n","hash":{},"data":data}))
    + "\r\n			<label for=\"agree\" class=\"error block\" style=\"display:none\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.error.aceptarCondiciones",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n		</fieldset>\r\n		<fieldset class=\"alumnoFieldset\">\r\n				<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.seleccioneDosOMas",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n				<label for=\"spam_email\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.correo",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<input type=\"checkbox\" class=\"checkbox\" id=\"spam_email\" value=\"email\" name=\"notificacion[]\" validate=\"required:true, minlength:2\" />\r\n\r\n				<label for=\"spam_phone\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.sms",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<input type=\"checkbox\" class=\"checkbox\" id=\"spam_phone\" value=\"phone\" name=\"notificacion[]\" />\r\n\r\n				<label for=\"spam_mail\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.email",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<input type=\"checkbox\" class=\"checkbox\" id=\"spam_mail\" value=\"mail\" name=\"notificacion[]\" />\r\n\r\n				<label for=\"notificacion[]\" class=\"error\" style=\"display:none\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.error.seleccioneDosOMas",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			</fieldset>\r\n	</fieldset>\r\n\r\n	<fieldset class=\"alumnoFieldset\">\r\n		<legend>Combo</legend>\r\n		<label for=\"lenguaje_combo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.seleccioneUnLenguaje",{"name":"i18n","hash":{},"data":data}))
    + "</label><br/>\r\n		<select id=\"lenguaje_combo\" name=\"lenguaje\">\r\n			<option value=\"\"></option>\r\n			<option value=\"1\">Java</option>\r\n			<option value=\"2\">C++</option>\r\n			<option value=\"3\">PHP</option>\r\n			<option value=\"4\">Cobol</option>\r\n		</select>\r\n		<label for=\"lenguaje\" class=\"error\" style=\"display:none\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.seleccioneDosNotificaciones",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n		<br/><br/>\r\n		<label for=\"lenguaje_combo_multi\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.seleccioneEntreDosYTres",{"name":"i18n","hash":{},"data":data}))
    + "</label><br/>\r\n		<select id=\"lenguaje_combo_multi\" name=\"lenguajeMulti\" multiple=\"multiple\">\r\n			<option value=\"\"></option>\r\n			<option value=\"1\">Java</option>\r\n			<option value=\"2\">C++</option>\r\n			<option value=\"3\">PHP</option>\r\n			<option value=\"4\">Cobol</option>\r\n		</select>\r\n		<label for=\"lenguajeMulti\" class=\"error\" style=\"display:none\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.error.seleccioneEntreDosYTres",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n\r\n	</fieldset>\r\n\r\n\r\n\r\n\r\n	<fieldset class=\"alumnoFieldset\">\r\n		<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.componentesRup",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n				<label for=\"autocomplete\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.patron.autocomplete",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<input id=\"autocomplete\" name=\"autocomplete\" />"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.autocomplete.ejemplo",{"name":"i18n","hash":{},"data":data}))
    + "\r\n			</div>\r\n		</div>\r\n\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n				<label for=\"comboAbueloRemoto\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.localidad",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<select id=\"comboAbueloRemoto\" name=\"provincia\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n			</div>\r\n			<div class=\"col1\">\r\n				<label for=\"comboPadreRemoto\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.comarca",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<select id=\"comboPadreRemoto\" name=\"comarca\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n			</div>\r\n			<div class=\"col1\">\r\n				<label for=\"comboHijoRemoto\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.localidad",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<select id=\"comboHijoRemoto\" name=\"localidad\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n			</div>\r\n		</div>\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n				<label for=\"fecha\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.fecha",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<input id=\"fecha\" name=\"fecha\" />\r\n			</div>\r\n		</div>\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n				<label for=\"multicombo\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.multicombo",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<select id=\"multicombo\" name=\"multicombo\" multiple=\"multiple\"><optgroup label=\"Actos Administrativos\"><option value=\"3~85\">AAAA Planes de Gobierno_ Justicia y Administración Pública</option><option value=\"3~125\">AAAA Planes de Gobierno_Administración Pública y Justicia</option><option value=\"3~103\">AAAA Planes de Gobierno_Cultura</option><option value=\"3~124\">AAAA Planes de Gobierno_Desarrollo Económico y Competitividad</option><option value=\"3~104\">AAAA Planes de Gobierno_Economía y Hacienda</option><option value=\"3~123\">AAAA Planes de Gobierno_Educación, Política Lingüística y Cultura</option><option value=\"3~105\">AAAA Planes de Gobierno_Educación, Universidades e Investigación</option><option value=\"3~106\">AAAA Planes de Gobierno_Empleo y Asuntos Sociales</option><option value=\"3~122\">AAAA Planes de Gobierno_Empleo y Políticas Sociales</option><option value=\"3~121\">AAAA Planes de Gobierno_Hacienda y Finanzas</option><option value=\"3~107\">AAAA Planes de Gobierno_Industria, Innovación, Comercio y Turismo</option><option value=\"3~108\">AAAA Planes de Gobierno_Interior</option><option value=\"3~120\">AAAA Planes de Gobierno_Lehendakaritza</option><option value=\"3~109\">AAAA Planes de Gobierno_Medio Ambiente, Planificación Territorial, Agricultura y Pesca</option><option value=\"3~119\">AAAA Planes de Gobierno_Medio Ambiente y Política Territorial</option><option value=\"3~110\">AAAA Planes de Gobierno_Presidencia</option><option value=\"3~118\">AAAA Planes de Gobierno_Salud</option><option value=\"3~114\">AAAA Planes de Gobierno_Sanidad y Consumo</option><option value=\"3~117\">AAAA Planes de Gobierno_Seguridad</option><option value=\"3~112\">AAAA Planes de Gobierno_Vivienda, Obras Públicas y Transportes</option><option value=\"3~134\">Actos Administrativos_Administración Pública y Justicia</option><option value=\"3~96\">Actos administrativos_Cultura</option><option value=\"3~133\">Actos Administrativos_Desarrollo Económico y Competitividad</option><option value=\"3~97\">Actos administrativos_Economía y Hacienda</option><option value=\"3~132\">Actos Administrativos_Educación, Política Lingüística y Cultura</option><option value=\"3~98\">Actos administrativos_Educación, Universidades e Investigación</option><option value=\"3~99\">Actos administrativos_Empleo y Asuntos Sociales</option><option value=\"3~131\">Actos Administrativos_Empleo y Políticas Sociales</option><option value=\"3~130\">Actos Administrativos_Hacienda y Finanzas</option><option value=\"3~100\">Actos administrativos_Industria, Innovación, Comercio y Turismo</option><option value=\"3~101\">Actos administrativos_Interior</option><option value=\"3~84\">Actos Administrativos_Justicia y Administración Pública</option><option value=\"3~129\">Actos Administrativos_Lehendakaritza</option><option value=\"3~102\">Actos administrativos_Medio Ambiente, Planificación Territorial, Agricultura y Pesca</option><option value=\"3~128\">Actos Administrativos_Medio Ambiente y Política Territorial</option><option value=\"3~113\">Actos administrativos_Presidencia</option><option value=\"3~127\">Actos Administrativos_Salud</option><option value=\"3~116\">Actos administrativos_Sanidad y Consumo</option><option value=\"3~126\">Actos Administrativos_Seguridad</option><option value=\"3~115\">Actos administrativos_Vivienda, Obras Públicas y Transportes</option><option value=\"3~143\">Ayudas_Administración Pública y Justicia</option><option value=\"3~87\">Ayudas_Cultura</option><option value=\"3~142\">Ayudas_Desarrollo Económico y Competitividad</option><option value=\"3~88\">Ayudas_Economía y Hacienda</option><option value=\"3~141\">Ayudas_Educación, Política Lingüística y Cultura</option><option value=\"3~89\">Ayudas_Educación, Universidades e Investigación</option><option value=\"3~90\">Ayudas_Empleo y Asuntos Sociales</option><option value=\"3~140\">Ayudas_Empleo y Políticas Sociales</option><option value=\"3~139\">Ayudas_Hacienda y Finanzas</option><option value=\"3~91\">Ayudas_Industria, Innovación, Comercio y Turismo</option><option value=\"3~92\">Ayudas_Interior</option><option value=\"3~86\">Ayudas_Justicia y Administración Pública</option><option value=\"3~138\">Ayudas_Lehendakaritza</option><option value=\"3~93\">Ayudas_Medio Ambiente, Planificación Territorial, Agricultura y Pesca</option><option value=\"3~137\">Ayudas_Medio Ambiente y Política Territorial</option><option value=\"3~94\">Ayudas_Presidencia</option><option value=\"3~136\">Ayudas_Salud</option><option value=\"3~111\">Ayudas_Sanidad y Consumo</option><option value=\"3~135\">Ayudas_Seguridad</option><option value=\"3~95\">Ayudas_Vivienda, Obras Públicas y Transportes</option></optgroup><optgroup label=\"Disposiciones Normativas de Caracter General\"><option value=\"1~15\">CN Medio Ambiente, Planificación Territorial, Agricultura y Pesca</option><option value=\"1~42\">CN_ Medio Ambiente y Política Territorial</option><option value=\"1~2\">DNCG Cultura</option><option value=\"1~4\">DNCG Economia y Hacienda</option><option value=\"1~6\">DNCG Educación, universidades e investigación</option><option value=\"1~8\">DNCG Empleo y Asuntos Sociales</option><option value=\"1~10\">DNCG Industria, Innovacion, Comercio y Turismo</option><option value=\"1~12\">DNCG Interior</option><option value=\"1~1\">DNCG Justicia y Administración Pública</option><option value=\"1~17\">DNCG Medio Ambiente, P.Territorial, Agricultura y Pesca</option><option value=\"1~18\">DNCG Presidencia</option><option value=\"1~20\">DNCG Sanidad y Consumo</option><option value=\"1~22\">DNCG Vivienda Obras Públicas y Transportes</option><option value=\"1~41\">DNCG_Administración Pública y Justicia</option><option value=\"1~40\">DNCG_Desarrollo Económico y Competitividad</option><option value=\"1~39\">DNCG_Educación, Política Lingüística y Cultura</option><option value=\"1~38\">DNCG_Empleo y Políticas Sociales</option><option value=\"1~37\">DNCG_Hacienda y Finanzas</option><option value=\"1~36\">DNCG_Lehendakaritza</option><option value=\"1~35\">DNCG_Medio Ambiente y Política Territorial</option><option value=\"1~34\">DNCG_Salud</option><option value=\"1~33\">DNCG_Seguridad</option><option value=\"1~3\">OT Cultura</option><option value=\"1~5\">OT Economia y Hacienda</option><option value=\"1~7\">OT Educación, universidades e investigación</option><option value=\"1~9\">OT Empleo y Asuntos Sociales</option><option value=\"1~11\">OT Industria, Innovación, Comercio y Turismo</option><option value=\"1~13\">OT Interior</option><option value=\"1~14\">OT Justicia y Administración Pública</option><option value=\"1~16\">OT Medio Ambiente, Planificación Territorial, Agricultura y Pesca</option><option value=\"1~19\">OT Presidencia</option><option value=\"1~21\">OT Sanidad y Consumo</option><option value=\"1~23\">OT Vivienda Obras Públicas y Transportes</option><option value=\"1~32\">OT_Administración Pública y Justicia</option><option value=\"1~31\">OT_Desarrollo Económico y Competitividad</option><option value=\"1~30\">OT_Educación, Política Lingüística y Cultura</option><option value=\"1~29\">OT_Empleo y Políticas Sociales</option><option value=\"1~28\">OT_Hacienda y Finanzas</option><option value=\"1~27\">OT_Lehendakaritza</option><option value=\"1~26\">OT_Medio Ambiente y Política Territorial</option><option value=\"1~25\">OT_Salud</option><option value=\"1~24\">OT_Seguridad</option></optgroup><optgroup label=\"Negocios Bilaterales No Contractuales\"><option value=\"2~43\">NBNC Convenios, contratos programa y protocolos_ Justicia y Administración Pública</option><option value=\"2~55\">NBNC Convenios, contratos programa y protocolos_Cultura</option><option value=\"2~56\">NBNC Convenios, contratos programa y protocolos_Economía y Hacienda</option><option value=\"2~57\">NBNC Convenios, contratos programa y protocolos_Educación, Universidades e Investigación</option><option value=\"2~58\">NBNC Convenios, contratos programa y protocolos_Empleo y Asuntos Sociales</option><option value=\"2~59\">NBNC Convenios, contratos programa y protocolos_Industria, Innovación, Comercio y Turismo</option><option value=\"2~60\">NBNC Convenios, contratos programa y protocolos_Interior</option><option value=\"2~61\">NBNC Convenios, contratos programa y protocolos_Medio Ambiente, Planificación Territorial, Agricultura y Pesca</option><option value=\"2~62\">NBNC Convenios, contratos programa y protocolos_Presidencia</option><option value=\"2~63\">NBNC Convenios, contratos programa y protocolos_Sanidad y Consumo</option><option value=\"2~64\">NBNC Convenios, contratos programa y protocolos_Vivienda, Obras Públicas y Transportes</option><option value=\"2~82\">NBNC Convenios, Contratos-Programa y Protocolos_Administración Pública y Justicia</option><option value=\"2~81\">NBNC Convenios, Contratos-Programa y Protocolos_Desarrollo Económico y Competitividad</option><option value=\"2~80\">NBNC Convenios, Contratos-Programa y Protocolos_Educación, Política Lingüística y Cultura</option><option value=\"2~79\">NBNC Convenios, Contratos-Programa y Protocolos_Empleo y Políticas Sociales</option><option value=\"2~78\">NBNC Convenios, Contratos-Programa y Protocolos_Hacienda y Finanzas</option><option value=\"2~77\">NBNC Convenios, Contratos-Programa y Protocolos_Lehendakaritza</option><option value=\"2~76\">NBNC Convenios, Contratos-Programa y Protocolos_Medio Ambiente y Política Territorial</option><option value=\"2~75\">NBNC Convenios, Contratos-Programa y Protocolos_Salud</option><option value=\"2~74\">NBNC Convenios, Contratos-Programa y Protocolos_Seguridad</option><option value=\"2~44\">NBNC Encomiendas de gestión (L 30/92)_ Justicia y Administración Pública</option><option value=\"2~46\">NBNC Encomiendas de gestión (L 30/92)_Cultura</option><option value=\"2~47\">NBNC Encomiendas de gestión (L 30/92)_Economía y Hacienda</option><option value=\"2~48\">NBNC Encomiendas de gestión (L 30/92)_Educación, Universidades e Investigación</option><option value=\"2~49\">NBNC Encomiendas de gestión (L 30/92)_Empleo y Asuntos Sociales</option><option value=\"2~50\">NBNC Encomiendas de gestión (L 30/92)_Industria, Innovación, Comercio y Turismo</option><option value=\"2~51\">NBNC Encomiendas de gestión (L 30/92)_Interior</option><option value=\"2~52\">NBNC Encomiendas de gestión (L 30/92)_Medio Ambiente, Planificación Territorial, Agricultura y Pesca</option><option value=\"2~45\">NBNC Encomiendas de gestión (L 30/92)_Presidencia</option><option value=\"2~53\">NBNC Encomiendas de gestión (L 30/92)_Sanidad y Consumo</option><option value=\"2~54\">NBNC Encomiendas de gestión (L 30/92)_Vivienda, Obras Públicas y Transportes</option><option value=\"2~73\">NBNC Encomiendas de Gestión (L30/92)_Administración Pública y Justicia</option><option value=\"2~72\">NBNC Encomiendas de Gestión (L30/92)_Desarrollo Económico y Competitividad</option><option value=\"2~71\">NBNC Encomiendas de Gestión (L30/92)_Educación, Política Lingüística y Cultura</option><option value=\"2~70\">NBNC Encomiendas de Gestión (L30/92)_Empleo y Políticas Sociales</option><option value=\"2~69\">NBNC Encomiendas de Gestión (L30/92)_Hacienda y Finanzas</option><option value=\"2~68\">NBNC Encomiendas de Gestión (L30/92)_Lehendakaritza</option><option value=\"2~67\">NBNC Encomiendas de Gestión (L30/92)_Medio Ambiente y Política Territorial</option><option value=\"2~66\">NBNC Encomiendas de Gestión (L30/92)_Salud</option><option value=\"2~65\">NBNC Encomiendas de Gestión (L30/92)_Seguridad</option><option value=\"2~83\">NBNC Responsabilidad Patrimonial</option></optgroup></select>\r\n			</div>\r\n		</div>\r\n		<div class=\"two-col\">\r\n			<div class=\"col1\">\r\n				<label for=\"fechaHora\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.fechaYhora",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n				<input id=\"fechaHora\" name=\"fechaHora\" />\r\n			</div>\r\n		</div>\r\n	</fieldset>\r\n	<input type=\"submit\" value=\"Validar formulario\"  />\r\n	</form>\r\n</div>\r\n\r\n<div id=\"divValidaciones3\">\r\n\r\n	<form id=\"formServidor\" action='${pageContext.request.contextPath}/patrones/validacion/servidor' modelAttribute=\"alumno\" >\r\n\r\n				<fieldset class=\"alumnoFieldset\">\r\n					<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.datosPersonales",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n\r\n\r\n					<span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.servidor.texto",{"name":"i18n","hash":{},"data":data}))
    + "</span><br/><br/>\r\n\r\n					<span><i>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.nombre",{"name":"i18n","hash":{},"data":data}))
    + " : </i></span>\r\n					<ul style=\"padding: 0 3em;\">\r\n						<li>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.error.campoObligatorio",{"name":"i18n","hash":{},"data":data}))
    + "</li>\r\n						<li>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.error.longitudMax",{"name":"i18n","hash":{"arguments":"20"},"data":data}))
    + "</li>\r\n					</ul>\r\n					<span><i>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.apellido1",{"name":"i18n","hash":{"arguments":""},"data":data}))
    + ": </i></span>\r\n					<ul style=\"padding: 0 3em;\">\r\n						<li>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.error.campoObligatorio",{"name":"i18n","hash":{},"data":data}))
    + "</li>\r\n						<li>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.error.longitudMax",{"name":"i18n","hash":{"arguments":"30"},"data":data}))
    + "</li>\r\n					</ul>\r\n					<span><i>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.apellido2",{"name":"i18n","hash":{},"data":data}))
    + " : </i></span>\r\n					<ul style=\"padding: 0 3em;\">\r\n						<li>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.error.longitudMax",{"name":"i18n","hash":{"arguments":"30"},"data":data}))
    + "</li>\r\n					</ul>\r\n					<br/>\r\n\r\n					<div class=\"two-col\" >\r\n						    <div class=\"col1\">\r\n						       <label for=\"nombre\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.nombre",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n								<input type=\"text\" name=\"nombre\" class=\"formulario_linea_input\" size=\"20\" id=\"nombre\" />\r\n						    </div>\r\n\r\n						    <div class=\"col1\">\r\n						        <label for=\"apellido1\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.apellido1",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n								<input type=\"text\" name=\"apellido1\" class=\"formulario_linea_input\" size=\"30\" id=\"apellido1\" />\r\n						    </div>\r\n\r\n						     <div class=\"col1\">\r\n						        <label for=\"apellido2\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.apellido2",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n								<input type=\"text\" name=\"apellido2\" class=\"formulario_linea_input\" size=\"30\" id=\"apellido2\" />\r\n						    </div>\r\n					</div>\r\n					</fieldset>\r\n					<input type=\"submit\" value=\"Validar formulario\"  />\r\n		</form>\r\n</div>\r\n\r\n<div id=\"divValidaciones4\">\r\n\r\n	<form id=\"formServidor2\" action='${pageContext.request.contextPath}/patrones/validacion/servidor2' modelAttribute=\"alumno\" >\r\n\r\n				<fieldset class=\"alumnoFieldset\">\r\n					<legend>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.datosPersonales",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n\r\n					<span>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.servidor.texto",{"name":"i18n","hash":{},"data":data}))
    + "</span><br/><br/>\r\n					<ul style=\"padding: 0 3em;\">\r\n						<li>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.servidor.ejemplo2.texto1",{"name":"i18n","hash":{},"data":data}))
    + "</li>\r\n						<li>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.servidor.ejemplo2.texto2",{"name":"i18n","hash":{},"data":data}))
    + "</li>\r\n						<li>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.servidor.ejemplo2.texto3",{"name":"i18n","hash":{},"data":data}))
    + "</li>\r\n					</ul>\r\n\r\n					<div class=\"two-col\" >\r\n					    <div class=\"col1\">\r\n					       <label for=\"usuario\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.usuario",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n							<input type=\"text\" name=\"usuario\" class=\"formulario_linea_input\" size=\"20\" id=\"usuario\" />\r\n					    </div>\r\n\r\n					    <div class=\"col1\">\r\n					        <label for=\"password\" class=\"label\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"validate.password",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n							<input type=\"text\" name=\"password\" class=\"formulario_linea_input\" size=\"30\" id=\"password\" />\r\n					    </div>\r\n					</div>\r\n					</fieldset>\r\n					<input type=\"submit\" value=\"Validar formulario\"  />\r\n		</form>\r\n</div>\r\n\r\n<div id=\"divValidaciones4\">\r\n\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["dashboard"]["templates"] = this["App"]["Templates"]["demo"]["app"]["dashboard"]["templates"] || {};
this["App"]["Templates"]["demo"]["app"]["dashboard"]["templates"]["widgetInline"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n\r\nPrueba de template Handlebars\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["pages"] = this["App"]["Templates"]["demo"]["app"]["pages"] || {};
this["App"]["Templates"]["demo"]["app"]["pages"]["index"] = this["App"]["Templates"]["demo"]["app"]["pages"]["index"] || {};
this["App"]["Templates"]["demo"]["app"]["pages"]["index"]["indexTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"feedback-view container-fluid\">\r\n  <div class=\"row\">\r\n    <section id=\"mainContent\">\r\n      <p>\r\n        <a target=\"_blank\" href=\"https://uda-ejie.github.io/images/imgwikis/uda-mini-micro2.png\"><img style=\"max-width:100%;\" src=\"https://uda-ejie.github.io/images/imgwikis/uda-mini-micro2.png\"></a> es el conjunto de <a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Componentes\">utilidades, herramientas, librerías, plugins, guías, y recomendaciones funcionales y técnicas</a> que permiten acelerar el proceso de desarrollo de sistemas software con tecnología Java.<br>\r\n        <br>\r\n        El espíritu del proyecto, y por tanto su principal objetivo, es aumentar la productividad del desarrollador, sin coartar por ello su imaginación ni su libertad para crear software. <a target=\"_blank\" href=\"https://uda-ejie.github.io/images/imgwikis/uda-mini-micro2.png\"><img style=\"max-width:100%;\" src=\"https://uda-ejie.github.io/images/imgwikis/uda-mini-micro2.png\"></a> ayuda y colabora en las tareas repetitivas y de poco (o nulo) valor añadido, pero que sin embargo, son imprescindibles. Pero también persigue otros fines:<br>\r\n        <br>\r\n        </p><ul>\r\n        <li>Minimizar la curva de aprendizaje. No pretende ser un framework más, <a target=\"_blank\" href=\"https://uda-ejie.github.io/images/imgwikis/uda-mini-micro2.png\"><img style=\"max-width:100%;\" src=\"https://uda-ejie.github.io/images/imgwikis/uda-mini-micro2.png\"></a> adopta y explota los ya consolidados y de uso extendido y se aprovecha del conocimiento compartido por sus creadores y usuarios.</li>\r\n        <li>Proponer patrones de usabilidad web, que aprovechen las mejoras proporcionadas por las tecnologías <a target=\"_blank\" href=\"https://es.wikipedia.org/wiki/Rich_Internet_Application\">RIA</a> - <a target=\"_blank\" href=\"https://es.wikipedia.org/wiki/AJAX\">Ajax</a>. Se cubren los escenarios de uso más habituales para las aplicaciones web con dicha tecnología.</li>\r\n        <li>Generar  interfaces  de usuario. Crea automáticamente las <a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Patrones#14._Mantenimiento_con_formulario\">interfaces de mantenimiento de datos</a> (acciones <a target=\"_blank\" href=\"https://es.wikipedia.org/wiki/CRUD\">CRUD</a>), y otras de uso común (combos enlazados, fechas-horas, feedback, etc.)</li>\r\n        <li>Generar código. Crea el código imprescindible en toda aplicación con arquitectura en capas y bajo el paradigma <a target=\"_blank\" href=\"https://es.wikipedia.org/wiki/Modelo%E2%80%93vista%E2%80%93controlador\">MVC</a> (Modelo-Vista-Controlador).</li>\r\n        <li>Ser flexible y configurable. Permite adaptar el código generado por los asistentes a las necesidades de cada organización (libro de estilo, estándares de codificación, etc.)</li>\r\n        <li>Ser adaptable y ampliable. Su arquitectura modular y desacoplada permitirá ampliar y/o sustituir las tecnologías utilizadas en cada una de las capas de responsabilidad que la componen.</li>\r\n        <li>No imponer un modelo de uso único. En algún caso ya se proponen tecnologías alternativas para la misma capa de la arquitectura.</li>\r\n        <li>Crear aplicaciones accesibles. Hasta donde sea posible, se cumplen con las recomendaciones <a target=\"_blank\" href=\"http://www.w3.org/TR/WCAG20/\">WCAG2.0</a> y <a target=\"_blank\" href=\"http://www.w3.org/TR/wai-aria/\">WAI-ARIA</a></li>\r\n        </ul>\r\n      </p>\r\n    </section>\r\n  </div>\r\n  <div class=\"row\">\r\n    <section id=\"newFeaturesContent\">\r\n      <h2>Novedades</h2>\r\n\r\n      <b><a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Actualizar\">9-Agosto-2016</a>:</b>\r\n      <br>\r\n      Se actualizan las siguientes <a target=\"_blank\" href=\"https://drive.google.com/folderview?id=0B2jWuJHnBpz_VFVLU2ZoREQ2Q1E&amp;usp=sharing#list\">descargas</a>:<br>\r\n      <ul>\r\n        <li>Plantillas de generación de código: <a href=\"https://docs.google.com/uc?authuser=0&amp;id=0B2jWuJHnBpz_b3dWblVzVTJOT0E&amp;export=download\">Plantillas (v2.4.8)</a></li>\r\n        <li>Componentes visuales: <a href=\"https://docs.google.com/uc?authuser=0&amp;id=0B2jWuJHnBpz_OWZrTnZUMnIySGc&amp;export=download\">Componentes RUP (v2.4.8)</a></li>\r\n        <li>Asistente de generación de código: <a href=\"https://docs.google.com/uc?authuser=0&amp;id=0B2jWuJHnBpz_YkEyZUlEb1dvRnM&amp;export=download\">Plugin UDA (v2.4.8)</a></li>\r\n        <li>Eclipse IDE configurado con nuevas plantillas y nuevo plugin: <a href=\"https://docs.google.com/uc?authuser=0&amp;id=0B2jWuJHnBpz_eng5RmV1YTk3Z1E&amp;export=download\">Eclipse Helios UDA (v2.4.8)</a></li>\r\n        <li>Librería de utilidades comunes: <a href=\"https://docs.google.com/uc?authuser=0&amp;id=0B2jWuJHnBpz_dUxGLXhXWTdhUlE&amp;export=download\">x38ShLibClasses-2.4.7-RELEASE.jar</a></li>\r\n        <li>Actualización con las nuevas versiones de la librería del <a href=\"https://docs.google.com/uc?authuser=0&amp;id=0B2jWuJHnBpz_dzVPQWp1YWl1ZDQ&amp;export=download\">Repositorio Maven</a></li>\r\n        <li><a href=\"https://docs.google.com/uc?authuser=0&amp;id=0B2jWuJHnBpz_VGowMkNWa1NyeEU&amp;export=download\">Documentación actualizada</a></li>\r\n      </ul>\r\n\r\n      En esta versión se han realizado las siguientes mejoras:<br>\r\n      <ul>\r\n        <li><a target=\"_blank\" href=\"https://github.com/UDA-EJIE/udaRUP/issues?q=milestone%3Av2.4.8+label%3Abug\">Correción de bugs detectados en la versión anterior de los componentes</a></li>\r\n        <li><a target=\"_blank\" href=\"https://github.com/UDA-EJIE/udaPlugin/issues?q=milestone%3Av2.4.8\">Plugin UDA: </a>Adecuación de la cadena de conexión a base de datos usando Service Name</li>\r\n      </ul>\r\n\r\n      En la sección UDA v2.4.8 (09-Agosto-2016) del archivo <a href=\"https://docs.google.com/uc?authuser=0&amp;id=0B2jWuJHnBpz_TFMxZFVrMFJDQVk&amp;export=download\">ChangeLog.txt</a> podrás encontrar la lista de cambios realizados en esta versión.<br>\r\n      <br>\r\n      La <a href=\"https://docs.google.com/uc?authuser=0&amp;id=0B2jWuJHnBpz_TnhuN2k1bElmTFU&amp;export=download\">máquina virtual</a> configurada con el entorno completo sobre la versión 2.4.4 sigue estando disponible en caso de necesitar una maqueta de entorno completo.<br>\r\n      <br>\r\n      <i>Puedes encontrar la información sobre los productos liberados anteriormente en el apartado <a target=\"_blank\" href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Versiones\">Versiones</a></i>\r\n      <br>\r\n      <br>\r\n    </section>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n      <section>\r\n        <h2>verlo en funcionamiento</h2>\r\n        <ul>\r\n          <li>los <a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Videos\">videos</a></li>\r\n          <li>la <a target=\"_blank\" href=\"http://www.ejie.eus/x21aPilotoPatronesWar/\">aplicación de demostración</a></li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <section>\r\n        <h2>profundizar</h2>\r\n        <ul>\r\n          <li>las <a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Arquitectura\">guías, y recomendaciones funcionales y técnicas</a></li>\r\n          <li>las <a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Componentes\">utilidades, herramientas, librerías, plugins</a></li>\r\n          <li>los <a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Patrones\"> patrones de usabilidad web</a><a></a></li><a>\r\n          </a><li><a>la </a><a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Documentacion\">documentación</a></li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <section>\r\n        <h2>pasar a la acción</h2>\r\n        <ul>\r\n          <li>partiendo de cero, consulta cómo <a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Instalar\">Instalar</a></li>\r\n          <li>si ya has instalado alguna versión anteriormente, puedes ver cómo <a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Actualizar\">Actualizar</a> desde tu <a href=\"https://github.com/UDA-EJIE/uda-ejie.github.io/wiki/Versiones\">versión</a> </li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  </div>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"] = this["App"]["Templates"]["demo"]["app"]["shared"] || {};
this["App"]["Templates"]["demo"]["app"]["shared"]["component"] = this["App"]["Templates"]["demo"]["app"]["shared"]["component"] || {};
this["App"]["Templates"]["demo"]["app"]["shared"]["component"]["componentExampleCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"exampleTabs\"></div>\r\n<pre>\r\n  <code class=\"html\" id=\"componentHtmlExample\">\r\n  </code>\r\n</pre>\r\n<pre>\r\n  <code class=\"javascript\" id=\"componentJsExample\">\r\n  </code>\r\n</pre>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["component"]["componentLayoutTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"container-fluid\">\r\n  <section>\r\n    <div id=\"componentMainBody\">\r\n    </div>\r\n    <div id=\"componentTest\">\r\n    </div>\r\n  </section>\r\n\r\n  <section>\r\n    <h4>Código</h4>\r\n\r\n    <div id=\"exampleCode\">\r\n\r\n    </div>\r\n  </section>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["component"]["rwdGridLayoutTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"container-fluid\">\r\n  <section>\r\n    <div id=\"description\">\r\n    </div>\r\n  </section>\r\n  <section id=\"rwdExampleSection\">\r\n    <div id=\"rwdExample\">\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <div id=\"exampleCode\">\r\n\r\n    </div>\r\n\r\n  </section>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["footer"] = this["App"]["Templates"]["demo"]["app"]["shared"]["footer"] || {};
this["App"]["Templates"]["demo"]["app"]["shared"]["footer"]["footerJQueryUITemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"footer\">UDA - PIE DEL PORTAL</div>";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["footer"]["footerTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<footer>\r\n  <div class=\"footer-row-1\">\r\n    <span class=\"footer-informacion-legal\"> >> Información legal</span>\r\n    <span class=\"footer-ejgv\">© 2012 · Eusko Jaurlaritza - Gobierno Vasco</span>\r\n  </div>\r\n  <div class=\"footer-row-2\">\r\n    <img class=\"footer-image\" src=\"images/web01-2014_claim_pertsona_helburu_es.gif\" />\r\n  </div>\r\n</footer>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["header"] = this["App"]["Templates"]["demo"]["app"]["shared"]["header"] || {};
this["App"]["Templates"]["demo"]["app"]["shared"]["header"]["headerJQueryUITemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"cabecera\" class=\"cabecera\" style=\"margin-bottom: 2em;\" >\r\n	<div style=\"float: left; margin-top:-1.5em;margin-bottom:1em;\" >\r\n		<a href=\"#\" id=\"themeroller\" ></a>\r\n		<a href=\"#\" id=\"borrar_themeroller\" style=\"display: none;\">Borrar ThemeRoller<img src=\"images/icons/trash.png\"/></a>\r\n	</div>\r\n	<span style=\"font-size: 2em;color: #000000;margin-left: 1em; \">CABECERA PORTAL</span>\r\n	<a href=\"/x21aResponsiveWar/\" style=\"float: right; margin-top:-2em;\">\r\n		<img src=\"images/euskadieus_logo.gif\" alt=\"Euskadi Eus\"/>\r\n	</a>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["header"]["headerTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<header>\r\n  <div id=\"cabecera\" class=\"cabecera\" >\r\n  	<div style=\"float: left;\" >\r\n  		<img src=\"images/ejie.jpg\"/>\r\n  	</div>\r\n  	<a href=\"/x21aResponsiveWar/\" style=\"float: right;\">\r\n  		<img src=\"images/euskadieus_logo.gif\" alt=\"Euskadi Eus\"/>\r\n  	</a>\r\n  </div>\r\n\r\n</header>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["language"] = this["App"]["Templates"]["demo"]["app"]["shared"]["language"] || {};
this["App"]["Templates"]["demo"]["app"]["shared"]["language"]["languageTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["main"] = this["App"]["Templates"]["demo"]["app"]["shared"]["main"] || {};
this["App"]["Templates"]["demo"]["app"]["shared"]["main"]["mainJQueryUITemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"contenedor\" >\r\n  <!-- Cabecera -->\r\n  <div id=\"header\"></div>\r\n  <!-- Idioma -->\r\n  <div id=\"language\" ></div><br/>\r\n\r\n  <!-- Menu -->\r\n  <div id=\"menu\"></div>\r\n\r\n  <!-- Migas de pan -->\r\n  <div id=\"breadCrumb\"></div><br/>\r\n\r\n  <!-- Contenidos -->\r\n  <div id=\"container\" class=\"content\"></div>\r\n\r\n  <!-- Pie -->\r\n  <div id=\"footer\"></div>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["main"]["mainTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"contenedor\" >\r\n  <!-- Cabecera -->\r\n  <div id=\"header\"></div>\r\n  <!-- Idioma -->\r\n  <div id=\"language\" ></div>\r\n\r\n  <!-- Menu -->\r\n  <div id=\"menu\"></div>\r\n  <div id=\"overlay\"></div>\r\n\r\n  <!-- Migas de pan -->\r\n  <div id=\"breadCrumb\" class=\"rup-breadCrumb_root\"></div>\r\n\r\n  <!-- Contenidos -->\r\n  <div id=\"container\" class=\"content\"></div>\r\n\r\n  <!-- Pie -->\r\n  <div id=\"footer\"></div>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["menu"] = this["App"]["Templates"]["demo"]["app"]["shared"]["menu"] || {};
this["App"]["Templates"]["demo"]["app"]["shared"]["menu"]["menuJQueryUITemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n	<ul id=\"x21aResponsiveWar_menu\"	class=\"rup_invisible_menu\">\r\n		<li>\r\n			<a href=\"/demo/index.html\" >\r\n				Inicio\r\n				<span class=\"ui-icon home_icon\"></span>\r\n			</a>\r\n		</li>\r\n		<li>\r\n			<a>\r\n				Patrones\r\n				<span class=\"ui-icon patrones_icon\"></span>\r\n			</a>\r\n			<ul>\r\n				<li>\r\n					<a href=\"/x21aResponsiveWar/patrones/all\">\r\n						[Todos los patrones]\r\n					</a>\r\n				</li>\r\n				<li class=\"ui-widget-content ui-menu-divider\"></li>\r\n				<li><strong>Notificaciones</strong></li>\r\n				<li>\r\n					<a href=\"#feedback\">\r\n						Feedback\r\n						<span class=\"ui-icon feedback_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#tooltip\">\r\n						Tooltip\r\n						<span class=\"ui-icon tooltip_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#message\">\r\n						Mensajes\r\n						<span class=\"ui-icon message_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#dialog\">\r\n						Diálogos\r\n						<span class=\"ui-icon dialog_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#progressbar\">\r\n						Barra de progreso\r\n						<span class=\"ui-icon dialog_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li class=\"ui-widget-content ui-menu-divider\"></li>\r\n				<li><strong>Navegación</strong></li>\r\n				<li>\r\n					<a>\r\n						Menú\r\n						<span class=\"ui-icon menu_icon\"></span>\r\n					</a>\r\n					<ul>\r\n						<li>\r\n							<a href=\"#menuHorizontal\">\r\n								Horizontal\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a href=\"#menuVertical\">\r\n								Vertical\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a	href=\"#menuMixto\">\r\n								Mixto\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a href=\"#navMenu\">\r\n								Con Navegación\r\n							</a>\r\n						</li>\r\n					</ul>\r\n				</li>\r\n				<li>\r\n					<a href=\"#contextMenu\">\r\n						Menú contextual\r\n						<span class=\"ui-icon contextMenu_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#toolbar\">\r\n						Botonera\r\n						<span class=\"ui-icon toolbar_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#button\">\r\n						Botón\r\n						<span class=\"ui-icon toolbar_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li class=\"ui-widget-content ui-menu-divider\"></li>\r\n				<li><strong>Estructuración de pantalla</strong></li>\r\n				<li>\r\n					<a href=\"#accordion\">\r\n						Accordion\r\n						<span class=\"ui-icon accordion_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a>\r\n						Pestañas\r\n						<span class=\"ui-icon tab_icon\"></span>\r\n					</a>\r\n					<ul>\r\n						<li>\r\n							<a href=\"#tabsStatic\">\r\n								Pestañas carga estática\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a	href=\"#tabsAjax\">\r\n								Pestañas carga Ajax\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a	href=\"#tabsMixto\">\r\n								Pestañas carga mixta\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a href=\"/x21aResponsiveWar/patrones/maintTab\">\r\n								Pestañas con mantenimientos\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a href=\"#tabsScrollable\">\r\n								Pestañas con navegación\r\n							</a>\r\n						</li>\r\n					</ul>\r\n				</li>\r\n				<li>\r\n					<a href=\"/x21aResponsiveWar/patrones/grid\">\r\n						Tabla\r\n						<span class=\"ui-icon grid_icon\"></span>\r\n					</a>\r\n					<span class=\"ui-icon old_icon\"></span>\r\n<!-- 					<ul> -->\r\n<!-- 						<li> -->\r\n<!-- 							<a	href=\"/x21aResponsiveWar/patrones/gridGroup\"> -->\r\n\r\n<!-- 							</a> -->\r\n<!-- 						</li> -->\r\n<!-- 						<li> -->\r\n<!-- 							<a	href=\"/x21aResponsiveWar/patrones/grid\"> -->\r\n\r\n<!-- 							</a> -->\r\n<!-- 						</li> -->\r\n<!-- 						<li> -->\r\n<!-- 							<a href=\"/x21aResponsiveWar/patrones/gridTree\"> -->\r\n\r\n<!-- 							</a> -->\r\n<!-- 						</li> -->\r\n<!-- 					</ul> -->\r\n				</li>\r\n				<li>\r\n					<a>\r\n						Wizard\r\n						<span class=\"ui-icon wizard_icon\"></span>\r\n					</a>\r\n					<ul>\r\n						<li>\r\n							<a	href=\"#wizard\">\r\n								Wizard simple\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a	href=\"#wizardDinamico\">\r\n								Wizard dinámico\r\n							</a>\r\n						</li>\r\n					</ul>\r\n				</li>\r\n				<li>\r\n					<a>\r\n						Árbol\r\n						<span class=\"ui-icon tree_icon\"></span>\r\n					</a>\r\n					<ul>\r\n						<li>\r\n							<a	href=\"/x21aResponsiveWar/patrones/trees\">\r\n								Árboles con diferentes configuraciones\r\n							</a>\r\n						</li>\r\n<!-- 						<li> -->\r\n<!-- 							<a href=\"/x21aResponsiveWar/patrones/trees\"> -->\r\n\r\n<!-- 							</a> -->\r\n<!-- 						</li> -->\r\n						<li>\r\n							<a href=\"/x21aResponsiveWar/patrones/treeDAD\">\r\n								Árboles con interaccion mediante Drag & Drop\r\n							</a>\r\n						</li>\r\n<!-- 						<li> -->\r\n<!-- 							<a href=\"/x21aResponsiveWar/patrones/trees\"> -->\r\n\r\n<!-- 							</a> -->\r\n<!-- 						</li> -->\r\n					</ul>\r\n				</li>\r\n				<li class=\"ui-widget-content ui-menu-divider\"></li>\r\n				<li><strong>Inserción de datos</strong></li>\r\n				<li>\r\n					<a href=\"#autocomplete\">\r\n						Autocomplete\r\n						<span class=\"ui-icon autocomplete_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a>\r\n						Combo\r\n						<span class=\"ui-icon combo_icon\"></span>\r\n					</a>\r\n					<ul>\r\n						<li>\r\n							<a href=\"#comboSimple\">\r\n								Combo Simple\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a href=\"#comboEnlazadoSimple\">\r\n								Combo Enlazado (simple)\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a href=\"#comboEnlazadoMultiple\">\r\n								Combo Enlazado (múltiple)\r\n							</a>\r\n						</li>\r\n						<li>\r\n							<a href=\"#comboMultiseleccion\">\r\n								Combo Multiselección\r\n							</a>\r\n						</li>\r\n					</ul>\r\n				</li>\r\n        <li>\r\n					<a href=\"#slider\">\r\n						Deslizador\r\n						<span class=\"ui-icon date_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#date\">\r\n						Fecha\r\n						<span class=\"ui-icon date_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#form\">\r\n						Formulario\r\n						<span class=\"ui-icon form_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#time\">\r\n						Hora\r\n						<span class=\"ui-icon time_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#slider\">\r\n						Slider\r\n						<span class=\"ui-icon date_icon\"></span>\r\n					</a>\r\n				</li>\r\n        <li>\r\n					<a href=\"#spinner\">\r\n						Spinner\r\n						<span class=\"ui-icon date_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#upload\">\r\n						Upload\r\n						<span class=\"ui-icon upload_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n					<a href=\"#validate\">\r\n						Validación\r\n						<span class=\"ui-icon validate_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li class=\"ui-widget-content ui-menu-divider\"></li>\r\n				<li><strong>Representación de datos</strong></li>\r\n				<li>\r\n					<a href=\"#chart\">\r\n						Gráficos\r\n						<span class=\"ui-icon chart_icon\"></span>\r\n					</a>\r\n				</li>\r\n			</ul>\r\n		</li>\r\n\r\n		<li>\r\n            <a>Tabla</a>\r\n            <ul>\r\n\r\n                <li>\r\n                    <a href=\"#tableFilter\">Filtro Simple</a>\r\n                </li>\r\n\r\n                <li>\r\n                    <a>\r\n                        Jerarqu&iacute;a\r\n                    </a>\r\n                    <ul>\r\n                        <li>\r\n                            <a href=\"/x21aMantenimientosWar/table/jerarquia\">\r\n                               Normal\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/x21aMantenimientosWar/table/jerarquiaMulti\">\r\n                                Multiselecci&oacute;n\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/formEditAutogenerated\">\r\n                        Edici&oacute;n en formulario (Autogenerado)\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/formEdit\">\r\n                         Edici&oacute;n en formulario\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/formEditMultiselection\">\r\n                        Edici&oacute;n en formulario con multiselecci&oacute;n\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/inlineEditExcelMode\">\r\n                        Edici&oacute;n en línea (Modo Excel)\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/inlineEdit\">\r\n                        Edici&oacute;n en línea\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/inlineEditMultiselection\">\r\n                        Edici&oacute;n en línea con multiselecci&oacute;n\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/grouping\">\r\n                        Tabla con agrupamiento\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/masterDetail\">\r\n                        Maestro - detalle\r\n                    </a>\r\n                </li>\r\n                    <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/tableLoadOnStartUp\">\r\n                        LoadOnStartUp =false\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/dialog\">\r\n                        Tabla en di&aacute;logo\r\n                    </a>\r\n                </li>\r\n                    <li>\r\n                    <a href=\"/x21aMantenimientosWar/table/tableRadiobutton\">\r\n                        tableRadioButton\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n				<li>\r\n					<a	href=\"#styleGuide\" target=\"_blank\">\r\n						Guia de estilos\r\n						<span class=\"ui-icon uda_icon\"></span>\r\n					</a>\r\n				</li>\r\n				<li>\r\n\r\n					<a>\r\n						Visualizaciones\r\n						<ul>\r\n							<li>\r\n									<a href=\"#\" id=\"navLinkBt4\" data-redirect-navLink=\"index-bt4.html\">\r\n											Bootstrap 4\r\n									</a>\r\n							</li>\r\n							<li>\r\n									<a href=\"#\" id=\"navLinkBt4\" data-redirect-navLink=\"index-bt3.html\">\r\n											Bootstrap 3\r\n									</a>\r\n							</li>\r\n							<li>\r\n									<a href=\"#\" id=\"navLinkJQui\" data-redirect-navLink=\"index-jqueryui.html\">\r\n											JQueryUI\r\n									</a>\r\n							</li>\r\n						</ul>\r\n					</a>\r\n				</li>\r\n		<li>\r\n			<a	href=\"http://code.google.com/p/uda/\" target=\"_blank\">\r\n				UDA\r\n				<span class=\"ui-icon uda_icon\"></span>\r\n			</a>\r\n		</li>\r\n	</ul>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["shared"]["menu"]["menuTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<nav class=\"rup-navbar navbar\">\r\n\r\n    <button type=\"button\" class=\"navbar-toggler hidden-lg-up navbar-toggle \"  type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\r\n\r\n  <div id=\"navbarResponsive\" class=\"collapse navbar-toggleable-md\">\r\n    <a class=\"navbar-brand\" href=\"#\">Uda</a>\r\n    <ul class=\"nav navbar-nav\">\r\n      <li class=\"nav-item dropdown\">\r\n        <!-- <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Componentes <span class=\"caret\"></span></a> -->\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"responsiveNavbarDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Componentes</a>\r\n        <div class=\"collapse dropdown-menu\" aria-labelledby=\"responsiveNavbarDropdown\">\r\n            <a class=\"dropdown-item\" href=\"#feedback\"><i class=\"fa fa-check-square\" aria-hidden=\"true\"></i>Feedback</a>\r\n            <a class=\"dropdown-item\" href=\"#tooltip\"><i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>Tooltip</a>\r\n            <a class=\"dropdown-item\" href=\"#message\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>Mensaje</a>\r\n            <a class=\"dropdown-item\" href=\"#dialog\"><i class=\"fa fa-window-restore\" aria-hidden=\"true\"></i>Diálogo</a>\r\n            <a class=\"dropdown-item\" href=\"#progressbar\">Barra de progreso</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" href=\"#contextMenu\">Menú contextual</a>\r\n            <a class=\"dropdown-item\" href=\"#button\">Botón</a>\r\n            <a class=\"dropdown-item\" href=\"#toolbar\">Botonera</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" href=\"#accordion\">Accordion</a>\r\n\r\n            <div class=\"dropdown-submenu\" >\r\n              <a class=\"dropdown-item dropdown-toggle\" href=\"#\">Pestañas</a>\r\n              <div class=\"dropdown-menu menu-right\" >\r\n                <a class=\"dropdown-item\" href=\"#tabsStatic\">Pestañas simples</a>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"dropdown-submenu\" >\r\n              <a class=\"dropdown-item dropdown-toggle\" href=\"#\">Wizard</a>\r\n              <div class=\"dropdown-menu menu-right\" >\r\n                <a class=\"dropdown-item\" href=\"#wizardSimple\">Wizard simple</a>\r\n                <a class=\"dropdown-item\" href=\"#wizardDynamic\">Wizard dinámico</a>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"dropdown-submenu\" >\r\n              <a class=\"dropdown-item dropdown-toggle\" href=\"#\">Arbol</a>\r\n              <div class=\"dropdown-menu menu-right\" >\r\n                <a class=\"dropdown-item\" href=\"#treeExamples\">Árboles con diferentes configuraciones</a>\r\n                <a class=\"dropdown-item\" href=\"#treeDragDrop\">Árbol con interacción Drag and Drop</a>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" href=\"#autocomplete\">Autocomplete</a>\r\n\r\n            <div class=\"dropdown-submenu\" >\r\n              <a class=\"dropdown-item dropdown-toggle\" href=\"#\">Combo</a>\r\n              <div class=\"dropdown-menu menu-right\" >\r\n                <a class=\"dropdown-item\" href=\"#comboSimple\">Combo simple</a>\r\n              </div>\r\n            </div>\r\n\r\n            <a class=\"dropdown-item\" href=\"#slider\">Deslizador</a>\r\n            <a class=\"dropdown-item\" href=\"#date\">Fecha</a>\r\n            <a class=\"dropdown-item\" href=\"#form\">Formulario</a>\r\n            <a class=\"dropdown-item\" href=\"#time\">Hora</a>\r\n            <a class=\"dropdown-item\" href=\"#spinner\">Spinner</a>\r\n            <a class=\"dropdown-item\" href=\"#upload\">Upload</a>\r\n            <a class=\"dropdown-item\" href=\"#validate\">Validación</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" href=\"#chart\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>Gráficos</a>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"tableDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Tabla</a>\r\n        <div class=\"collapse dropdown-menu\" aria-labelledby=\"tableDropdown\">\r\n          <a class=\"dropdown-item\" href=\"#tableFilter\">Edición en formulario</a>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"gridResponsiveDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Grid responsive</a>\r\n        <div class=\"collapse dropdown-menu\" aria-labelledby=\"gridResponsiveDropdown\">\r\n          <a class=\"dropdown-item\" href=\"#stackedHorizontal\">Stacked to horizontal</a>\r\n          <a class=\"dropdown-item\" href=\"#mobileDesktop\">Mobile and desktop</a>\r\n          <a class=\"dropdown-item\" href=\"#mobileTabletDesktop\">Mobile, Tablet and desktop</a>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dashboardDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dashboard</a>\r\n        <div class=\"collapse dropdown-menu\" aria-labelledby=\"dashboardDropdown\">\r\n          <a class=\"dropdown-item\" href=\"#dashboard\">Dashboard</a>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"styleGuideDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Guía de estilos</a>\r\n        <div class=\"collapse dropdown-menu\" aria-labelledby=\"styleGuideDropdown\">\r\n          <a class=\"dropdown-item\" href=\"#styleGuide\">Guía de estilos</a>\r\n          <a class=\"dropdown-item\" href=\"#bt3StyleGuide\">Bootstrap 3</a>\r\n          <a class=\"dropdown-item\" href=\"#bt4StyleGuide\">Bootstrap 4</a>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <ul class=\"nav navbar-nav float-md-right rup-nav-tools\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link rup-nav-tool-icon\" href=\"#\" id=\"languageDropdown\"><i class=\"fa fa-globe\" aria-hidden=\"true\"></i><span data-rup-lang-current=\"\"></span></a>\r\n\r\n      </li>\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link rup-nav-tool-icon dropdown-toggle\" id=\"demoStylesDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fa fa-cog \" aria-hidden=\"true\"></i></a>\r\n        <div class=\"collapse dropdown-menu\" aria-labelledby=\"demoStylesDropdown\">\r\n          <a class=\"dropdown-item\" id=\"navLinkBt4\" data-redirect-navLink=\"index-bt4.html\" href=\"#\">Bootstrap 4</a>\r\n          <a class=\"dropdown-item\" id=\"navLinkBt3\" data-redirect-navLink=\"index-bt3.html\"href=\"#\">Bootstrap 3</a>\r\n          <a class=\"dropdown-item\" id=\"navLinkJQui\" data-redirect-navLink=\"index-jqueryui.html\"href=\"#\">JQueryUI</a>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link rup-nav-user rup-nav-tool-icon\" href=\"#\"><i class=\"fa fa-user-circle-o \" aria-hidden=\"true\"></i></a>\r\n      </li>\r\n      <li class=\"nav-item swingTop\">\r\n        <a class=\"nav-link rup-nav-user rup-nav-tool-icon\" href=\"javascript:void(0)\"><i class=\"fa fa-arrow-circle-up \" aria-hidden=\"true\"></i></a>\r\n      </li>\r\n    </ul>\r\n\r\n  </div><!--/.navbar-collapse -->\r\n</nav>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"] = this["App"]["Templates"]["demo"]["app"]["responsiveGrid"] || {};
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["mobileDesktop"] = this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["mobileDesktop"] || {};
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["mobileDesktop"]["mobileDesktopDescTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Mobile and desktop</h2>\r\n<p>Don't want your columns to simply stack in smaller devices? Use the extra small and medium device grid classes by adding .col-xs-* .col-md-* to your columns. See the example below for a better idea of how it all works.</p>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["mobileDesktop"]["mobileDesktopExampleTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<!-- Stack the columns on mobile by making one full-width and the other half-width -->\r\n<div class=\"row\">\r\n  <div class=\"col-xs-12 col-md-8\"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu.</p></div>\r\n  <div class=\"col-xs-6 col-md-4\"><p>In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet.</p></div>\r\n</div>\r\n\r\n<!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop -->\r\n<div class=\"row\">\r\n  <div class=\"col-xs-6 col-md-4\"><p>Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus.</p></div>\r\n  <div class=\"col-xs-6 col-md-4\"><p>Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien. Vestibulum purus quam, scelerisque ut, mollis sed, nonummy id, metus.</p></div>\r\n  <div class=\"col-xs-6 col-md-4\"><p>Nullam accumsan lorem in dui. Cras ultricies mi eu turpis hendrerit fringilla. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; In ac dui quis mi consectetuer lacinia. Nam pretium turpis et arcu. Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Sed aliquam ultrices mauris.</p></div>\r\n</div>\r\n\r\n<!-- Columns are always 50% wide, on mobile and desktop -->\r\n<div class=\"row\">\r\n  <div class=\"col-xs-6\"><p>Integer ante arcu, accumsan a, consectetuer eget, posuere ut, mauris. Praesent adipiscing. Phasellus ullamcorper ipsum rutrum nunc. Nunc nonummy metus. Vestibulum volutpat pretium libero. Cras id dui. Aenean ut eros et nisl sagittis vestibulum. Nullam nulla eros, ultricies sit amet, nonummy id, imperdiet feugiat, pede. Sed lectus. Donec mollis hendrerit risus.</p></div>\r\n  <div class=\"col-xs-6\"><p>Phasellus nec sem in justo pellentesque facilisis. Etiam imperdiet imperdiet orci. Nunc nec neque. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Maecenas malesuada. Praesent congue erat at massa. Sed cursus turpis vitae tortor. Donec posuere vulputate arcu. Phasellus accumsan cursus velit.</p></div>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["mobileTabletDesktop"] = this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["mobileTabletDesktop"] || {};
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["mobileTabletDesktop"]["mobileTabletDesktopDescTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Mobile, tablet, desktop</h2>\r\n<p>Build on the previous example by creating even more dynamic and powerful layouts with tablet .col-sm-* classes.</p>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["mobileTabletDesktop"]["mobileTabletDesktopExampleTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"row\">\r\n  <div class=\"col-xs-12 col-sm-6 col-md-8\"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu.</p></div>\r\n  <div class=\"col-xs-6 col-md-4\"><p>In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet.</p></div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-xs-6 col-sm-4\"><p>Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus.</p></div>\r\n  <div class=\"col-xs-6 col-sm-4\"><p>Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien. Vestibulum purus quam, scelerisque ut, mollis sed, nonummy id, metus.</p></div>\r\n  <!-- Optional: clear the XS cols if their content doesn't match in height -->\r\n  <div class=\"clearfix visible-xs-block\"></div>\r\n  <div class=\"col-xs-6 col-sm-4\"><p>Nullam accumsan lorem in dui. Cras ultricies mi eu turpis hendrerit fringilla. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; In ac dui quis mi consectetuer lacinia. Nam pretium turpis et arcu. Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Sed aliquam ultrices mauris.</p></div>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["stackedHorizontal"] = this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["stackedHorizontal"] || {};
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["stackedHorizontal"]["stackedHorizontalDescTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Stacked-to-horizontal</h2>\r\n<p>Using a single set of .col-md-* grid classes, you can create a basic grid system that starts out stacked on mobile devices and tablet devices (the extra small to small range) before becoming horizontal on desktop (medium) devices. Place grid columns in any .row.</p>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["responsiveGrid"]["stackedHorizontal"]["stackedHorizontalExampleTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"row\">\r\n  <div class=\"col-md-2\"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa.</p></div>\r\n  <div class=\"col-md-2\"><p>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem.</p></div>\r\n  <div class=\"col-md-2\"><p>Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo.</p></div>\r\n  <div class=\"col-md-2\"><p>Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.</p></div>\r\n  <div class=\"col-md-2\"><p>Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet.</p></div>\r\n  <div class=\"col-md-2\"><p>Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus.</p></div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-8\"><p>Praesent adipiscing. Phasellus ullamcorper ipsum rutrum nunc. Nunc nonummy metus. Vestibulum volutpat pretium libero. Cras id dui. Aenean ut eros et nisl sagittis vestibulum.</p></div>\r\n  <div class=\"col-md-4\"><p>Nullam nulla eros, ultricies sit amet, nonummy id, imperdiet feugiat, pede. Sed lectus. Donec mollis hendrerit risus. Phasellus nec sem in justo pellentesque facilisis.</p></div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-4\"><p>Etiam imperdiet imperdiet orci. Nunc nec neque. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo.</p></div>\r\n  <div class=\"col-md-4\"><p>Maecenas malesuada. Praesent congue erat at massa. Sed cursus turpis vitae tortor. Donec posuere vulputate arcu. Phasellus accumsan cursus velit.</p></div>\r\n  <div class=\"col-md-4\"><p>Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Sed aliquam, nisi quis porttitor congue, elit erat euismod orci, ac placerat dolor lectus quis orci.</p></div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-6\"><p>Phasellus consectetuer vestibulum elit. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc. Vestibulum fringilla pede sit amet augue. In turpis. Pellentesque posuere.</p></div>\r\n  <div class=\"col-md-6\"><p>Praesent turpis. Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Donec elit libero, sodales nec, volutpat a, suscipit non, turpis.</p></div>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["styleGuide"]["bt3"] = this["App"]["Templates"]["demo"]["app"]["styleGuide"]["bt3"] || {};
this["App"]["Templates"]["demo"]["app"]["styleGuide"]["bt3"]["styleGuideTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<link href=\"http://getbootstrap.com/assets/css/docs.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\r\n\r\n<div id=\"contenedor\">\r\n  <section>\r\n    <div class=\"row\"id=\"bt3Container\">\r\n    \r\n    </div>\r\n  </section>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["styleGuide"]["bt4"] = this["App"]["Templates"]["demo"]["app"]["styleGuide"]["bt4"] || {};
this["App"]["Templates"]["demo"]["app"]["styleGuide"]["bt4"]["styleGuideTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<link href=\"http://v4-alpha.getbootstrap.com/assets/css/docs.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\r\n<div id=\"contenedor container\">\r\n  <section id=\"bt4examples\">\r\n\r\n  </section>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["combo"] = this["App"]["Templates"]["demo"]["app"]["components"]["combo"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboEnlazadoMultiple"] = this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboEnlazadoMultiple"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboEnlazadoMultiple"]["comboEnlazadoMultipleTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Combo Enlazado (multiple)</h2>\r\n\r\n<!-- Feedback -->\r\n<div id=\"x21aPilotoPatronesWar_feedback\"></div><br/>\r\n \r\n<div id=\"local\" style=\"float: left;\">\r\n	<fieldset class=\"combo_fieldset\">\r\n		<legend class=\"combo_legend\">Local (no i18n)</legend>\r\n		\r\n		<label for=\"departamento\">Departamento</label>\r\n		<select id=\"departamento\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"provincia\">Provincia</label>\r\n		<select id=\"provincia\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"dptoProv\">Departamento-Provincia</label>\r\n		<select id=\"dptoProv\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n	</fieldset>\r\n</div>\r\n\r\n<div id=\"remote\" style=\"float: left; margin-left: 4em;\">\r\n	<fieldset class=\"combo_fieldset\">\r\n		<legend class=\"combo_legend\">Remoto</legend>\r\n		\r\n		<label for=\"departamentoRemote\">Departamento</label>\r\n		<select id=\"departamentoRemote\" name=\"departamento\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"provinciaRemote\">Provincia</label>\r\n		<select id=\"provinciaRemote\" name=\"provincia\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"dptoProvRemote\">Departamento-Provincia</label>\r\n		<select id=\"dptoProvRemote\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n	</fieldset>		\r\n</div>\r\n\r\n<div id=\"mixto\" style=\"float: left; margin-left: 4em;\">\r\n	<fieldset class=\"combo_fieldset\">\r\n		<legend class=\"combo_legend\">Mixto I</legend>\r\n		\r\n		<label for=\"mixto_departamentoRemote\">Departamento (remoto)</label>\r\n		<select id=\"mixto_departamentoRemote\" name=\"departamento\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"mixto_provincia\">Provincia (local)</label>\r\n		<select id=\"mixto_provincia\" name=\"provincia\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"mixto_dptoProvRemote\">Departamento-Provincia (remoto)</label>\r\n		<select id=\"mixto_dptoProvRemote\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n	</fieldset>\r\n</div>\r\n\r\n<div id=\"mixto2\" style=\"float: left; margin-left: 4em; margin-bottom: 3em;\">\r\n	<fieldset class=\"combo_fieldset\">\r\n		<legend class=\"combo_legend\">Mixto II</legend>\r\n		\r\n		<label for=\"mixto2_departamento\">Departamento (local)</label>\r\n		<select id=\"mixto2_departamento\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"mixto2_provinciaRemote\">Provincia (remoto)</label>\r\n		<select id=\"mixto2_provinciaRemote\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"mixto2_dptoProv\">Departamento-Provincia (local)</label>\r\n		<select id=\"mixto2_dptoProv\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n	</fieldset>\r\n</div>";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboEnlazadoSimple"] = this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboEnlazadoSimple"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboEnlazadoSimple"]["comboEnlazadoSimpleTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Combo Enlazado (simple)</h2>\r\n \r\n<div id=\"local\" style=\"float: left;\">\r\n	<fieldset class=\"combo_fieldset\">\r\n		<legend class=\"combo_legend\">Local</legend>\r\n		\r\n		<label for=\"comboAbuelo\">Provincia</label>\r\n		<select id=\"comboAbuelo\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"comboPadre\">Comarca</label>\r\n		<select id=\"comboPadre\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"comboHijo\">Localidad</label>\r\n		<select id=\"comboHijo\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n	</fieldset>\r\n</div>\r\n\r\n<div id=\"remote\" style=\"float: left; margin-left: 4em;\">\r\n	<fieldset class=\"combo_fieldset\">\r\n		<legend class=\"combo_legend\">Remoto</legend>\r\n		\r\n		<input type=\"hidden\" id=\"hiddenAbueloRemoto\" name=\"provincia\" value=\"02\" />\r\n		<label for=\"comboAbueloRemoto\">Provincia</label>\r\n		<select id=\"comboAbueloRemoto\" name=\"provincia\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"comboPadreRemoto\">Comarca</label>\r\n		<select id=\"comboPadreRemoto\" name=\"comarca\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"comboHijoRemoto\">Localidad</label>\r\n		<select id=\"comboHijoRemoto\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n	</fieldset>\r\n</div>\r\n\r\n<div id=\"mixto\" style=\"float: left; margin-left: 4em;\">\r\n	<fieldset class=\"combo_fieldset\">\r\n		<legend class=\"combo_legend\">Mixto I</legend>\r\n		\r\n		<label for=\"mixto_comboAbueloRemoto\">Provincia (remoto)</label>\r\n		<select id=\"mixto_comboAbueloRemoto\" name=\"provincia\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"mixto_comboPadre\">Comarca (local)</label>\r\n		<select id=\"mixto_comboPadre\" name=\"comarca\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"mixto_comboHijoRemoto\">Localidad (remoto)</label>\r\n		<select id=\"mixto_comboHijoRemoto\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n	</fieldset>\r\n</div>\r\n\r\n<div id=\"mixto2\" style=\"float: left; margin-left: 4em; margin-bottom: 3em;\">\r\n	<fieldset class=\"combo_fieldset\">\r\n		<legend class=\"combo_legend\">Mixto II</legend>\r\n		\r\n		<label for=\"mixto2_comboAbuelo\">Provincia (local)</label>\r\n		<select id=\"mixto2_comboAbuelo\" name=\"provincia\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"mixto2_comboPadreRemoto\">Comarca (remoto)</label>\r\n		<select id=\"mixto2_comboPadreRemoto\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n		<label for=\"mixto2_comboHijo\">Localidad (local)</label>\r\n		<select id=\"mixto2_comboHijo\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n	</fieldset>\r\n</div>\r\n\r\n<div id=\"remoteGroup\" style=\"float: left; margin-left: 4em; margin-bottom: 3em;\">\r\n	<fieldset class=\"combo_fieldset\">\r\n		<legend class=\"combo_legend\">Remoto agrupado</legend>\r\n		\r\n<!-- 		<label for=\"mixto2_comboAbuelo\">Provincia (local)</label> -->\r\n<!-- 		<select id=\"mixto2_comboAbuelo\" name=\"provincia\" class=\"rup-combo\"><option>&nbsp;</option></select> -->\r\n<!-- 		<br><br> -->\r\n		<label for=\"remoteGroup_comboPadre\">Provincia</label>\r\n		<select id=\"remoteGroup_comboPadre\" class=\"rup-combo\" name=\"provincia\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		<label for=\"remoteGroup_comboHijo\">Comarca y Localidades</label>\r\n		<select id=\"remoteGroup_comboHijo\" class=\"rup-combo\"><option>&nbsp;</option></select>\r\n		<br><br>\r\n		\r\n	</fieldset>\r\n</div>";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboMultiseleccion"] = this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboMultiseleccion"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboMultiseleccion"]["comboMultiseleccionTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2><spring:message code=\"multicombo\" /></h2>\r\n\r\n<label for=\"multicombo\">Multicombo local</label><br>\r\n<select id=\"multicombo\"></select>\r\n<br><br>\r\n\r\n<label for=\"multicomboRemoto\">MultiCombo remoto</label><br>\r\n<select id=\"multicomboRemoto\"></select>\r\n<br><br>\r\n\r\n<label for=\"multicomboGrupos\">MultiCombo con 'optgroups'</label><br>\r\n<select id=\"multicomboGrupos\"></select>\r\n<br><br>\r\n\r\n<label for=\"multicomboGruposRemoto\">MultiCombo con 'optgroups' remoto</label><br>\r\n<select id=\"multicomboGruposRemoto\"></select>\r\n<br><br>\r\n\r\n<label for=\"multicomboInput\">MultiCombo sobre <strong>Input</strong></label><br>\r\n<input type=\"text\" name=\"multicomboInput\" id=\"multicomboInput\" value=\"coldfusion##python\" />\r\n<br><br>\r\n\r\n<label for=\"multicomboLoadFromSelect\">MultiCombo carga inicial desde <strong>HTML</strong></label><br>\r\n<select id=\"multicomboLoadFromSelect\">\r\n	<option value=\"1\">Alava</option>\r\n	<option value=\"3\">Gipuzcoa</option>\r\n	<option value=\"2\">Vizcaya</option>\r\n</select>\r\n<br><br>";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboSimple"] = this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboSimple"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboSimple"]["comboSimpleBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tooltip-view\">\r\n  <h3>Combo</h3>\r\n  <p>\r\n    Permite al usuario recuperar un elemento de una gran lista de elementos o de varias listas dependientes de forma sencilla y ocupando poco espacio en la interfaz.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboSimple"]["comboSimpleHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<select id=\"combo\" class=\"rup-combo\"></select>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboSimple"]["comboSimpleJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#combo\").rup_combo({\r\n  source : \"comboSimple/remote\",\r\n  sourceParam : {\r\n          label:\"desc\"+$.rup_utils.capitalizedLang(),\r\n          value:\"code\",\r\n          style:\"css\"},\r\n  selected: \"3\",\r\n  width: 300\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["combo"]["comboSimple"]["comboSimpleTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<h2>Combo</h2>\r\n\r\n<label for=\"combo\">Combo local</label>\r\n<select id=\"combo\" class=\"rup-combo\"></select>\r\n<br><br>\r\n\r\n<label for=\"comboRemoto\">Combo remoto</label>\r\n<select id=\"comboRemoto\" class=\"rup-combo\"></select>\r\n<br><br>\r\n\r\n<label for=\"comboLargo\">Combo con texto largo</label>\r\n<select id=\"comboLargo\" class=\"rup-combo\"></select>\r\n<br><br>\r\n\r\n<label for=\"comboGrupos\">Combo con 'optgroups'</label>\r\n<select id=\"comboGrupos\" class=\"rup-combo\"></select>\r\n<br><br>\r\n\r\n<label for=\"comboGruposRemoto\">Combo con 'optgroups' remoto</label>\r\n<select id=\"comboGruposRemoto\" class=\"rup-combo\"></select>\r\n<br><br>\r\n\r\n<label for=\"comboImgs\">Combo (no i18n) con imagenes</label>\r\n<select id=\"comboImgs\" class=\"rup-combo\"></select>\r\n<br><br>\r\n\r\n<label for=\"comboInput\">Combo sobre <strong>Input</strong></label>\r\n<input type=\"text\" name=\"comboInput\" id=\"comboInput\" value=\"python\" />\r\n<br><br>\r\n\r\n<label for=\"comboLoadFromSelect\">Combo carga inicial desde <strong>HTML</strong></label>\r\n<select id=\"comboLoadFromSelect\">\r\n	<option value=\"1\">Alava</option>\r\n	<option value=\"3\">Gipuzcoa</option>\r\n	<option value=\"2\">Vizcaya</option>\r\n</select>\r\n<br><br>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"] = this["App"]["Templates"]["demo"]["app"]["components"]["tree"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["dragDrop"] = this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["dragDrop"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["dragDrop"]["treeDragDropBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tooltip-view\">\r\n  <h3>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : {},"tree.treeDAD.title",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n  <p>\r\n  Ejemplo de configuración de árbol con arrastre de opciones.\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["dragDrop"]["treeDragDropCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "\r\n\r\n<div id=\"treeCodeDialog\" style=\"display:none\"></div>\r\n\r\n<div id=\"AccordionCode\" class=\"treeAccordionCode\">\r\n\r\n	<div id=\"reorderAccordionCode\" class=\"rup_accordion treeAccordionCodeObject\">\r\n\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.htmlCode",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				&lt;!-- Ãrbol con ordenaciÃ³n --&gt;<br/>\r\n				&lt;div id=\"tasksReorderTree\"&gt;&lt;/div&gt;<br/>\r\n			</code>\r\n		</div>\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.jsTreeCode",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				/* Ejemplo de arbol de tareas pendientes con reordenacion */<br/>\r\n				$(\"#tasksReorderTree\").rup_tree({<br/>\r\n				&nbsp;&nbsp;&nbsp;\"json_data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"data\": tasksTreeJson<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"types\" : tasksTreeTypes,<br/>\r\n				&nbsp;&nbsp;&nbsp;\"crrm\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"move\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"check_move\" : function (moveObject){<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var moveObjectParent = this._get_parent(moveObject.o);<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!moveObjectParent) return false;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;moveObjectParent = moveObjectParent == -1 ? this.get_container() : moveObjectParent;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(moveObjectParent === moveObject.np) return true;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(moveObjectParent[0] && moveObject.np[0] && moveObjectParent[0] === moveObject.np[0]) return true;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"dnd\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"enable\" : true,<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drop_target\" : false,<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drag_target\" : false<br/>\r\n				&nbsp;&nbsp;&nbsp;}<br/>\r\n				});<br/>\r\n			</code>\r\n		</div>\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.jsTreeData",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				/* Codigo JSon del Ã¡rbol de tareas */<br/>\r\n				var tasksTreeJson = [<br/>\r\n				&nbsp;&nbsp;&nbsp;{\"data\" : <br/>{\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"raiz\")<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"raiz\", \"rel\" : \"tasks\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informes\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informes\", \"rel\" : \"forms\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_trimestral\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_gastos_generales\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_desperfectos\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_deudas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_calidad\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_perdidas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"transportes\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"transportes\", \"rel\" : \"Transportation\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"pedido_lujua\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"pedido_lujua\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"pedido_cemento\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"pedido_cemento\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"pedido_martillo\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"pedido_martillo\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparaciones\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparaciones\", \"rel\" : \"repair\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparacion_fachada\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparacion_fachada\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparacion_indundacion\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparacion_indundacion\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparacion_suelo\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparacion_suelo\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparacion_ratas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparacion_ratas\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"suministros\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"suministros\", \"rel\" : \"suppliers\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_ladrillos\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_ladrillos\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_clavos\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_clavos\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_cemento\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_cemento\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_recambios\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_recambios\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_jabon\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_jabon\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_botas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_botas\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_cascos\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_cascos\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"facturas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"facturas\", \"rel\" : \"invoice\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"factura_VH\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"factura_VH\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"factura_Lindo\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"factura_Lindo\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"factura_devolucion\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"factura_devolucion\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"factura_OM\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"factura_OM\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]}<br/>\r\n				&nbsp;&nbsp;&nbsp;]},<br/>\r\n				];<br/>\r\n			</code>\r\n		</div>\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.jsTypesCode",{"name":"i18n","hash":{},"data":data}))
    + " </a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				/* Tipos para la gestiÃ³n de tareas */<br/>\r\n				var tasksTreeTypes = {<br/>\r\n				&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"tasks\"],<br/>\r\n				&nbsp;&nbsp;&nbsp;\"types\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"tasks\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/PendingWorks.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"forms\", \"invoice\", \"repair\", \"suppliers\", \"Transportation\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"forms\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/forms.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"invoice\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/invoice.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"repair\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/repair.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"job\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/job.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"none\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"suppliers\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/suppliers.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"Transportation\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/Transportation.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;}<br/>\r\n				};<br/>\r\n			</code>\r\n		</div>\r\n	</div>\r\n\r\n	<div id=\"exchangeAccordionCode\" class=\"rup_accordion treeAccordionCodeObject\">\r\n\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.htmlCode",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				&lt;!-- Ãrboles con intercambio --&gt;<br/>\r\n				&lt;legend class=\"treeNodesExchangePanel_legend\"&gt;&lt;spring:message code=\"tree.treeDAD.exchange\" /&gt;&lt;/legend&gt;<br/>\r\n				&lt;div class=\"treeNodesExchangePanel_left\"&gt;<br/>\r\n				&nbsp;&nbsp;&nbsp;&lt;div id=\"tasksTree\" class=\"ExchangePanel_tree\"&gt;&lt;/div&gt;<br/>\r\n				&lt;/div&gt;<br/>\r\n				&lt;div class=\"treeNodesExchangePanel_center\"&gt;<br/>\r\n				&nbsp;&nbsp;&nbsp;&lt;div class=\"treeNodesExchangePanel_center_line\"&gt;&lt;/div&gt;<br/>\r\n				&nbsp;&nbsp;&nbsp;&lt;img src=\"${staticsUrl}/x21a/images/twoWayArrows.png\" class=\"treeNodesExchangePanel_center_img\" alt=\"&lt;spring:message code=\"tree.treeDAD.Interchange\" /&gt;\"/&gt;<br/>\r\n				&lt;/div&gt;<br/>\r\n				&lt;div class=\"treeNodesExchangePanel_right\"&gt;<br/>\r\n				&nbsp;&nbsp;&nbsp;&lt;div id=\"workersTree\" class=\"ExchangePanel_tree\"&gt;&lt;/div&gt;<br/>\r\n				&lt;/div&gt;<br/>\r\n			</code>\r\n		</div>\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.jsTreeCode",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				/* Ejemplo de arboles con distribucion de tareas (D&D) */<br/>\r\n				$(\"#tasksTree\").rup_tree({<br/>\r\n				&nbsp;&nbsp;&nbsp;\"json_data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"data\": tasksTreeJson<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"crrm\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"move\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"check_move\" : function (moveObject) {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"types\" : tasksTreeTypes,<br/>\r\n				&nbsp;&nbsp;&nbsp;\"dnd\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"enable\" : true,<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drop_target\" : false,<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drag_target\" : false<br/>\r\n				&nbsp;&nbsp;&nbsp;}<br/>\r\n				});<br/>\r\n				<br/>\r\n				$(\"#workersTree\").rup_tree({<br/>\r\n				&nbsp;&nbsp;&nbsp;\"json_data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"data\": workersTreeJson<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"crrm\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"move\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"check_move\" : function (moveObject) {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var moveObjectParent = moveObject.op;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(moveObject.op.parents(\"#tasksTree\").length > 0){<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"types\" : workersTreeTypes,<br/>\r\n				&nbsp;&nbsp;&nbsp;\"dnd\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"enable\" : true,<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drop_target\" : false,<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drag_target\" : false<br/>\r\n				&nbsp;&nbsp;&nbsp;}<br/>\r\n				});<br/>\r\n				<br/>\r\n				/* Gestion del panel visual */<br/>\r\n				var treeNodesExchangePanelPosition = $(\"#treeNodesExchangePanel\").position();<br/>\r\n				$(\".treeNodesExchangePanel_center_img\").css(\"top\",treeNodesExchangePanelPosition.top+(($(\"#treeNodesExchangePanel\").height())/2)-(($(\".treeNodesExchangePanel_center_img\").height())/2))<br/>\r\n				&nbsp;&nbsp;&nbsp;.css(\"left\",treeNodesExchangePanelPosition.left+(($(\"#treeNodesExchangePanel\").width())/2)-(($(\".treeNodesExchangePanel_center_img\").width())/2));<br/>\r\n				$(\".treeNodesExchangePanel_center\").css(\"visibility\", \"visible\");<br/>\r\n				$(\".treeNodesExchangePanel_center_img\").bind(\"click\", function(){<br/>\r\n				&nbsp;&nbsp;&nbsp;$.rup_messages(\"msgError\", {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title: $.rup.i18nParse($.rup.i18n.app[\"treeNodesExchangePanel_center\"],\"errorOp\"),<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message: $.rup.i18nParse($.rup.i18n.app[\"treeNodesExchangePanel_center\"],\"funtError\")<br/>\r\n				&nbsp;&nbsp;&nbsp;});<br/>\r\n				});<br/>\r\n			</code>\r\n		</div>\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.jsTreeData",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				/* Codigo JSon del Ã¡rbol de tareas */<br/>\r\n				var tasksTreeJson = [<br/>\r\n				&nbsp;&nbsp;&nbsp;{\"data\" : <br/>{\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"raiz\")<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"raiz\", \"rel\" : \"tasks\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informes\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informes\", \"rel\" : \"forms\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_trimestral\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_gastos_generales\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_desperfectos\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_deudas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_calidad\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"informe_perdidas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"informe_trimestral\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"transportes\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"transportes\", \"rel\" : \"Transportation\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"pedido_lujua\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"pedido_lujua\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"pedido_cemento\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"pedido_cemento\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"pedido_martillo\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"pedido_martillo\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparaciones\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparaciones\", \"rel\" : \"repair\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparacion_fachada\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparacion_fachada\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparacion_indundacion\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparacion_indundacion\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparacion_suelo\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparacion_suelo\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"reparacion_ratas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"reparacion_ratas\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"suministros\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"suministros\", \"rel\" : \"suppliers\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_ladrillos\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_ladrillos\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_clavos\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_clavos\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_cemento\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_cemento\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_recambios\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_recambios\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_jabon\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_jabon\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_botas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_botas\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"mp_cascos\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"mp_cascos\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"facturas\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"facturas\", \"rel\" : \"invoice\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"factura_VH\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"factura_VH\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"factura_Lindo\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"factura_Lindo\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"factura_devolucion\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"factura_devolucion\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"factura_OM\")<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"factura_OM\", \"rel\" : \"job\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]}<br/>\r\n				&nbsp;&nbsp;&nbsp;]},<br/>\r\n				];<br/>\r\n				<br/>\r\n				<br/>\r\n				/* Codigo JSon del Ã¡rbol de trabajadores */<br/>\r\n				var workersTreeJson = [<br/>\r\n			   	&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"workers\")<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"raiz\", \"rel\" : \"workers\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Abanca Rodrigez Silvia\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Almonzon Mendia Juan\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Alonso Ruiz Laura\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Gil Sandia Marta\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"JimÃ©nez Arriurtua Francisco\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Mantenimientos Jet\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"enterprise\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Matias S.L.\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"enterprise\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Montajes Loiu\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"enterprise\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Mortaro Filon Sara\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Ortiz Dulon Jose\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Padilla Alcantara Sergio\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Puertas y molduras Sanz\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"enterprise\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Randal Sweder Moly\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Ruiz de Santiesteban Pedro\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"SÃ¡nchez Rodin Pablo\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;]},<br/>\r\n				];<br/>\r\n			</code>\r\n		</div>\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.jsTypesCode",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				/* Tipos para la gestiÃ³n de tareas */<br/>\r\n				var tasksTreeTypes = {<br/>\r\n				&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"tasks\"],<br/>\r\n				&nbsp;&nbsp;&nbsp;\"types\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"tasks\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/PendingWorks.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"forms\", \"invoice\", \"repair\", \"suppliers\", \"Transportation\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"forms\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/forms.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"invoice\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/invoice.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"repair\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/repair.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"job\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/job.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"none\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"suppliers\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/suppliers.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"Transportation\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/Transportation.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;}<br/>\r\n				};<br/>\r\n				<br/>\r\n				<br/>\r\n				/* Tipos para la gestion de trabajadores */<br/>\r\n				var workersTreeTypes = {<br/>\r\n				&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"workers\"],<br/>\r\n				&nbsp;&nbsp;&nbsp;\"types\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"enterprise\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/enterprise.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"worker\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/worker.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"workers\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/workers.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"worker\", \"enterprise\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"job\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/job.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"none\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;}<br/>\r\n				};<br/>\r\n			</code>\r\n		</div>\r\n	</div>\r\n\r\n	<div id=\"promotionsDismissalsAccordionCode\" class=\"rup_accordion treeAccordionCodeObject\">\r\n\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.htmlCode",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<div class=\"\">\r\n				<code>\r\n					&lt;!-- Ãrbol con Drag&Drop a paneles --&gt;<br/>\r\n					&lt;div class=\"promotionsDismissalsExchangePanel\"&gt;<br/>\r\n					&lt;div class=\"promotionsDismissalsExchangePanel_left\"&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;div id=\"promotionsDismissalsTree\" class=\"promotionsDismissals_tree\"&gt;&lt;/div&gt;<br/>\r\n					&lt;/div&gt;<br/>\r\n					<br/>\r\n					&lt;div class=\"promotionsDismissalsExchangePanel_center\"&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;div class=\"promotionsDismissalsExchangePanel_center_line\"&gt;&lt;/div&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;div class=\"promotionsDismissalsExchangePanel_center_img_div\"&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=\"${staticsUrl}/x21a/images/rightArrow.png\" class=\"promotionsDismissalsExchangePanel_center_img\" alt=\"&lt;spring:message code=\"tree.treeDAD.rightDirec\" /&gt;\"/&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br/>\r\n					&lt;/div&gt;<br/>\r\n					<br/>\r\n					&lt;div class=\"promotionsDismissalsExchangePanel_right\"&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;div class=\"promotionsDismissalsActionPanel\"&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3 class=\"promotionsDismissalsDestiny\"&gt;&lt;spring:message code=\"tree.treeDAD.promotions\" /&gt;&lt;/h3&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul class=\"promotionsDismissalsActionPanel_list\"&gt;&lt;/ul&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;div class=\"promotionsDismissalsActionPanel_line\"&gt;&lt;/div&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;div class=\"promotionsDismissalsActionPanel promotionsDismissalsActionPanelCenter\"&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3 class=\"promotionsDismissalsDestiny\"&gt;&lt;spring:message code=\"tree.treeDAD.formation\" /&gt;&lt;/h3&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul class=\"promotionsDismissalsActionPanel_list\"&gt;&lt;/ul&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;div class=\"promotionsDismissalsActionPanel_line\"&gt;&lt;/div&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;div class=\"promotionsDismissalsActionPanel\"&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3 class=\"promotionsDismissalsDestiny\"&gt;&lt;spring:message code=\"tree.treeDAD.dismissals\" /&gt;&lt;/h3&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul class=\"promotionsDismissalsActionPanel_list\"&gt;&lt;/ul&gt;<br/>\r\n					&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br/>\r\n					&lt;/div&gt;<br/>\r\n				</code>\r\n			</div>\r\n		</div>\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.jsTreeCode",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				/* Ãrbol y cÃ³digo asociado a la gestiÃ³n de ascensos y despidos */<br/>\r\n				$(\"#promotionsDismissalsTree\").rup_tree({<br/>\r\n				&nbsp;&nbsp;&nbsp;\"json_data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"data\": workersDepartmentTreeJson<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"types\" : workersTreeTypes,<br/>\r\n				&nbsp;&nbsp;&nbsp;\"crrm\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"move\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"check_move\" : function (moveObject) {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var moveObjectParent = this._get_parent(moveObject.o);<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!moveObjectParent) return false;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;moveObjectParent = moveObjectParent == -1 ? this.get_container() : moveObjectParent;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(moveObjectParent === moveObject.np) return true;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(moveObjectParent[0] && moveObject.np[0] && moveObjectParent[0] === moveObject.np[0]) return true;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"sort\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"enable\" : true<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"dnd\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drop_check\" : function (data) {<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((!data.r.hasClass(\"promotionsDismissalsActionPanel_list\"))||(data.o.attr(\"rel\") !== \"worker\")) {<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after : false,<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;before : false,<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inside : true<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drop_finish\" : function (data) {<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data.r.append(data.o.clone());<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"enable\" : true,<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drag_target\" : false,<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"drop_target\" : \".promotionsDismissalsActionPanel_list\"<br/>\r\n				&nbsp;&nbsp;&nbsp;}<br/>\r\n				});<br/>\r\n			</code>\r\n		</div>\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.jsTreeData",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				/* Codigo JSon del Ã¡rbol de trabajadores */<br/>\r\n				var workersDepartmentTreeJson = [<br/>\r\n			   	&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"depAdmin\")<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"department\", \"rel\" : \"workers\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"state\" : \"open\",<br/>\r\n				&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Abanca Rodrigez Silvia\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Alonso Ruiz Laura\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Gil Sandia Marta\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"JimÃ©nez Arriurtua Francisco\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Padilla Alcantara Sergio\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"SÃ¡nchez Rodin Pablo\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"depClientes\")<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n			    &nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"department\", \"rel\" : \"workers\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"state\" : \"close\",<br/>\r\n				&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Alzola Urierate Leticia\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Aranguren Loinaz Jose\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Bermejo Solo Ana\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Garzon Alonso Luis\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Jerez Templado Bisball\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Noiz Sapuerta Gordi\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Ortiz Dulon Jose\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Prudencio Fratan Armand\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Ruiz de Santiesteban Pedro\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"depReparaciones\")<br/>\r\n				&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"department\", \"rel\" : \"workers\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"state\" : \"close\",<br/>\r\n				&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Anemo MuÃ±oz Jon\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Almonzon Mendia Juan\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Bornaz Satrustegui Armando\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Muleto Delito Afelio\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Gaztedi Jobar Maria\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Zarate Oligarco Ramon\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n			  	&nbsp;&nbsp;&nbsp;]},<br/>\r\n				&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : $.rup.i18nParse($.rup.i18n.app[\"tasksTree\"],\"depSuministros\")<br/>\r\n			    &nbsp;&nbsp;&nbsp;},<br/>\r\n			    &nbsp;&nbsp;&nbsp;\"attr\" : { \"id\" : \"department\", \"rel\" : \"workers\"},<br/>\r\n				&nbsp;&nbsp;&nbsp;\"state\" : \"close\",<br/>\r\n				&nbsp;&nbsp;&nbsp;\"children\" : [<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Eredia Puyol Maider\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Montero Rucio Luis\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n			  	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Perez Mendia Jone\"<br/>\r\n			  	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n			    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"data\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\" : \"Puertas y molduras Sanz\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"attr\" : {\"rel\" : \"worker\"}<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n			    &nbsp;&nbsp;&nbsp;]}<br/>\r\n				];<br/>\r\n			</code>\r\n		</div>\r\n		<h1><a>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.code.jsTypesCode",{"name":"i18n","hash":{},"data":data}))
    + "</a></h1>\r\n		<div class=\"treeAccordionCodeSecction\">\r\n			<code>\r\n				/* Tipos para la gestion de trabajadores */<br/>\r\n				var workersTreeTypes = {<br/>\r\n				&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"workers\"],<br/>\r\n				&nbsp;&nbsp;&nbsp;\"types\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"enterprise\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/enterprise.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"worker\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/worker.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"job\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"workers\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/workers.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"worker\", \"enterprise\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"job\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"icon\" : {<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"image\" : $.rup.STATICS+\"/x21a/images/job.png\"<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"valid_children\" : [\"none\"]<br/>\r\n				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\r\n				&nbsp;&nbsp;&nbsp;}<br/>\r\n				};<br/>\r\n			</code>\r\n		</div>\r\n	</div>\r\n\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["dragDrop"]["treeDragDropHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"nombre\" name=\"nombre\" title=\"Introduzca su nombre.\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["dragDrop"]["treeDragDropJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"[title]\").rup_tooltip();\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["dragDrop"]["treeDragDropLayoutTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"container-fluid\">\r\n  <section>\r\n    <div id=\"componentMainBody\">\r\n    </div>\r\n    <div id=\"componentCode\">\r\n    </div>\r\n    <div id=\"componentTest\">\r\n\r\n    </div>\r\n\r\n  </section>\r\n\r\n<!--<section>\r\n    <h4>Código</h4>\r\n\r\n    <div id=\"exampleCode\">\r\n\r\n    </div>\r\n  </section>-->\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["dragDrop"]["treeDragDropTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<section>\r\n\r\n<div id=\"treeCodeDialog\" style=\"display:none\"></div>\r\n\r\n<!-- Ãrbol con ordenaciÃ³n -->\r\n<fieldset id=\"treeAreaExchangePanel\" class=\"treeAreaExchangePanel\">\r\n	<legend class=\"treeAreaExchangePanel_legend\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.reorder",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n	<div id=\"tasksReorderTree\" class=\"ExchangePanel_tree\"></div>\r\n	<div id=\"tasksReorderTreeUniqueControl\" class=\"DADcontrolsMainCode\">\r\n		<button id=\"btnReorderTreeUniqueControl\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n	</div>\r\n</fieldset>\r\n\r\n<!-- Ãrboles con intercambio -->\r\n<fieldset id=\"treeNodesExchangePanel\" class=\"treeNodesExchangePanel\">\r\n	<legend class=\"treeNodesExchangePanel_legend\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.exchange",{"name":"i18n","hash":{},"data":data}))
    + "</legend>\r\n<div>\r\n	<div class=\"enLinea panelLeftWorkers\">\r\n		<div id=\"tasksTree\" class=\"ExchangePanel_tree\"></div>\r\n\r\n	</div>\r\n	<!--<div class=\"enLinea\">\r\n		<div class=\"widthCentral\"></div>\r\n		<img src=\"/demoResponsive/images/arbol/twoWayArrows.png\" class=\"treeNodesExchangePanel_center_img\" alt=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.Interchange",{"name":"i18n","hash":{},"data":data}))
    + "\"/>\r\n		<div  class=\"DADcontrolsMainCode\"></div>\r\n	</div>-->\r\n	<div class=\"enLinea panelRightWorkers\">\r\n		<div id=\"workersTree\" class=\"ExchangePanel_tree\"></div>\r\n	</div>\r\n</div>\r\n<div id=\"tasksExchangeTreeUniqueControl\" class=\"DADcontrolsMainCode\">\r\n	<button id=\"btnExchangeTreeUniqueControl\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n</div>\r\n</fieldset>\r\n\r\n<fieldset id=\"treeNodeAreaExchangePanel\" class=\"treeNodeAreaExchangePanel\">\r\n	<legend class=\"treePromotionsDismissalsPanel_legend\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.exchange",{"name":"i18n","hash":{},"data":data}))
    + " </legend>\r\n	<div class=\"promotionsDismissalsExchangePanel\">\r\n		<div class=\"promotionsDismissalsExchangePanel_left\">\r\n			<div id=\"promotionsDismissalsTree\" class=\"promotionsDismissals_tree\"></div>\r\n		</div>\r\n		<div class=\"promotionsDismissalsExchangePanel_center\">\r\n			<div class=\"promotionsDismissalsExchangePanel_center_line\"></div>\r\n			<div class=\"promotionsDismissalsExchangePanel_center_img_div\">\r\n				<img src=\"/demoResponsive/images/arbol/rightArrow.png\" class=\"promotionsDismissalsExchangePanel_center_img\" alt=\""
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.rightDirec",{"name":"i18n","hash":{},"data":data}))
    + "\"/>\r\n			</div>\r\n		</div>\r\n		<div class=\"promotionsDismissalsExchangePanel_right\">\r\n			<div class=\"promotionsDismissalsActionPanel\">\r\n				<h3 class=\"promotionsDismissalsDestiny\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.promotions",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<ul class=\"promotionsDismissalsActionPanel_list\"></ul>\r\n			</div>\r\n			<div class=\"promotionsDismissalsActionPanel_line\"></div>\r\n			<div class=\"promotionsDismissalsActionPanel promotionsDismissalsActionPanelCenter\">\r\n				<h3 class=\"promotionsDismissalsDestiny\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.formation",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<ul class=\"promotionsDismissalsActionPanel_list\"></ul>\r\n			</div>\r\n			<div class=\"promotionsDismissalsActionPanel_line\"></div>\r\n			<div class=\"promotionsDismissalsActionPanel\">\r\n				<h3 class=\"promotionsDismissalsDestiny\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.treeDAD.dismissals",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n				<ul class=\"promotionsDismissalsActionPanel_list\"></ul>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div id=\"tasksPromotionsDismissalsUniqueControl\" class=\"DADcontrolsMainCode PromotionsDismissalsMainCode\">\r\n		<button id=\"btnPromotionsDismissalsUniqueControl\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n	</div>\r\n</fieldset>\r\n</section>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["examples"] = this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["examples"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["examples"]["_treeTestExample"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<ul>\r\n  <li id=\"node1\">\r\n    <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo1",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n    <ul>\r\n      <li id=\"node11\">\r\n        <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo2",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n        <ul>\r\n          <li id=\"node111\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n          </li>\r\n          <li id=\"node112\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo3",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n            <ul>\r\n              <li id=\"node1121\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li id=\"node113\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo3",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n            <ul>\r\n              <li id=\"node1131\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n              <li id=\"node1132\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li id=\"node12\">\r\n        <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo2",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n        <ul>\r\n          <li id=\"node121\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo3",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n            <ul>\r\n              <li id=\"node1211\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n              <li id=\"node1212\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n              <li id=\"node1213\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n              <li id=\"node1214\">\r\n                <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li id=\"node122\">\r\n            <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li id=\"node13\">\r\n        <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n  <li id=\"node2\">\r\n    <a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n  </li>\r\n</ul>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["examples"]["treeBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"tooltip-view\">\r\n  <h3>"
    + container.escapeExpression((helpers.i18n || (depth0 && depth0.i18n) || helpers.helperMissing).call(depth0 != null ? depth0 : {},"tree.example.tittle",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n  <p>\r\n    \r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["examples"]["treeHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"nombre\" name=\"nombre\" title=\"Introduzca su nombre.\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["examples"]["treeJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"[title]\").rup_tooltip();\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["tree"]["examples"]["treeTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3=container.escapeExpression;

  return "<div id=\"treeCodeDialog\" style=\"display:none\">\r\n	<div id=\"htmlCode\" class=\"codePanel codePanelLeft\"></div>\r\n	<div id=\"javaScriptCode\" class=\"codePanel codePanelRight\"></div>\r\n</div>\r\n\r\n<div id=\"tree_example\" class=\"tree_example_code\">\r\n	<ul>\r\n		<li id=\"node1\">\r\n			<a href=\"#\">Padre 1</a>\r\n			<ul>\r\n				<li id=\"node11\">\r\n					<a href=\"#\">Padre 1.1</a>\r\n					<ul>\r\n						<li id=\"node111\">\r\n							<a href=\"#\">Hoja 1.1.1</a>\r\n						</li>\r\n						<li id=\"node112\">\r\n							<a href=\"#\">Padre 1.1.2</a>\r\n							<ul>\r\n								<li id=\"node1121\">\r\n									<a href=\"#\">Hoja 1.1.2.1</a>\r\n								</li>\r\n								<li id=\"node1122\">\r\n									<a href=\"#\">Hoja 1.1.2.2</a>\r\n								</li>\r\n							</ul>\r\n						</li>\r\n					</ul>\r\n				</li>\r\n				<li id=\"node12\">\r\n					<a href=\"#\">Hoja 1.2></a>\r\n				</li>\r\n			</ul>\r\n		</li>\r\n	</ul>\r\n</div>\r\n\r\n<div id=\"model_example_1\" class=\"model_example_1_code\">\r\n	{<ul>\r\n		<li id=\"node1\">\r\n			<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo1",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n			<ul>\r\n				<li id=\"node11\">\r\n					<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo2",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n					<ul>\r\n						<li id=\"node111\">\r\n							<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n						</li>\r\n						<li id=\"node112\">\r\n							<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo3",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n							<ul>\r\n								<li id=\"node1121\">\r\n									<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n								</li>\r\n							</ul>\r\n						</li>\r\n						<li id=\"node113\">\r\n							<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo3",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n							<ul>\r\n								<li id=\"node1131\">\r\n									<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n								</li>\r\n								<li id=\"node1132\">\r\n									<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n								</li>\r\n							</ul>\r\n						</li>\r\n					</ul>\r\n				</li>\r\n				<li id=\"node12\">\r\n					<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo2",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n					<ul>\r\n						<li id=\"node121\">\r\n							<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.Hijo3",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n							<ul>\r\n								<li id=\"node1211\">\r\n									<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n								</li>\r\n								<li id=\"node1212\">\r\n									<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n								</li>\r\n								<li id=\"node1213\">\r\n									<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n								</li>\r\n								<li id=\"node1214\">\r\n									<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n								</li>\r\n							</ul>\r\n						</li>\r\n						<li id=\"node122\">\r\n							<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n						</li>\r\n					</ul>\r\n				</li>\r\n				<li id=\"node13\">\r\n					<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n				</li>\r\n			</ul>\r\n		</li>\r\n		<li id=\"node2\">\r\n			<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.hoja",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n		</li>\r\n	</ul>}\r\n</div>\r\n\r\n<div id=\"model_example_2\" class=\"model_example_2_code\">\r\n	<ul>\r\n		<li id=\"nodeA\">\r\n			<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoA",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n			<ul>\r\n				<li id=\"nodeAA\">\r\n					<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoA",{"name":"i18n","hash":{},"data":data}))
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoA",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n				</li>\r\n				<li id=\"nodeAB\">\r\n					<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoA",{"name":"i18n","hash":{},"data":data}))
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoB",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n				</li>\r\n				<li id=\"nodeAC\">\r\n					<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoA",{"name":"i18n","hash":{},"data":data}))
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoC",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n					<ul>\r\n						<li id=\"nodeACA\">\r\n							<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoA",{"name":"i18n","hash":{},"data":data}))
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoC",{"name":"i18n","hash":{},"data":data}))
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoA",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n						</li>\r\n						<li id=\"nodeACB\">\r\n							<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoA",{"name":"i18n","hash":{},"data":data}))
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoC",{"name":"i18n","hash":{},"data":data}))
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoB",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n						</li>\r\n					</ul>\r\n				</li>\r\n			</ul>\r\n		</li>\r\n		<li id=\"nodeB\">\r\n			<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoB",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n		</li>\r\n		<li id=\"nodeC\">\r\n			<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoC",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n			<ul>\r\n				<li id=\"nodeCA\">\r\n					<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoC",{"name":"i18n","hash":{},"data":data}))
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoA",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n				</li>\r\n				<li id=\"nodeCB\">\r\n					<a href=\"#\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoC",{"name":"i18n","hash":{},"data":data}))
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.HijoB",{"name":"i18n","hash":{},"data":data}))
    + "</a>\r\n				</li>\r\n			</ul>\r\n		</li>\r\n	</ul>\r\n</div>\r\n<section class=\"row\">\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.default",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"defaultDemo\" class=\"rup_tree model_example_1\"></div>\r\n			<div id=\"codeDefaultControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnDefaultDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.specificStyle",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"specificStyleDemo\" class=\"rup_tree model_example_1\"></div>\r\n			<div id=\"codeSpecificStyleControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnSpecificStyleDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.changeView",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"changeViewDemo\" class=\"rup_tree model_example_1_button\"></div>\r\n\r\n			<div id=\"changeViewExampleControl\" class=\"controlsMainExample\">\r\n				<button id=\"toggle_dots\"  style=\"width: 32%\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.dots",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n				<button id=\"toggle_icons\" style=\"width: 32%\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.icons",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n				<button id=\"changeTheme\" style=\"width: 32%\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.theme",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n\r\n			<div id=\"codeChangeViewControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnChangeViewDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.jqueryuiStyles",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"jqueryuiStylesDemo\" class=\"rup_tree model_example_1_jqueryui\"></div>\r\n\r\n			<div id=\"jqueryuiStylesViewControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnJqueryuiStylesDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n</section>\r\n<section class=\"row\">\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.select",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"selectDemo\" class=\"rup_tree model_example_1_button\"></div>\r\n\r\n			<div id=\"selectExampleControl\" class=\"controlsMainExample\">\r\n				<button id=\"saveSelection\"  style=\"width: 32%\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.save",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n				<button id=\"loadSelection\" style=\"width: 32%\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.load",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n				<button id=\"deselectAll\" style=\"width: 32%\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.deselect",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n			<div id=\"codeSelectControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnSelectDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.hotkeys",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"hotkeysDemo\" class=\"rup_tree model_example_1_button\"></div>\r\n\r\n			<div id=\"hotkeysExampleControl\" class=\"controlsMainExample\">\r\n				<button id=\"enableHotkeys\"  style=\"width: 49%\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.enable",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n				<button id=\"disableHotkeys\" style=\"width: 49%\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.disable",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n\r\n			<div id=\"codeHotkeysControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnHotkeysDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.sort",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"sortDemo\" class=\"rup_tree model_example_1_button\"></div>\r\n\r\n			<div id=\"sortExampleControl\" class=\"controlsMainExample\">\r\n				<button id=\"renameButton\"  style=\"width: 50%; text-align: center;\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.rename",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n				<label>"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.renameKey",{"name":"i18n","hash":{},"data":data}))
    + "</label>\r\n			</div>\r\n\r\n			<div id=\"codeSortControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnSortDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.checkbox",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"checkboxDemo\" class=\"rup_tree model_example_1_button\"></div>\r\n\r\n			<div id=\"checkboxExampleControl\" class=\"controlsMainExample\">\r\n				<button id=\"checkboxShowHide\" style=\"width: 35%\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.showHide",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n				<button id=\"checkboxCheckAll\"  style=\"width: 31%; white-space: nowrap;\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.checkAll",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n				<button id=\"checkboxUncheckAll\" style=\"width: 31%; white-space: nowrap;\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.unCheckAll",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n\r\n			<div id=\"codeCheckboxControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnCheckboxDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n</section>\r\n<section class=\"row\">\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.contextmenu",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"contextmenuDemo\" class=\"rup_tree model_example_1\"></div>\r\n\r\n			<div id=\"codeContextmenuControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnContextmenuDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.unique",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"uniqueDemo\" class=\"rup_tree model_example_1_button\"></div>\r\n\r\n			<div id=\"uniqueExampleControl\" class=\"controlsMainExample\">\r\n				<button id=\"uniqueRenameButton\"  style=\"width: 49%; text-align: center;\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.rename",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n				<button id=\"uniqueNewButton\"  style=\"width: 49%; text-align: center;\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"treeExample.new",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n\r\n			<div id=\"uniqueControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnUniqueDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.json",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"jsonTreeDemo\" class=\"rup_tree model_example_1\"></div>\r\n\r\n			<div id=\"codeJsonTreeControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnJsonTreeDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n\r\n		<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n			<div class=\"butstyle\">\r\n			<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.xml",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n			<div id=\"xmlTreeDemo\" class=\"xml_tree model_example_1\"></div>\r\n\r\n			<div id=\"codeXmlTreeControl\" class=\"controlsMainCode\">\r\n				<button id=\"btnXmlTreeDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n</section>\r\n<section class=\"row\">\r\n	<div class=\"col-xl-3  col-xs-12  col-sm-4\">\r\n		<div class=\"butstyle\">\r\n		<h3 class=\"rup_tree_h3\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.example.ajax",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\r\n		<div id=\"ajaxTreeDemo\" class=\"ajax_tree model_example_1\"></div>\r\n\r\n		<div id=\"codeAjaxTreeControl\" class=\"controlsMainCode\">\r\n			<button id=\"btnAjaxTreeDemo\">"
    + alias3((helpers.i18n || (depth0 && depth0.i18n) || alias2).call(alias1,"tree.verCodigo.boton",{"name":"i18n","hash":{},"data":data}))
    + "</button>\r\n		</div>\r\n	</div>\r\n	</div>\r\n</section>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"] = this["App"]["Templates"]["demo"]["app"]["components"]["wizard"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["dynamic"] = this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["dynamic"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["dynamic"]["wizardDynamicBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"slider-view\">\r\n  <h3>Hora</h3>\r\n  <p>\r\n    El usuario puede introducir y seleccionar una hora tanto de forma manual como visual, moviéndose fácilmente por las horas y los minutos, recibiendo ayudas y sugerencias para minimizar las posibilidades de introducir una hora incorrecta.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["dynamic"]["wizardDynamicHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"hora\" type=\"text\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["dynamic"]["wizardDynamicJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#hora\").rup_time({\r\n  labelMaskId : \"hora-mask\",\r\n  showSecond : true,\r\n  timeFormat: 'hh:mm:ss',\r\n  showButtonPanel: true\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["dynamic"]["wizardDynamicTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"feedbackErroresValidaciones\"></div>\r\n\r\n<div id=\"wizard_options\">\r\n	<fieldset>\r\n		<legend style=\"float: left;\">Generar resumen: </legend>\r\n		<input type=\"radio\" name=\"summary\" value=\"true\" id=\"radio_summary_yes\" checked=\"checked\"/> <label for=\"radio_summary_yes\">SÃ­</label>\r\n		<input type=\"radio\" name=\"summary\" value=\"false\" id=\"radio_summary_no\"/> <label for=\"radio_summary_no\">No</label> <br/><br/>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend style=\"float: left;\">Resumen con 'accordion': </legend>\r\n		<input type=\"radio\" name=\"accordion\" value=\"true\" id=\"radio_accordion_yes\" checked=\"checked\"/> <label for=\"radio_accordion_yes\">SÃ­</label>\r\n		<input type=\"radio\" name=\"accordion\" value=\"false\" id=\"radio_accordion_no\"/> <label for=\"radio_accordion_no\">No</label> <br/><br/>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend style=\"float: left;\">PestaÃ±as convertidas a 'accordion': </legend>\r\n		<input type=\"radio\" name=\"tabs2accordion\" value=\"true\" id=\"radio_tab2accordion_yes\" checked=\"checked\"/> <label for=\"radio_tab2accordion_yes\">SÃ­</label>\r\n		<input type=\"radio\" name=\"tabs2accordion\" value=\"false\" id=\"radio_tab2accordion_no\"/> <label for=\"radio_tab2accordion_no\">No</label> <br/><br/>\r\n		<input type=\"button\" id=\"makeWizard\" value=\"Convertir formulario en Wizard\" /> <br/><br/>\r\n	</fieldset>\r\n</div>\r\n\r\n<form id=\"wizardForm\">\r\n	<fieldset>\r\n		<legend class=\"wizardLegend\">Datos de la cuenta</legend>\r\n		<label for=\"username\">Usuario</label> <input id=\"username\" name=\"username\" type=\"text\" /> <br/><br/>\r\n		<label for=\"password\">Password</label> <input id=\"password\" name=\"password\" type=\"password\" /> <br/><br/>\r\n		<label for=\"ejie\">Ejie</label>\r\n			<select id=\"ejie\">\r\n				<option value=\"0\" selected=\"selected\">No</option>\r\n				<option value=\"1\">SÃ­</option>\r\n			</select>\r\n		<br/><br/>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend class=\"wizardLegend\">Deshabilitado</legend>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend class=\"wizardLegend\">Datos del trabajador</legend>\r\n		<div id=\"tabs\"></div>\r\n		<div id=\"empleado\" style=\"display: none;\">\r\n			<input type=\"radio\" name=\"group1\" value=\"hombre\" id=\"radio_hombre\" checked=\"checked\"/> <label for=\"radio_hombre\">Hombre</label>\r\n			<input type=\"radio\" name=\"group1\" value=\"mujer\" id=\"radio_mujer\"/> <label for=\"radio_mujer\">Mujer</label> <br/><br/>\r\n			<label for=\"nombre\">Nombre</label> <input id=\"nombre\" name=\"nombre\" type=\"text\" /> <br/><br/>\r\n			<label for=\"apellido\">Apellido</label> <input id=\"apellido\" name=\"apellido\" type=\"text\" /> <br/><br/>\r\n			<label for=\"provincia\">DelegaciÃ³n</label> <select id=\"provincia\" name=\"provincia\" class=\"rup-combo\"></select>\r\n		</div>\r\n		<div id=\"empresa_datos\" style=\"display: none;\">\r\n			<label for=\"empresa_nombre\">Nombre</label> <input id=\"empresa_nombre\" name=\"empresa_nombre\" type=\"text\" /> <br/><br/>\r\n			<label for=\"empresa_web\">Website</label> <input id=\"empresa_web\" name=\"empresa_web\" type=\"text\" />  <br/><br/>\r\n			<label for=\"empresa_email\">E-mail</label> <input id=\"empresa_email\" name=\"empresa_email\" type=\"text\" /> <br/><br/>\r\n		</div>\r\n		<div id=\"empresa_araba\" style=\"display: none;\">\r\n			<label for=\"direccion_araba\">DirecciÃ³n</label> <input id=\"direccion_araba\" name=\"direccion_araba\" type=\"text\" /> <br/><br/>\r\n			<label for=\"telefono_araba\">TelÃ©fono</label> <input id=\"telefono_araba\" name=\"telefono_araba\" type=\"text\" /> <br/><br/>\r\n		</div>\r\n		<div id=\"empresa_bizkaia\" style=\"display: none;\">\r\n			<label for=\"direccion_bizkaia\">DirecciÃ³n</label> <input id=\"direccion_bizkaia\" name=\"direccion_bizkaia\"  type=\"text\" /> <br/><br/>\r\n			<label for=\"telefono_bizkaia\">TelÃ©fono</label> <input id=\"telefono_bizkaia\" name=\"telefono_bizkaia\" type=\"text\" /> <br/><br/>\r\n		</div>\r\n		<div id=\"empresa_gipuzkoa\" style=\"display: none;\">\r\n			<label for=\"direccion_gipuzkoa\">DirecciÃ³n</label> <input id=\"direccion_gipuzkoa\" name=\"direccion_gipuzkoa\"  type=\"text\" /> <br/><br/>\r\n			<label for=\"telefono_gipuzkoa\">TelÃ©fono</label> <input id=\"telefono_gipuzkoa\" name=\"telefono_gipuzkoa\" type=\"text\" /> <br/><br/>\r\n		</div>\r\n		<div id=\"otros_datos\" style=\"display: none;\">\r\n			<label for=\"aficiones\">Aficiones</label><br/><br/>\r\n			<textarea id=\"aficiones\" name=\"aficiones\" cols=\"150\" rows=\"10\"></textarea>\r\n		</div>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend class=\"wizardLegend\">Plan de trabajo</legend>\r\n		<label for=\"desde\">Fecha desde</label><label for=\"desde\" id=\"intervalo-mask\"/></label>: <input type=\"text\" id=\"desde\" name=\"desde\"/>\r\n		<label for=\"hasta\">hasta: </label><input type=\"text\" id=\"hasta\" name=\"hasta\"/>\r\n		<br/><br/>\r\n		<label for=\"hora_entrada\">Horario desde</label><label for=\"hora_entrada\" id=\"hora-mask\"></label>: <input id=\"hora_entrada\" name=\"hora_entrada\" type=\"text\"/>\r\n		<label for=\"hora_entrada\">hasta: </label><input id=\"hora_salida\" name=\"hora_salida\" type=\"text\"/>\r\n		<br/><br/>\r\n		<label for=\"dias\">DÃ­as de trabajo</label>\r\n		<select id=\"dias\"></select>\r\n		<br/><br/>\r\n		<label for=\"cliente\">Meses de trabajo en cliente</label>\r\n		<select id=\"cliente\"></select>\r\n		<br/><br/>\r\n		<div id=\"meses\">\r\n			<h1><a>Jornada reducida</a></h1>\r\n			<div>\r\n				<div style=\"float:left; margin-left: 1em;\">\r\n					<input type=\"checkbox\" name=\"mes_enero\" value=\"0\"/><label for=\"mes_enero\"> Enero</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_febrero\" value=\"1\"/><label for=\"mes_febrero\"> Febrero</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_marzo\" value=\"2\"/><label for=\"mes_marzo\"> Marzo</label><br/>\r\n				</div>\r\n				<div style=\"float:left; margin-left: 6em;\">\r\n					<input type=\"checkbox\" name=\"mes_abril\" value=\"3\"/><label for=\"mes_abril\"> Abril</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_mayo\" value=\"4\"/><label for=\"mes_mayo\"> Mayo</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_junio\" value=\"5\"/><label for=\"mes_junio\"> Junio</label><br/>\r\n				</div>\r\n				<div style=\"float:left; margin-left: 6em;\">\r\n					<input type=\"checkbox\" name=\"mes_julio\" value=\"6\"/><label for=\"mes_julio\"> Julio</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_agosto\" value=\"7\"/><label for=\"mes_agosto\"> Agosto</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_septiembre\" value=\"8\"/><label for=\"mes_septiembre\"> Septiembre</label><br/>\r\n				</div>\r\n				<div style=\"float:left; margin-left: 6em;\">\r\n					<input type=\"checkbox\" name=\"mes_octubre\" value=\"9\"/><label for=\"mes_octubre\"> Octubre</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_noviembre\" value=\"10\"/><label for=\"mes_noviembre\"> Noviembre</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_diciembre\" value=\"11\"/><label for=\"mes_diciembre\"> Diciembre</label><br/>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<br/><br/>\r\n	</fieldset>\r\n	<br/>\r\n	<!-- <input id=\"saveForm\" type=\"button\" value=\"Enviar\" /> -->\r\n	<!-- <input id=\"saveForm\" type=\"button\" value=\"Enviar\" /> -->\r\n	<button id=\"saveForm\" type=\"button\"><span>Enviar</span></button>\r\n</form>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["simple"] = this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["simple"] || {};
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["simple"]["wizardSimpleBodyTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"slider-view\">\r\n  <h3>Hora</h3>\r\n  <p>\r\n    El usuario puede introducir y seleccionar una hora tanto de forma manual como visual, moviéndose fácilmente por las horas y los minutos, recibiendo ayudas y sugerencias para minimizar las posibilidades de introducir una hora incorrecta.\r\n  </p>\r\n</div>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["simple"]["wizardSimpleHtmlCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<input id=\"hora\" type=\"text\"/>\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["simple"]["wizardSimpleJsCodeTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "$(\"#hora\").rup_time({\r\n  labelMaskId : \"hora-mask\",\r\n  showSecond : true,\r\n  timeFormat: 'hh:mm:ss',\r\n  showButtonPanel: true\r\n});\r\n";
},"useData":true});
this["App"]["Templates"]["demo"]["app"]["components"]["wizard"]["simple"]["wizardSimpleTestTemplate"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div id=\"wizard_options\">\r\n	<fieldset>\r\n		<legend style=\"float: left;\">Generar resumen: </legend>\r\n		<input type=\"radio\" name=\"summary\" value=\"true\" id=\"radio_summary_yes\" checked=\"checked\"/> <label for=\"radio_summary_yes\">SÃ­</label>\r\n		<input type=\"radio\" name=\"summary\" value=\"false\" id=\"radio_summary_no\"/> <label for=\"radio_summary_no\">No</label> <br/><br/>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend style=\"float: left;\">Resumen con 'accordion': </legend>\r\n		<input type=\"radio\" name=\"accordion\" value=\"true\" id=\"radio_accordion_yes\" checked=\"checked\"/> <label for=\"radio_accordion_yes\">SÃ­</label>\r\n		<input type=\"radio\" name=\"accordion\" value=\"false\" id=\"radio_accordion_no\"/> <label for=\"radio_accordion_no\">No</label> <br/><br/>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend style=\"float: left;\">PestaÃ±as convertidas a 'accordion': </legend>\r\n		<input type=\"radio\" name=\"tabs2accordion\" value=\"true\" id=\"radio_tab2accordion_yes\" checked=\"checked\"/> <label for=\"radio_tab2accordion_yes\">SÃ­</label>\r\n		<input type=\"radio\" name=\"tabs2accordion\" value=\"false\" id=\"radio_tab2accordion_no\"/> <label for=\"radio_tab2accordion_no\">No</label> <br/><br/>\r\n		<input type=\"button\" id=\"makeWizard\" value=\"Convertir formulario en Wizard\" /> <br/><br/>\r\n	</fieldset>\r\n</div>\r\n\r\n<form id=\"wizardForm\">\r\n	<fieldset>\r\n		<legend class=\"wizardLegend\">Datos de la cuenta</legend>\r\n		<label for=\"username\">Usuario</label> <input id=\"username\" name=\"username\" type=\"text\" /> <br/><br/>\r\n		<label for=\"password\">Password</label> <input id=\"password\" name=\"password\" type=\"password\" /> <br/><br/>\r\n		<label for=\"ejie\">Ejie</label>\r\n			<select id=\"ejie\">\r\n				<option value=\"0\" selected=\"selected\">No</option>\r\n				<option value=\"1\">SÃ­</option>\r\n			</select>\r\n		<br/><br/>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend class=\"wizardLegend\">Deshabilitado</legend>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend class=\"wizardLegend\">Paso dinÃ¡mico</legend>\r\n	</fieldset>\r\n	<fieldset>\r\n		<legend class=\"wizardLegend\">Plan de trabajo</legend>\r\n		<label for=\"desde\">Fecha desde</label><label for=\"desde\" id=\"intervalo-mask\"/></label>: <input type=\"text\" id=\"desde\" name=\"desde\"/>\r\n		<label for=\"hasta\">hasta: </label><input type=\"text\" id=\"hasta\" name=\"hasta\"/>\r\n		<br/><br/>\r\n		<label for=\"hora_entrada\">Horario desde</label><label for=\"hora_entrada\" id=\"hora-mask\"></label>: <input id=\"hora_entrada\" name=\"hora_entrada\" type=\"text\"/>\r\n		<label for=\"hora_entrada\">hasta: </label><input id=\"hora_salida\" name=\"hora_salida\" type=\"text\"/>\r\n		<br/><br/>\r\n		<label for=\"dias\">DÃ­as de trabajo</label>\r\n		<select id=\"dias\"></select>\r\n		<br/><br/>\r\n		<label for=\"cliente\">Meses de trabajo en cliente</label>\r\n		<select id=\"cliente\"></select>\r\n		<br/><br/>\r\n		<div id=\"meses\">\r\n			<h1><a>Jornada reducida</a></h1>\r\n			<div>\r\n				<div style=\"float:left; margin-left: 1em;\">\r\n					<input type=\"checkbox\" name=\"mes_enero\" value=\"0\"/><label for=\"mes_enero\"> Enero</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_febrero\" value=\"1\"/><label for=\"mes_febrero\"> Febrero</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_marzo\" value=\"2\"/><label for=\"mes_marzo\"> Marzo</label><br/>\r\n				</div>\r\n				<div style=\"float:left; margin-left: 6em;\">\r\n					<input type=\"checkbox\" name=\"mes_abril\" value=\"3\"/><label for=\"mes_abril\"> Abril</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_mayo\" value=\"4\"/><label for=\"mes_mayo\"> Mayo</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_junio\" value=\"5\"/><label for=\"mes_junio\"> Junio</label><br/>\r\n				</div>\r\n				<div style=\"float:left; margin-left: 6em;\">\r\n					<input type=\"checkbox\" name=\"mes_julio\" value=\"6\"/><label for=\"mes_julio\"> Julio</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_agosto\" value=\"7\"/><label for=\"mes_agosto\"> Agosto</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_septiembre\" value=\"8\"/><label for=\"mes_septiembre\"> Septiembre</label><br/>\r\n				</div>\r\n				<div style=\"float:left; margin-left: 6em;\">\r\n					<input type=\"checkbox\" name=\"mes_octubre\" value=\"9\"/><label for=\"mes_octubre\"> Octubre</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_noviembre\" value=\"10\"/><label for=\"mes_noviembre\"> Noviembre</label><br/>\r\n					<input type=\"checkbox\" name=\"mes_diciembre\" value=\"11\"/><label for=\"mes_diciembre\"> Diciembre</label><br/>\r\n				</div>\r\n			</div>\r\n		</div>\r\n		<br/><br/>\r\n	</fieldset>\r\n	<br/>\r\n	<input id=\"saveForm\" type=\"button\" value=\"Enviar\" />\r\n</form>\r\n";
},"useData":true});  return this['App'];}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v1.12.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:17Z
 */

(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Support: Firefox 18+
// Can't be in strict mode, several libs including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
//"use strict";
var deletedIds = [];

var document = window.document;

var slice = deletedIds.slice;

var concat = deletedIds.concat;

var push = deletedIds.push;

var indexOf = deletedIds.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	version = "1.12.4",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1, IE<9
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: deletedIds.sort,
	splice: deletedIds.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var src, copyIsArray, copy, name, options, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type( obj ) === "array";
	},

	isWindow: function( obj ) {
		/* jshint eqeqeq: false */
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {

		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		var realStringObj = obj && obj.toString();
		return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	isPlainObject: function( obj ) {
		var key;

		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {

			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call( obj, "constructor" ) &&
				!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
				return false;
			}
		} catch ( e ) {

			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Support: IE<9
		// Handle iteration over inherited properties before own properties.
		if ( !support.ownFirst ) {
			for ( key in obj ) {
				return hasOwn.call( obj, key );
			}
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && jQuery.trim( data ) ) {

			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data ); // jscs:ignore requireDotNotation
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1, IE<9
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( indexOf ) {
				return indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {

				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		while ( j < len ) {
			first[ i++ ] = second[ j++ ];
		}

		// Support: IE<9
		// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)
		if ( len !== len ) {
			while ( second[ j ] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var args, proxy, tmp;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: function() {
		return +( new Date() );
	},

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

// JSHint would error on this code due to the Symbol not being defined in ES5.
// Defining this global in .jshintrc would create a danger of using the global
// unguarded in another place, it seems safer to just disable JSHint for these
// three lines.
/* jshint ignore: start */
if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = deletedIds[ Symbol.iterator ];
}
/* jshint ignore: end */

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: iOS 8.2 (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.1
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-10-17
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, nidselect, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
					while ( i-- ) {
						groups[i] = nidselect + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( (parent = document.defaultView) && parent.top !== parent ) {
		// Support: IE 11
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				return m ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( (oldCache = uniqueCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		} );

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( jQuery.inArray( elem, qualifier ) > -1 ) !== not;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i,
			ret = [],
			self = this,
			len = self.length;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// init accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt( 0 ) === "<" &&
				selector.charAt( selector.length - 1 ) === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {

						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[ 2 ] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[ 0 ] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof root.ready !== "undefined" ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter( function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

				// Always skip document fragments
				if ( cur.nodeType < 11 && ( pos ?
					pos.index( cur ) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector( cur, selectors ) ) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[ 0 ], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem, this );
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				ret = jQuery.uniqueSort( ret );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				ret = ret.reverse();
			}
		}

		return this.pushStack( ret );
	};
} );
var rnotwhite = ( /\S+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = true;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks( "memory" ) ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];

							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this === promise ? newDefer.promise() : this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add( function() {

					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 ||
				( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred.
			// If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );

					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.progress( updateFunc( i, progressContexts, progressValues ) )
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
} );


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {

	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
} );

/**
 * Clean-up method for dom ready events
 */
function detach() {
	if ( document.addEventListener ) {
		document.removeEventListener( "DOMContentLoaded", completed );
		window.removeEventListener( "load", completed );

	} else {
		document.detachEvent( "onreadystatechange", completed );
		window.detachEvent( "onload", completed );
	}
}

/**
 * The ready event handler and self cleanup method
 */
function completed() {

	// readyState === "complete" is good enough for us to call the dom ready in oldIE
	if ( document.addEventListener ||
		window.event.type === "load" ||
		document.readyState === "complete" ) {

		detach();
		jQuery.ready();
	}
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called
		// after the browser event has already occurred.
		// Support: IE6-10
		// Older IE sometimes signals "interactive" too soon
		if ( document.readyState === "complete" ||
			( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

			// Handle it asynchronously to allow scripts the opportunity to delay ready
			window.setTimeout( jQuery.ready );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed );

		// If IE event model is used
		} else {

			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", completed );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", completed );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch ( e ) {}

			if ( top && top.doScroll ) {
				( function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {

							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll( "left" );
						} catch ( e ) {
							return window.setTimeout( doScrollCheck, 50 );
						}

						// detach all dom ready events
						detach();

						// and execute any waiting functions
						jQuery.ready();
					}
				} )();
			}
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Support: IE<9
// Iteration over object's inherited properties before its own
var i;
for ( i in jQuery( support ) ) {
	break;
}
support.ownFirst = i === "0";

// Note: most support tests are defined in their respective modules.
// false until the test is run
support.inlineBlockNeedsLayout = false;

// Execute ASAP in case we need to set body.style.zoom
jQuery( function() {

	// Minified: var a,b,c,d
	var val, div, body, container;

	body = document.getElementsByTagName( "body" )[ 0 ];
	if ( !body || !body.style ) {

		// Return for frameset docs that don't have a body
		return;
	}

	// Setup
	div = document.createElement( "div" );
	container = document.createElement( "div" );
	container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
	body.appendChild( container ).appendChild( div );

	if ( typeof div.style.zoom !== "undefined" ) {

		// Support: IE<8
		// Check if natively block-level elements act like inline-block
		// elements when setting their display to 'inline' and giving
		// them layout
		div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";

		support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;
		if ( val ) {

			// Prevent IE 6 from affecting layout for positioned elements #11048
			// Prevent IE from shrinking the body in IE 7 mode #12869
			// Support: IE<8
			body.style.zoom = 1;
		}
	}

	body.removeChild( container );
} );


( function() {
	var div = document.createElement( "div" );

	// Support: IE<9
	support.deleteExpando = true;
	try {
		delete div.test;
	} catch ( e ) {
		support.deleteExpando = false;
	}

	// Null elements to avoid leaks in IE.
	div = null;
} )();
var acceptData = function( elem ) {
	var noData = jQuery.noData[ ( elem.nodeName + " " ).toLowerCase() ],
		nodeType = +elem.nodeType || 1;

	// Do not set data on non-element DOM nodes because it will not be cleared (#8335).
	return nodeType !== 1 && nodeType !== 9 ?
		false :

		// Nodes accept data unless otherwise specified; rejection can be conditional
		!noData || noData !== true && elem.getAttribute( "classid" ) === noData;
};




var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :

					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[ name ] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}

function internalData( elem, name, data, pvt /* Internal Use Only */ ) {
	if ( !acceptData( elem ) ) {
		return;
	}

	var ret, thisCache,
		internalKey = jQuery.expando,

		// We have to handle DOM nodes and JS objects differently because IE6-7
		// can't GC object references properly across the DOM-JS boundary
		isNode = elem.nodeType,

		// Only DOM nodes need the global jQuery cache; JS object data is
		// attached directly to the object so GC can occur automatically
		cache = isNode ? jQuery.cache : elem,

		// Only defining an ID for JS objects if its cache already exists allows
		// the code to shortcut on the same path as a DOM node with no cache
		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

	// Avoid doing any more work than we need to when trying to get data on an
	// object that has no data at all
	if ( ( !id || !cache[ id ] || ( !pvt && !cache[ id ].data ) ) &&
		data === undefined && typeof name === "string" ) {
		return;
	}

	if ( !id ) {

		// Only DOM nodes need a new unique ID for each element since their data
		// ends up in the global cache
		if ( isNode ) {
			id = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;
		} else {
			id = internalKey;
		}
	}

	if ( !cache[ id ] ) {

		// Avoid exposing jQuery metadata on plain JS objects when the object
		// is serialized using JSON.stringify
		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
	}

	// An object can be passed to jQuery.data instead of a key/value pair; this gets
	// shallow copied over onto the existing cache
	if ( typeof name === "object" || typeof name === "function" ) {
		if ( pvt ) {
			cache[ id ] = jQuery.extend( cache[ id ], name );
		} else {
			cache[ id ].data = jQuery.extend( cache[ id ].data, name );
		}
	}

	thisCache = cache[ id ];

	// jQuery data() is stored in a separate object inside the object's internal data
	// cache in order to avoid key collisions between internal data and user-defined
	// data.
	if ( !pvt ) {
		if ( !thisCache.data ) {
			thisCache.data = {};
		}

		thisCache = thisCache.data;
	}

	if ( data !== undefined ) {
		thisCache[ jQuery.camelCase( name ) ] = data;
	}

	// Check for both converted-to-camel and non-converted data property names
	// If a data property was specified
	if ( typeof name === "string" ) {

		// First Try to find as-is property data
		ret = thisCache[ name ];

		// Test for null|undefined property data
		if ( ret == null ) {

			// Try to find the camelCased property
			ret = thisCache[ jQuery.camelCase( name ) ];
		}
	} else {
		ret = thisCache;
	}

	return ret;
}

function internalRemoveData( elem, name, pvt ) {
	if ( !acceptData( elem ) ) {
		return;
	}

	var thisCache, i,
		isNode = elem.nodeType,

		// See jQuery.data for more information
		cache = isNode ? jQuery.cache : elem,
		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

	// If there is already no cache entry for this object, there is no
	// purpose in continuing
	if ( !cache[ id ] ) {
		return;
	}

	if ( name ) {

		thisCache = pvt ? cache[ id ] : cache[ id ].data;

		if ( thisCache ) {

			// Support array or space separated string names for data keys
			if ( !jQuery.isArray( name ) ) {

				// try the string as a key before any manipulation
				if ( name in thisCache ) {
					name = [ name ];
				} else {

					// split the camel cased version by spaces unless a key with the spaces exists
					name = jQuery.camelCase( name );
					if ( name in thisCache ) {
						name = [ name ];
					} else {
						name = name.split( " " );
					}
				}
			} else {

				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = name.concat( jQuery.map( name, jQuery.camelCase ) );
			}

			i = name.length;
			while ( i-- ) {
				delete thisCache[ name[ i ] ];
			}

			// If there is no data left in the cache, we want to continue
			// and let the cache object itself get destroyed
			if ( pvt ? !isEmptyDataObject( thisCache ) : !jQuery.isEmptyObject( thisCache ) ) {
				return;
			}
		}
	}

	// See jQuery.data for more information
	if ( !pvt ) {
		delete cache[ id ].data;

		// Don't destroy the parent cache unless the internal data object
		// had been the only thing left in it
		if ( !isEmptyDataObject( cache[ id ] ) ) {
			return;
		}
	}

	// Destroy the cache
	if ( isNode ) {
		jQuery.cleanData( [ elem ], true );

	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
	/* jshint eqeqeq: false */
	} else if ( support.deleteExpando || cache != cache.window ) {
		/* jshint eqeqeq: true */
		delete cache[ id ];

	// When all else fails, undefined
	} else {
		cache[ id ] = undefined;
	}
}

jQuery.extend( {
	cache: {},

	// The following elements (space-suffixed to avoid Object.prototype collisions)
	// throw uncatchable exceptions if you attempt to set expando properties
	noData: {
		"applet ": true,
		"embed ": true,

		// ...but Flash objects (which have this classid) *can* handle expandos
		"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[ jQuery.expando ] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data ) {
		return internalData( elem, name, data );
	},

	removeData: function( elem, name ) {
		return internalRemoveData( elem, name );
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return internalData( elem, name, data, true );
	},

	_removeData: function( elem, name ) {
		return internalRemoveData( elem, name, true );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Special expections of .data basically thwart jQuery.access,
		// so implement the relevant behavior ourselves

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				jQuery.data( this, key );
			} );
		}

		return arguments.length > 1 ?

			// Sets one value
			this.each( function() {
				jQuery.data( this, key, value );
			} ) :

			// Gets one value
			// Try to fetch any internally stored data first
			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;
	},

	removeData: function( key ) {
		return this.each( function() {
			jQuery.removeData( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object,
	// or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				jQuery._removeData( elem, type + "queue" );
				jQuery._removeData( elem, key );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );


( function() {
	var shrinkWrapBlocksVal;

	support.shrinkWrapBlocks = function() {
		if ( shrinkWrapBlocksVal != null ) {
			return shrinkWrapBlocksVal;
		}

		// Will be changed later if needed.
		shrinkWrapBlocksVal = false;

		// Minified: var b,c,d
		var div, body, container;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {

			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		// Support: IE6
		// Check if elements with layout shrink-wrap their children
		if ( typeof div.style.zoom !== "undefined" ) {

			// Reset CSS: box-sizing; display; margin; border
			div.style.cssText =

				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;" +
				"padding:1px;width:1px;zoom:1";
			div.appendChild( document.createElement( "div" ) ).style.width = "5px";
			shrinkWrapBlocksVal = div.offsetWidth !== 3;
		}

		body.removeChild( container );

		return shrinkWrapBlocksVal;
	};

} )();
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {

		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" ||
			!jQuery.contains( elem.ownerDocument, elem );
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() { return tween.cur(); } :
			function() { return jQuery.css( elem, prop, "" ); },
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		length = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < length; i++ ) {
				fn(
					elems[ i ],
					key,
					raw ? value : value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			length ? fn( elems[ 0 ], key ) : emptyGet;
};
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([\w:-]+)/ );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );

var rleadingWhitespace = ( /^\s+/ );

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|" +
		"details|dialog|figcaption|figure|footer|header|hgroup|main|" +
		"mark|meter|nav|output|picture|progress|section|summary|template|time|video";



function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
		safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}


( function() {
	var div = document.createElement( "div" ),
		fragment = document.createDocumentFragment(),
		input = document.createElement( "input" );

	// Setup
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// IE strips leading whitespace when .innerHTML is used
	support.leadingWhitespace = div.firstChild.nodeType === 3;

	// Make sure that tbody elements aren't automatically inserted
	// IE will insert them into empty tables
	support.tbody = !div.getElementsByTagName( "tbody" ).length;

	// Make sure that link elements get serialized correctly by innerHTML
	// This requires a wrapper element in IE
	support.htmlSerialize = !!div.getElementsByTagName( "link" ).length;

	// Makes sure cloning an html5 element does not cause problems
	// Where outerHTML is undefined, this still works
	support.html5Clone =
		document.createElement( "nav" ).cloneNode( true ).outerHTML !== "<:nav></:nav>";

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	input.type = "checkbox";
	input.checked = true;
	fragment.appendChild( input );
	support.appendChecked = input.checked;

	// Make sure textarea (and checkbox) defaultValue is properly cloned
	// Support: IE6-IE11+
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// #11217 - WebKit loses check when the name is after the checked attribute
	fragment.appendChild( div );

	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input = document.createElement( "input" );
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
	// old WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<9
	// Cloned elements keep attachEvent handlers, we use addEventListener on IE9+
	support.noCloneEvent = !!div.addEventListener;

	// Support: IE<9
	// Since attributes and properties are the same in IE,
	// cleanData must set properties to undefined rather than use removeAttribute
	div[ jQuery.expando ] = 1;
	support.attributes = !div.getAttribute( jQuery.expando );
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {
	option: [ 1, "<select multiple='multiple'>", "</select>" ],
	legend: [ 1, "<fieldset>", "</fieldset>" ],
	area: [ 1, "<map>", "</map>" ],

	// Support: IE8
	param: [ 1, "<object>", "</object>" ],
	thead: [ 1, "<table>", "</table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
	// unless wrapped in a div with non-breaking characters in front of it.
	_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>" ]
};

// Support: IE8-IE9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {
	var elems, elem,
		i = 0,
		found = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== "undefined" ?
				context.querySelectorAll( tag || "*" ) :
				undefined;

	if ( !found ) {
		for ( found = [], elems = context.childNodes || context;
			( elem = elems[ i ] ) != null;
			i++
		) {
			if ( !tag || jQuery.nodeName( elem, tag ) ) {
				found.push( elem );
			} else {
				jQuery.merge( found, getAll( elem, tag ) );
			}
		}
	}

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], found ) :
		found;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var elem,
		i = 0;
	for ( ; ( elem = elems[ i ] ) != null; i++ ) {
		jQuery._data(
			elem,
			"globalEval",
			!refElements || jQuery._data( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/,
	rtbody = /<tbody/i;

function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

function buildFragment( elems, context, scripts, selection, ignored ) {
	var j, elem, contains,
		tmp, tag, tbody, wrap,
		l = elems.length,

		// Ensure a safe fragment
		safe = createSafeFragment( context ),

		nodes = [],
		i = 0;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || safe.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;

				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Manually add leading whitespace removed by IE
				if ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
					nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[ 0 ] ) );
				}

				// Remove IE's autoinserted <tbody> from table fragments
				if ( !support.tbody ) {

					// String was a <table>, *may* have spurious <tbody>
					elem = tag === "table" && !rtbody.test( elem ) ?
						tmp.firstChild :

						// String was a bare <thead> or <tfoot>
						wrap[ 1 ] === "<table>" && !rtbody.test( elem ) ?
							tmp :
							0;

					j = elem && elem.childNodes.length;
					while ( j-- ) {
						if ( jQuery.nodeName( ( tbody = elem.childNodes[ j ] ), "tbody" ) &&
							!tbody.childNodes.length ) {

							elem.removeChild( tbody );
						}
					}
				}

				jQuery.merge( nodes, tmp.childNodes );

				// Fix #12392 for WebKit and IE > 9
				tmp.textContent = "";

				// Fix #12392 for oldIE
				while ( tmp.firstChild ) {
					tmp.removeChild( tmp.firstChild );
				}

				// Remember the top-level container for proper cleanup
				tmp = safe.lastChild;
			}
		}
	}

	// Fix #11356: Clear elements from fragment
	if ( tmp ) {
		safe.removeChild( tmp );
	}

	// Reset defaultChecked for any radios and checkboxes
	// about to be appended to the DOM in IE 6/7 (#8060)
	if ( !support.appendChecked ) {
		jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
	}

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}

			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( safe.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	tmp = null;

	return safe;
}


( function() {
	var i, eventName,
		div = document.createElement( "div" );

	// Support: IE<9 (lack submit/change bubble), Firefox (lack focus(in | out) events)
	for ( i in { submit: true, change: true, focusin: true } ) {
		eventName = "on" + i;

		if ( !( support[ i ] = eventName in window ) ) {

			// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
			div.setAttribute( eventName, "t" );
			support[ i ] = div.attributes[ eventName ].expando === false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
} )();


var rformElems = /^(?:input|select|textarea)$/i,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE9
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {
		var tmp, events, t, handleObjIn,
			special, eventHandle, handleObj,
			handlers, type, namespaces, origType,
			elemData = jQuery._data( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" &&
					( !e || jQuery.event.triggered !== e.type ) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};

			// Add elem as a property of the handle fn to prevent a memory leak
			// with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {
		var j, handleObj, tmp,
			origCount, t, events,
			special, handlers, type,
			namespaces, origType,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery._removeData( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		var handle, ontype, cur,
			bubbleType, special, tmp, i,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] &&
				jQuery._data( cur, "handle" );

			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if (
				( !special._default ||
				 special._default.apply( eventPath.pop(), data ) === false
				) && acceptData( elem )
			) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					try {
						elem[ type ]();
					} catch ( e ) {

						// IE<9 dies on focus/blur to hidden element (#1486,#12518)
						// only reproducible on winXP IE8 native, not IE9 in IE8 mode
					}
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Support (at least): Chrome, IE9
		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		//
		// Support: Firefox<=42+
		// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
		if ( delegateCount && cur.nodeType &&
			( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

			/* jshint eqeqeq: false */
			for ( ; cur != this; cur = cur.parentNode || this ) {
				/* jshint eqeqeq: true */

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push( { elem: cur, handlers: matches } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: IE<9
		// Fix target property (#1925)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Support: Safari 6-8+
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// Support: IE<9
		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
		event.metaKey = !!event.metaKey;

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
		"metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split( " " ),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: ( "button buttons clientX clientY fromElement offsetX offsetY " +
			"pageX pageY screenX screenY toElement" ).split( " " ),
		filter: function( event, original ) {
			var body, eventDoc, doc,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX +
					( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
					( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY +
					( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
					( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ?
					original.toElement :
					fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					try {
						this.focus();
						return false;
					} catch ( e ) {

						// Support: IE<9
						// If we error on focus to hidden element (#1486, #12518),
						// let .trigger() run the handlers
					}
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	// Piggyback on a donor event to simulate a different one
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true

				// Previously, `originalEvent: {}` was set here, so stopPropagation call
				// would not be triggered on donor event, since in our own
				// jQuery.event.stopPropagation function we had a check for existence of
				// originalEvent.stopPropagation method, so, consequently it would be a noop.
				//
				// Guard for simulated events was moved to jQuery.event.stopPropagation function
				// since `originalEvent` should point to the original event for the
				// constancy with other events and for more focused logic
			}
		);

		jQuery.event.trigger( e, null, elem );

		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {

		// This "if" is needed for plain objects
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event,
			// to properly expose it to GC
			if ( typeof elem[ name ] === "undefined" ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: IE < 9, Android < 4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;
		if ( !e ) {
			return;
		}

		// If preventDefault exists, run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// Support: IE
		// Otherwise set the returnValue property of the original event to false
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( !e || this.isSimulated ) {
			return;
		}

		// If stopPropagation exists, run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}

		// Support: IE
		// Set the cancelBubble property of the original event to true
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://code.google.com/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

// IE submit delegation
if ( !support.submit ) {

	jQuery.event.special.submit = {
		setup: function() {

			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {

				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ?

						// Support: IE <=8
						// We use jQuery.prop instead of elem.form
						// to allow fixing the IE8 delegated submit issue (gh-2332)
						// by 3rd party polyfills/workarounds.
						jQuery.prop( elem, "form" ) :
						undefined;

				if ( form && !jQuery._data( form, "submit" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submitBubble = true;
					} );
					jQuery._data( form, "submit", true );
				}
			} );

			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {

			// If form was submitted by the user, bubble the event up the tree
			if ( event._submitBubble ) {
				delete event._submitBubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event );
				}
			}
		},

		teardown: function() {

			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !support.change ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {

				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._justChanged = true;
						}
					} );
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._justChanged && !event.isTrigger ) {
							this._justChanged = false;
						}

						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event );
					} );
				}
				return false;
			}

			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "change" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event );
						}
					} );
					jQuery._data( elem, "change", true );
				}
			} );
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger ||
				( elem.type !== "radio" && elem.type !== "checkbox" ) ) {

				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Support: Firefox
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome, Safari
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				jQuery._data( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					jQuery._removeData( doc, fix );
				} else {
					jQuery._data( doc, fix, attaches );
				}
			}
		};
	} );
}

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	},

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


var rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rnoshimcache = new RegExp( "<(?:" + nodeNames + ")[\\s/>]", "i" ),
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,

	// Support: IE 10-11, Edge 10240+
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement( "div" ) );

// Support: IE<8
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName( "tbody" )[ 0 ] ||
			elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( jQuery.find.attr( elem, "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );
	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}
	return elem;
}

function cloneCopyEvent( src, dest ) {
	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function fixCloneNodeIssues( src, dest ) {
	var nodeName, e, data;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 copies events bound via attachEvent when using cloneNode.
	if ( !support.noCloneEvent && dest[ jQuery.expando ] ) {
		data = jQuery._data( dest );

		for ( e in data.events ) {
			jQuery.removeEvent( dest, e, data.handle );
		}

		// Event data gets referenced instead of copied if the expando gets copied too
		dest.removeAttribute( jQuery.expando );
	}

	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
	if ( nodeName === "script" && dest.text !== src.text ) {
		disableScript( dest ).text = src.text;
		restoreScript( dest );

	// IE6-10 improperly clones children of object elements using classid.
	// IE10 throws NoModificationAllowedError if parent is null, #12132.
	} else if ( nodeName === "object" ) {
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( support.html5Clone && ( src.innerHTML && !jQuery.trim( dest.innerHTML ) ) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {

		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.defaultSelected = dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var first, node, hasScripts,
		scripts, doc, fragment,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android<4.1, PhantomJS<2
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!jQuery._data( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							jQuery.globalEval(
								( node.text || node.textContent || node.innerHTML || "" )
									.replace( rcleanScript, "" )
							);
						}
					}
				}
			}

			// Fix #11809: Avoid leaking memory
			fragment = first = null;
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		elems = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = elems[ i ] ) != null; i++ ) {

		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var destElements, node, clone, i, srcElements,
			inPage = jQuery.contains( elem.ownerDocument, elem );

		if ( support.html5Clone || jQuery.isXMLDoc( elem ) ||
			!rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {

			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( ( !support.noCloneEvent || !support.noCloneChecked ) &&
				( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			// Fix all IE cloning issues
			for ( i = 0; ( node = srcElements[ i ] ) != null; ++i ) {

				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[ i ] ) {
					fixCloneNodeIssues( node, destElements[ i ] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0; ( node = srcElements[ i ] ) != null; i++ ) {
					cloneCopyEvent( node, destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		destElements = srcElements = node = null;

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems, /* internal */ forceAcceptData ) {
		var elem, type, id, data,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			attributes = support.attributes,
			special = jQuery.event.special;

		for ( ; ( elem = elems[ i ] ) != null; i++ ) {
			if ( forceAcceptData || acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// Support: IE<9
						// IE does not allow us to delete expando properties from nodes
						// IE creates expando attributes along with the property
						// IE does not have a removeAttribute function on Document nodes
						if ( !attributes && typeof elem.removeAttribute !== "undefined" ) {
							elem.removeAttribute( internalKey );

						// Webkit & Blink performance suffers when deleting properties
						// from DOM nodes, so set to undefined instead
						// https://code.google.com/p/chromium/issues/detail?id=378607
						} else {
							elem[ internalKey ] = undefined;
						}

						deletedIds.push( id );
					}
				}
			}
		}
	}
} );

jQuery.fn.extend( {

	// Keep domManip exposed until 3.0 (gh-2225)
	domManip: domManip,

	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append(
					( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value )
				);
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {

			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem, false ) );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}

			// If this is a select, ensure that it displays empty (#12336)
			// Support: IE<9
			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
				elem.options.length = 0;
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {

						// Remove element nodes and prevent memory leaks
						elem = this[ i ] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );


var iframe,
	elemdisplay = {

		// Support: Firefox
		// We have to pre-define these values for FF (#10227)
		HTML: "block",
		BODY: "block"
	};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */

// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		display = jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
				.appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var documentElement = document.documentElement;



( function() {
	var pixelPositionVal, pixelMarginRightVal, boxSizingReliableVal,
		reliableHiddenOffsetsVal, reliableMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	div.style.cssText = "float:left;opacity:.5";

	// Support: IE<9
	// Make sure that element opacity exists (as opposed to filter)
	support.opacity = div.style.opacity === "0.5";

	// Verify style float existence
	// (IE uses styleFloat instead of cssFloat)
	support.cssFloat = !!div.style.cssFloat;

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container = document.createElement( "div" );
	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	div.innerHTML = "";
	container.appendChild( div );

	// Support: Firefox<29, Android 2.3
	// Vendor-prefix box-sizing
	support.boxSizing = div.style.boxSizing === "" || div.style.MozBoxSizing === "" ||
		div.style.WebkitBoxSizing === "";

	jQuery.extend( support, {
		reliableHiddenOffsets: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableHiddenOffsetsVal;
		},

		boxSizingReliable: function() {

			// We're checking for pixelPositionVal here instead of boxSizingReliableVal
			// since that compresses better and they're computed together anyway.
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return boxSizingReliableVal;
		},

		pixelMarginRight: function() {

			// Support: Android 4.0-4.3
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelMarginRightVal;
		},

		pixelPosition: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelPositionVal;
		},

		reliableMarginRight: function() {

			// Support: Android 2.3
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableMarginRightVal;
		},

		reliableMarginLeft: function() {

			// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableMarginLeftVal;
		}
	} );

	function computeStyleTests() {
		var contents, divStyle,
			documentElement = document.documentElement;

		// Setup
		documentElement.appendChild( container );

		div.style.cssText =

			// Support: Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";

		// Support: IE<9
		// Assume reasonable values in the absence of getComputedStyle
		pixelPositionVal = boxSizingReliableVal = reliableMarginLeftVal = false;
		pixelMarginRightVal = reliableMarginRightVal = true;

		// Check for getComputedStyle so that this code is not run in IE<9.
		if ( window.getComputedStyle ) {
			divStyle = window.getComputedStyle( div );
			pixelPositionVal = ( divStyle || {} ).top !== "1%";
			reliableMarginLeftVal = ( divStyle || {} ).marginLeft === "2px";
			boxSizingReliableVal = ( divStyle || { width: "4px" } ).width === "4px";

			// Support: Android 4.0 - 4.3 only
			// Some styles come back with percentage values, even though they shouldn't
			div.style.marginRight = "50%";
			pixelMarginRightVal = ( divStyle || { marginRight: "4px" } ).marginRight === "4px";

			// Support: Android 2.3 only
			// Div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			contents = div.appendChild( document.createElement( "div" ) );

			// Reset CSS: box-sizing; display; margin; border; padding
			contents.style.cssText = div.style.cssText =

				// Support: Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
			contents.style.marginRight = contents.style.width = "0";
			div.style.width = "1px";

			reliableMarginRightVal =
				!parseFloat( ( window.getComputedStyle( contents ) || {} ).marginRight );

			div.removeChild( contents );
		}

		// Support: IE6-8
		// First check that getClientRects works as expected
		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		div.style.display = "none";
		reliableHiddenOffsetsVal = div.getClientRects().length === 0;
		if ( reliableHiddenOffsetsVal ) {
			div.style.display = "";
			div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
			div.childNodes[ 0 ].style.borderCollapse = "separate";
			contents = div.getElementsByTagName( "td" );
			contents[ 0 ].style.cssText = "margin:0;border:0;padding:0;display:none";
			reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
			if ( reliableHiddenOffsetsVal ) {
				contents[ 0 ].style.display = "";
				contents[ 1 ].style.display = "none";
				reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
			}
		}

		// Teardown
		documentElement.removeChild( container );
	}

} )();


var getStyles, curCSS,
	rposition = /^(top|right|bottom|left)$/;

if ( window.getComputedStyle ) {
	getStyles = function( elem ) {

		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

	curCSS = function( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );

		// getPropertyValue is only needed for .css('filter') in IE9, see #12537
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

		// Support: Opera 12.1x only
		// Fall back to style even without computed
		// computed is undefined for elems on document fragments
		if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		if ( computed ) {

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value"
			// instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values,
			// but width seems to be reliably pixels
			// this is against the CSSOM draft spec:
			// http://dev.w3.org/csswg/cssom/#resolved-values
			if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "";
	};
} else if ( documentElement.currentStyle ) {
	getStyles = function( elem ) {
		return elem.currentStyle;
	};

	curCSS = function( elem, name, computed ) {
		var left, rs, rsLeft, ret,
			style = elem.style;

		computed = computed || getStyles( elem );
		ret = computed ? computed[ name ] : undefined;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are
		// proportional to the parent element instead
		// and we can't measure the parent instead because it
		// might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rs = elem.runtimeStyle;
			rsLeft = rs && rs.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				rs.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				rs.left = rsLeft;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "" || "auto";
	};
}




function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

		ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity\s*=\s*([^)]*)/i,

	// swappable if display is none or starts with table except
	// "table", "table-cell", or "table-caption"
	// see here for display values:
	// https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;


// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt( 0 ).toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = jQuery._data( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {

			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] =
					jQuery._data( elem, "olddisplay", defaultDisplay( elem.nodeName ) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display && display !== "none" || !hidden ) {
				jQuery._data(
					elem,
					"olddisplay",
					hidden ? display : jQuery.css( elem, "display" )
				);
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?

		// If we already have the right measurement, avoid augmentation
		4 :

		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {

		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = support.boxSizing &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {

		// normalize float css property
		"float": support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set. See: #7116
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
			// but it would mean to define eight
			// (for every problematic property) identical functions
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				// Support: IE
				// Swallow errors from 'invalid' CSS values (#5509)
				try {
					style[ name ] = value;
				} catch ( e ) {}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var num, val, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
					elem.offsetWidth === 0 ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					support.boxSizing &&
						jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
} );

if ( !support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {

			// IE uses filters for opacity
			return ropacity.test( ( computed && elem.currentStyle ?
				elem.currentStyle.filter :
				elem.style.filter ) || "" ) ?
					( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
					computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist -
			// attempt to remove filter attribute #6652
			// if value === "", then remove inline opacity #12685
			if ( ( value >= 1 || value === "" ) &&
					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
					style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there is no filter style applied in a css rule
				// or unset inline opacity, we are done
				if ( value === "" || currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			return swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return (
				parseFloat( curCSS( elem, "marginLeft" ) ) ||

				// Support: IE<=11+
				// Running getBoundingClientRect on a disconnected node in IE throws an error
				// Support: IE8 only
				// getClientRects() errors on disconnected elems
				( jQuery.contains( elem.ownerDocument, elem ) ?
					elem.getBoundingClientRect().left -
						swap( elem, { marginLeft: 0 }, function() {
							return elem.getBoundingClientRect().left;
						} ) :
					0
				)
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// we're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = jQuery._data( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {

		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			jQuery._data( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";
			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !support.shrinkWrapBlocks() ) {
			anim.always( function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			} );
		}
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show
				// and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = jQuery._data( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done( function() {
				jQuery( elem ).hide();
			} );
		}
		anim.done( function() {
			var prop;
			jQuery._removeData( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		} );
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnotwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ?
			jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || jQuery._data( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = jQuery._data( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	window.clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var a,
		input = document.createElement( "input" ),
		div = document.createElement( "div" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	// Setup
	div = document.createElement( "div" );
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName( "a" )[ 0 ];

	// Support: Windows Web Apps (WWA)
	// `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "checkbox" );
	div.appendChild( input );

	a = div.getElementsByTagName( "a" )[ 0 ];

	// First batch of tests.
	a.style.cssText = "top:1px";

	// Test setAttribute on camelCase class.
	// If it works, we need attrFixes when doing get/setAttribute (ie6/7)
	support.getSetAttribute = div.className !== "t";

	// Get the style information from getAttribute
	// (IE uses .cssText instead)
	support.style = /top/.test( a.getAttribute( "style" ) );

	// Make sure that URLs aren't manipulated
	// (IE normalizes it by default)
	support.hrefNormalized = a.getAttribute( "href" ) === "/a";

	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
	support.checkOn = !!input.value;

	// Make sure that a selected-by-default option has a working selected property.
	// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
	support.optSelected = opt.selected;

	// Tests for enctype support on a form (#6743)
	support.enctype = !!document.createElement( "form" ).enctype;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE8 only
	// Check if we can trust getAttribute("value")
	input = document.createElement( "input" );
	input.setAttribute( "value", "" );
	support.input = input.getAttribute( "value" ) === "";

	// Check if an input maintains its value after becoming a radio
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";
} )();


var rreturn = /\r/g,
	rspaces = /[\x20\t\r\n\f]+/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if (
					hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?

					// handle most common string cases
					ret.replace( rreturn, "" ) :

					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ?
								!option.disabled :
								option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1 ) {

						// Support: IE6
						// When new option element is added to select box we need to
						// force reflow of newly added node in order to workaround delay
						// of initialization properties
						try {
							option.selected = optionSet = true;

						} catch ( _ ) {

							// Will be executed only in IE6
							option.scrollHeight;
						}

					} else {
						option.selected = false;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}

				return options;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle,
	ruseDefault = /^(?:checked|selected)$/i,
	getSetAttribute = support.getSetAttribute,
	getSetInput = support.input;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {

					// Setting the type on a radio button after the value resets the value in IE8-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {

					// Set corresponding property to false
					if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
						elem[ propName ] = false;

					// Support: IE<9
					// Also clear defaultChecked/defaultSelected (if appropriate)
					} else {
						elem[ jQuery.camelCase( "default-" + name ) ] =
							elem[ propName ] = false;
					}

				// See #9699 for explanation of this approach (setting first, then removal)
				} else {
					jQuery.attr( elem, name, "" );
				}

				elem.removeAttribute( getSetAttribute ? name : propName );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {

			// IE<8 needs the *property* name
			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

		} else {

			// Support: IE<9
			// Use defaultChecked and defaultSelected for oldIE
			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
		attrHandle[ name ] = function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {

				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		};
	} else {
		attrHandle[ name ] = function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem[ jQuery.camelCase( "default-" + name ) ] ?
					name.toLowerCase() :
					null;
			}
		};
	}
} );

// fix oldIE attroperties
if ( !getSetInput || !getSetAttribute ) {
	jQuery.attrHooks.value = {
		set: function( elem, value, name ) {
			if ( jQuery.nodeName( elem, "input" ) ) {

				// Does not return so that setAttribute is also used
				elem.defaultValue = value;
			} else {

				// Use nodeHook if defined (#1954); otherwise setAttribute is fine
				return nodeHook && nodeHook.set( elem, value, name );
			}
		}
	};
}

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = {
		set: function( elem, value, name ) {

			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				elem.setAttributeNode(
					( ret = elem.ownerDocument.createAttribute( name ) )
				);
			}

			ret.value = value += "";

			// Break association with cloned elements by also using setAttribute (#9646)
			if ( name === "value" || value === elem.getAttribute( name ) ) {
				return value;
			}
		}
	};

	// Some attributes are constructed with empty-string values when not defined
	attrHandle.id = attrHandle.name = attrHandle.coords =
		function( elem, name, isXML ) {
			var ret;
			if ( !isXML ) {
				return ( ret = elem.getAttributeNode( name ) ) && ret.value !== "" ?
					ret.value :
					null;
			}
		};

	// Fixing value retrieval on a button requires this module
	jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret = elem.getAttributeNode( name );
			if ( ret && ret.specified ) {
				return ret.value;
			}
		},
		set: nodeHook.set
	};

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		set: function( elem, value, name ) {
			nodeHook.set( elem, value === "" ? false : value, name );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each( [ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		};
	} );
}

if ( !support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {

			// Return undefined in the case of empty string
			// Note: IE uppercases css property names, but if we were to .toLowerCase()
			// .cssText, that would destroy case sensitivity in URL's, like in "background"
			return elem.style.cssText || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}




var rfocusable = /^(?:input|select|textarea|button|object)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each( function() {

			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch ( e ) {}
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) ||
						rclickable.test( elem.nodeName ) && elem.href ?
							0 :
							-1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Some attributes require a special call on IE
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !support.hrefNormalized ) {

	// href/src property should get the full normalized URL (#10299/#12915)
	jQuery.each( [ "href", "src" ], function( i, name ) {
		jQuery.propHooks[ name ] = {
			get: function( elem ) {
				return elem.getAttribute( name, 4 );
			}
		};
	} );
}

// Support: Safari, IE9+
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		},
		set: function( elem ) {
			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );

// IE6/7 call enctype encoding
if ( !support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}




var rclass = /[\t\r\n\f]/g;

function getClass( elem ) {
	return jQuery.attr( elem, "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						jQuery.attr( elem, "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						jQuery.attr( elem, "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnotwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// store className if set
					jQuery._data( this, "__className__", className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				jQuery.attr( this, "class",
					className || value === false ?
					"" :
					jQuery._data( this, "__className__" ) || ""
				);
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + getClass( elem ) + " " ).replace( rclass, " " )
					.indexOf( className ) > -1
			) {
				return true;
			}
		}

		return false;
	}
} );




// Return jQuery for attributes-only inclusion


jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );


var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;

jQuery.parseJSON = function( data ) {

	// Attempt to parse using the native JSON parser first
	if ( window.JSON && window.JSON.parse ) {

		// Support: Android 2.3
		// Workaround failure to string-cast null input
		return window.JSON.parse( data + "" );
	}

	var requireNonComma,
		depth = null,
		str = jQuery.trim( data + "" );

	// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains
	// after removing valid tokens
	return str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {

		// Force termination if we see a misplaced comma
		if ( requireNonComma && comma ) {
			depth = 0;
		}

		// Perform no more replacements after returning to outermost depth
		if ( depth === 0 ) {
			return token;
		}

		// Commas must not follow "[", "{", or ","
		requireNonComma = open || comma;

		// Determine new depth
		// array/object open ("[" or "{"): depth += true - false (increment)
		// array/object close ("]" or "}"): depth += false - true (decrement)
		// other cases ("," or primitive): depth += true - true (numeric cast)
		depth += !close - !open;

		// Remove this token
		return "";
	} ) ) ?
		( Function( "return " + str ) )() :
		jQuery.error( "Invalid JSON: " + data );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	try {
		if ( window.DOMParser ) { // Standard
			tmp = new window.DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} else { // IE
			xml = new window.ActiveXObject( "Microsoft.XMLDOM" );
			xml.async = "false";
			xml.loadXML( data );
		}
	} catch ( e ) {
		xml = undefined;
	}
	if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,

	// IE leaves an \r character at EOL
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Document location
	ajaxLocation = location.href,

	// Segment location into parts
	ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType.charAt( 0 ) === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var deep, key,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
	var firstDataType, ct, finalDataType, type,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) { // jscs:ignore requireDotNotation
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var

			// Cross-domain detection vars
			parts,

			// Loop variable
			i,

			// URL without anti-cache param
			cacheURL,

			// Response headers as string
			responseHeadersString,

			// timeout handle
			timeoutTimer,

			// To know if global events are to be dispatched
			fireGlobals,

			transport,

			// Response headers
			responseHeaders,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// The jqXHR state
			state = 0,

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {

								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" )
			.replace( rhash, "" )
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );

				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapAll( html.call( this, i ) );
			} );
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			var wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function() {
		return this.parent().each( function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		} ).end();
	}
} );


function getDisplay( elem ) {
	return elem.style && elem.style.display || jQuery.css( elem, "display" );
}

function filterHidden( elem ) {

	// Disconnected elements are considered hidden
	if ( !jQuery.contains( elem.ownerDocument || document, elem ) ) {
		return true;
	}
	while ( elem && elem.nodeType === 1 ) {
		if ( getDisplay( elem ) === "none" || elem.type === "hidden" ) {
			return true;
		}
		elem = elem.parentNode;
	}
	return false;
}

jQuery.expr.filters.hidden = function( elem ) {

	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return support.reliableHiddenOffsets() ?
		( elem.offsetWidth <= 0 && elem.offsetHeight <= 0 &&
			!elem.getClientRects().length ) :
			filterHidden( elem );
};

jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {

			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is(":disabled") so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					} ) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?

	// Support: IE6-IE8
	function() {

		// XHR cannot access local files, always use ActiveX for that case
		if ( this.isLocal ) {
			return createActiveXHR();
		}

		// Support: IE 9-11
		// IE seems to error on cross-domain PATCH requests when ActiveX XHR
		// is used. In IE 9+ always use the native XHR.
		// Note: this condition won't catch Edge as it doesn't define
		// document.documentMode but it also doesn't support ActiveX so it won't
		// reach this code.
		if ( document.documentMode > 8 ) {
			return createStandardXHR();
		}

		// Support: IE<9
		// oldIE XHR does not support non-RFC2616 methods (#13240)
		// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx
		// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9
		// Although this check for six methods instead of eight
		// since IE also does not support "trace" and "connect"
		return /^(get|post|head|put|delete|options)$/i.test( this.type ) &&
			createStandardXHR() || createActiveXHR();
	} :

	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

var xhrId = 0,
	xhrCallbacks = {},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE<10
// Open requests must be manually aborted on unload (#5280)
// See https://support.microsoft.com/kb/2856746 for more info
if ( window.attachEvent ) {
	window.attachEvent( "onunload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( undefined, true );
		}
	} );
}

// Determine support properties
support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
xhrSupported = support.ajax = !!xhrSupported;

// Create transport if the browser can provide an xhr
if ( xhrSupported ) {

	jQuery.ajaxTransport( function( options ) {

		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !options.crossDomain || support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;

					// Open the socket
					xhr.open(
						options.type,
						options.url,
						options.async,
						options.username,
						options.password
					);

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {

						// Support: IE<9
						// IE's ActiveXObject throws a 'Type Mismatch' exception when setting
						// request header to a null-value.
						//
						// To keep consistent with other XHR implementations, cast the value
						// to string and ignore `undefined`.
						if ( headers[ i ] !== undefined ) {
							xhr.setRequestHeader( i, headers[ i ] + "" );
						}
					}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( options.hasContent && options.data ) || null );

					// Listener
					callback = function( _, isAbort ) {
						var status, statusText, responses;

						// Was never called and is aborted or complete
						if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

							// Clean up
							delete xhrCallbacks[ id ];
							callback = undefined;
							xhr.onreadystatechange = jQuery.noop;

							// Abort manually if needed
							if ( isAbort ) {
								if ( xhr.readyState !== 4 ) {
									xhr.abort();
								}
							} else {
								responses = {};
								status = xhr.status;

								// Support: IE<10
								// Accessing binary-data responseText throws an exception
								// (#11426)
								if ( typeof xhr.responseText === "string" ) {
									responses.text = xhr.responseText;
								}

								// Firefox throws an exception when accessing
								// statusText for faulty cross-domain requests
								try {
									statusText = xhr.statusText;
								} catch ( e ) {

									// We normalize with Webkit giving an empty statusText
									statusText = "";
								}

								// Filter status for non standard behaviors

								// If the request is local and we have data: assume a success
								// (success with no data won't get notified, that's the best we
								// can do given current implementations)
								if ( !status && options.isLocal && !options.crossDomain ) {
									status = responses.text ? 200 : 404;

								// IE - #1450: sometimes returns 1223 when it should be 204
								} else if ( status === 1223 ) {
									status = 204;
								}
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, xhr.getAllResponseHeaders() );
						}
					};

					// Do send the request
					// `xhr.send` may raise an exception, but it will be
					// handled in jQuery.ajax (so no try/catch here)
					if ( !options.async ) {

						// If we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {

						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						window.setTimeout( callback );
					} else {

						// Register the callback, but delay it in case `xhr.send` throws
						// Add to the list of active xhr callbacks
						xhr.onreadystatechange = xhrCallbacks[ id ] = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback( undefined, true );
					}
				}
			};
		}
	} );
}

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch ( e ) {}
}




// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || jQuery( "head" )[ 0 ] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = true;

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( script.parentNode ) {
							script.parentNode.removeChild( script );
						}

						// Dereference the script
						script = null;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};

				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
				// Use native DOM manipulation to avoid our domManip AJAX trickery
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( undefined, true );
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// data: string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = jQuery.trim( url.slice( off, url.length ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};





/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			jQuery.inArray( "auto", [ curCSSTop, curCSSLeft ] ) > -1;

		// need to be able to calculate position if either top or left
		// is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win,
			box = { top: 0, left: 0 },
			elem = this[ 0 ],
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// If we don't have gBCR, just use 0,0 rather than error
		// BlackBerry 5, iOS 3 (original iPhone)
		if ( typeof elem.getBoundingClientRect !== "undefined" ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
			left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			parentOffset = { top: 0, left: 0 },
			elem = this[ 0 ];

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// we assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();
		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		return {
			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? ( prop in win ) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
} );

// Support: Safari<7-8+, Chrome<37-44+
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// getComputedStyle returns percent when specified for top/left/bottom/right
// rather than make the css module depend on the offset module, we just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// if curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
	function( defaultExtra, funcName ) {

		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only,
					// but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
		return jQuery;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}



var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in
// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}

return jQuery;
}));


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(4),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, hljs){


  var ComponentCodeView = Marionette.LayoutView.extend({
  });

  var ComponentExampleCodeView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentExampleCodeTemplate,
      ui:{
          codeTabs: "#exampleTabs",
          codeSnippets: "pre code"
      },
      regions:{
        HtmlCode: "#componentHtmlExample",
        JsCode: "#componentJsExample"
      },
      onBeforeShow: fncOnBeforeShow,
      onShow: fncOnShow,
      onAttach: fncOnAttach

  });

  function fncOnBeforeShow(){
    var $view = this;

    $view.HtmlCode.show(new ComponentCodeView({
      template: $view.options.templateHtml
    }));
    if ($view.options.templateJs){
      $view.JsCode.show(new ComponentCodeView({
        template: $view.options.templateJs
      }));
    }
  }

  function fncOnShow(){
    var $view = this;

    $view.ui.codeSnippets.each(function(i, block) {

       if ($(block).hasClass("html") || $(block).hasClass("javascript")){
         block.innerHTML = block.innerHTML.replace(/</g, "&lt");
       }

       hljs.highlightBlock(block);

   });

    $view.ui.codeTabs.rup_tabs({
        tabs : [
          {i18nCaption:"HTML", layer:"pre:has(code.html)"},
          {i18nCaption:"JavaScript", layer:"pre:has(code.javascript)"}
        ]
    });
  }


  function fncOnAttach(){
    this.ui.codeTabs.rup_tabs({
        tabs : [
          {i18nCaption:"HTML", layer:"pre:has(code.html)"},
          {i18nCaption:"JavaScript", layer:"pre:has(code.javascript)"}
        ]
    });
  }

  return ComponentExampleCodeView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

/*
Syntax highlighting with language autodetection.
https://highlightjs.org/
*/

(function(factory) {

  // Find the global object for export to both the browser and web workers.
  var globalObject = typeof window === 'object' && window ||
                     typeof self === 'object' && self;

  // Setup highlight.js for different environments. First is Node.js or
  // CommonJS.
  if(true) {
    factory(exports);
  } else if(globalObject) {
    // Export hljs globally even when using AMD for cases when this script
    // is loaded with others that may still expect a global hljs.
    globalObject.hljs = factory({});

    // Finally register the global hljs with AMD.
    if(typeof define === 'function' && define.amd) {
      define([], function() {
        return globalObject.hljs;
      });
    }
  }

}(function(hljs) {
  // Convenience variables for build-in objects
  var ArrayProto = [],
      objectKeys = Object.keys;

  // Global internal variables used within the highlight.js library.
  var languages = {},
      aliases   = {};

  // Regular expressions used throughout the highlight.js library.
  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,
      languagePrefixRe = /\blang(?:uage)?-([\w-]+)\b/i,
      fixMarkupRe      = /((^(<[^>]+>|\t|)+|(?:\n)))/gm;

  var spanEndTag = '</span>';

  // Global options used when within external APIs. This is modified when
  // calling the `hljs.configure` function.
  var options = {
    classPrefix: 'hljs-',
    tabReplace: null,
    useBR: false,
    languages: undefined
  };

  // Object map that is used to escape some common HTML characters.
  var escapeRegexMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
  };

  /* Utility functions */

  function escape(value) {
    return value.replace(/[&<>]/gm, function(character) {
      return escapeRegexMap[character];
    });
  }

  function tag(node) {
    return node.nodeName.toLowerCase();
  }

  function testRe(re, lexeme) {
    var match = re && re.exec(lexeme);
    return match && match.index === 0;
  }

  function isNotHighlighted(language) {
    return noHighlightRe.test(language);
  }

  function blockLanguage(block) {
    var i, match, length, _class;
    var classes = block.className + ' ';

    classes += block.parentNode ? block.parentNode.className : '';

    // language-* takes precedence over non-prefixed class names.
    match = languagePrefixRe.exec(classes);
    if (match) {
      return getLanguage(match[1]) ? match[1] : 'no-highlight';
    }

    classes = classes.split(/\s+/);

    for (i = 0, length = classes.length; i < length; i++) {
      _class = classes[i]

      if (isNotHighlighted(_class) || getLanguage(_class)) {
        return _class;
      }
    }
  }

  function inherit(parent, obj) {
    var key;
    var result = {};

    for (key in parent)
      result[key] = parent[key];
    if (obj)
      for (key in obj)
        result[key] = obj[key];
    return result;
  }

  /* Stream merging */

  function nodeStream(node) {
    var result = [];
    (function _nodeStream(node, offset) {
      for (var child = node.firstChild; child; child = child.nextSibling) {
        if (child.nodeType === 3)
          offset += child.nodeValue.length;
        else if (child.nodeType === 1) {
          result.push({
            event: 'start',
            offset: offset,
            node: child
          });
          offset = _nodeStream(child, offset);
          // Prevent void elements from having an end tag that would actually
          // double them in the output. There are more void elements in HTML
          // but we list only those realistically expected in code display.
          if (!tag(child).match(/br|hr|img|input/)) {
            result.push({
              event: 'stop',
              offset: offset,
              node: child
            });
          }
        }
      }
      return offset;
    })(node, 0);
    return result;
  }

  function mergeStreams(original, highlighted, value) {
    var processed = 0;
    var result = '';
    var nodeStack = [];

    function selectStream() {
      if (!original.length || !highlighted.length) {
        return original.length ? original : highlighted;
      }
      if (original[0].offset !== highlighted[0].offset) {
        return (original[0].offset < highlighted[0].offset) ? original : highlighted;
      }

      /*
      To avoid starting the stream just before it should stop the order is
      ensured that original always starts first and closes last:

      if (event1 == 'start' && event2 == 'start')
        return original;
      if (event1 == 'start' && event2 == 'stop')
        return highlighted;
      if (event1 == 'stop' && event2 == 'start')
        return original;
      if (event1 == 'stop' && event2 == 'stop')
        return highlighted;

      ... which is collapsed to:
      */
      return highlighted[0].event === 'start' ? original : highlighted;
    }

    function open(node) {
      function attr_str(a) {return ' ' + a.nodeName + '="' + escape(a.value) + '"';}
      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';
    }

    function close(node) {
      result += '</' + tag(node) + '>';
    }

    function render(event) {
      (event.event === 'start' ? open : close)(event.node);
    }

    while (original.length || highlighted.length) {
      var stream = selectStream();
      result += escape(value.substr(processed, stream[0].offset - processed));
      processed = stream[0].offset;
      if (stream === original) {
        /*
        On any opening or closing tag of the original markup we first close
        the entire highlighted node stack, then render the original tag along
        with all the following original tags at the same offset and then
        reopen all the tags on the highlighted stack.
        */
        nodeStack.reverse().forEach(close);
        do {
          render(stream.splice(0, 1)[0]);
          stream = selectStream();
        } while (stream === original && stream.length && stream[0].offset === processed);
        nodeStack.reverse().forEach(open);
      } else {
        if (stream[0].event === 'start') {
          nodeStack.push(stream[0].node);
        } else {
          nodeStack.pop();
        }
        render(stream.splice(0, 1)[0]);
      }
    }
    return result + escape(value.substr(processed));
  }

  /* Initialization */

  function compileLanguage(language) {

    function reStr(re) {
        return (re && re.source) || re;
    }

    function langRe(value, global) {
      return new RegExp(
        reStr(value),
        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')
      );
    }

    function compileMode(mode, parent) {
      if (mode.compiled)
        return;
      mode.compiled = true;

      mode.keywords = mode.keywords || mode.beginKeywords;
      if (mode.keywords) {
        var compiled_keywords = {};

        var flatten = function(className, str) {
          if (language.case_insensitive) {
            str = str.toLowerCase();
          }
          str.split(' ').forEach(function(kw) {
            var pair = kw.split('|');
            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];
          });
        };

        if (typeof mode.keywords === 'string') { // string
          flatten('keyword', mode.keywords);
        } else {
          objectKeys(mode.keywords).forEach(function (className) {
            flatten(className, mode.keywords[className]);
          });
        }
        mode.keywords = compiled_keywords;
      }
      mode.lexemesRe = langRe(mode.lexemes || /\w+/, true);

      if (parent) {
        if (mode.beginKeywords) {
          mode.begin = '\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\b';
        }
        if (!mode.begin)
          mode.begin = /\B|\b/;
        mode.beginRe = langRe(mode.begin);
        if (!mode.end && !mode.endsWithParent)
          mode.end = /\B|\b/;
        if (mode.end)
          mode.endRe = langRe(mode.end);
        mode.terminator_end = reStr(mode.end) || '';
        if (mode.endsWithParent && parent.terminator_end)
          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;
      }
      if (mode.illegal)
        mode.illegalRe = langRe(mode.illegal);
      if (mode.relevance == null)
        mode.relevance = 1;
      if (!mode.contains) {
        mode.contains = [];
      }
      var expanded_contains = [];
      mode.contains.forEach(function(c) {
        if (c.variants) {
          c.variants.forEach(function(v) {expanded_contains.push(inherit(c, v));});
        } else {
          expanded_contains.push(c === 'self' ? mode : c);
        }
      });
      mode.contains = expanded_contains;
      mode.contains.forEach(function(c) {compileMode(c, mode);});

      if (mode.starts) {
        compileMode(mode.starts, parent);
      }

      var terminators =
        mode.contains.map(function(c) {
          return c.beginKeywords ? '\\.?(' + c.begin + ')\\.?' : c.begin;
        })
        .concat([mode.terminator_end, mode.illegal])
        .map(reStr)
        .filter(Boolean);
      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};
    }

    compileMode(language);
  }

  /*
  Core highlighting function. Accepts a language name, or an alias, and a
  string with the code to highlight. Returns an object with the following
  properties:

  - relevance (int)
  - value (an HTML string with highlighting markup)

  */
  function highlight(name, value, ignore_illegals, continuation) {

    function subMode(lexeme, mode) {
      var i, length;

      for (i = 0, length = mode.contains.length; i < length; i++) {
        if (testRe(mode.contains[i].beginRe, lexeme)) {
          return mode.contains[i];
        }
      }
    }

    function endOfMode(mode, lexeme) {
      if (testRe(mode.endRe, lexeme)) {
        while (mode.endsParent && mode.parent) {
          mode = mode.parent;
        }
        return mode;
      }
      if (mode.endsWithParent) {
        return endOfMode(mode.parent, lexeme);
      }
    }

    function isIllegal(lexeme, mode) {
      return !ignore_illegals && testRe(mode.illegalRe, lexeme);
    }

    function keywordMatch(mode, match) {
      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];
      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];
    }

    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {
      var classPrefix = noPrefix ? '' : options.classPrefix,
          openSpan    = '<span class="' + classPrefix,
          closeSpan   = leaveOpen ? '' : spanEndTag

      openSpan += classname + '">';

      return openSpan + insideSpan + closeSpan;
    }

    function processKeywords() {
      var keyword_match, last_index, match, result;

      if (!top.keywords)
        return escape(mode_buffer);

      result = '';
      last_index = 0;
      top.lexemesRe.lastIndex = 0;
      match = top.lexemesRe.exec(mode_buffer);

      while (match) {
        result += escape(mode_buffer.substr(last_index, match.index - last_index));
        keyword_match = keywordMatch(top, match);
        if (keyword_match) {
          relevance += keyword_match[1];
          result += buildSpan(keyword_match[0], escape(match[0]));
        } else {
          result += escape(match[0]);
        }
        last_index = top.lexemesRe.lastIndex;
        match = top.lexemesRe.exec(mode_buffer);
      }
      return result + escape(mode_buffer.substr(last_index));
    }

    function processSubLanguage() {
      var explicit = typeof top.subLanguage === 'string';
      if (explicit && !languages[top.subLanguage]) {
        return escape(mode_buffer);
      }

      var result = explicit ?
                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :
                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);

      // Counting embedded language score towards the host language may be disabled
      // with zeroing the containing mode relevance. Usecase in point is Markdown that
      // allows XML everywhere and makes every XML snippet to have a much larger Markdown
      // score.
      if (top.relevance > 0) {
        relevance += result.relevance;
      }
      if (explicit) {
        continuations[top.subLanguage] = result.top;
      }
      return buildSpan(result.language, result.value, false, true);
    }

    function processBuffer() {
      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());
      mode_buffer = '';
    }

    function startNewMode(mode) {
      result += mode.className? buildSpan(mode.className, '', true): '';
      top = Object.create(mode, {parent: {value: top}});
    }

    function processLexeme(buffer, lexeme) {

      mode_buffer += buffer;

      if (lexeme == null) {
        processBuffer();
        return 0;
      }

      var new_mode = subMode(lexeme, top);
      if (new_mode) {
        if (new_mode.skip) {
          mode_buffer += lexeme;
        } else {
          if (new_mode.excludeBegin) {
            mode_buffer += lexeme;
          }
          processBuffer();
          if (!new_mode.returnBegin && !new_mode.excludeBegin) {
            mode_buffer = lexeme;
          }
        }
        startNewMode(new_mode, lexeme);
        return new_mode.returnBegin ? 0 : lexeme.length;
      }

      var end_mode = endOfMode(top, lexeme);
      if (end_mode) {
        var origin = top;
        if (origin.skip) {
          mode_buffer += lexeme;
        } else {
          if (!(origin.returnEnd || origin.excludeEnd)) {
            mode_buffer += lexeme;
          }
          processBuffer();
          if (origin.excludeEnd) {
            mode_buffer = lexeme;
          }
        }
        do {
          if (top.className) {
            result += spanEndTag;
          }
          if (!top.skip) {
            relevance += top.relevance;
          }
          top = top.parent;
        } while (top !== end_mode.parent);
        if (end_mode.starts) {
          startNewMode(end_mode.starts, '');
        }
        return origin.returnEnd ? 0 : lexeme.length;
      }

      if (isIllegal(lexeme, top))
        throw new Error('Illegal lexeme "' + lexeme + '" for mode "' + (top.className || '<unnamed>') + '"');

      /*
      Parser should not reach this point as all types of lexemes should be caught
      earlier, but if it does due to some bug make sure it advances at least one
      character forward to prevent infinite looping.
      */
      mode_buffer += lexeme;
      return lexeme.length || 1;
    }

    var language = getLanguage(name);
    if (!language) {
      throw new Error('Unknown language: "' + name + '"');
    }

    compileLanguage(language);
    var top = continuation || language;
    var continuations = {}; // keep continuations for sub-languages
    var result = '', current;
    for(current = top; current !== language; current = current.parent) {
      if (current.className) {
        result = buildSpan(current.className, '', true) + result;
      }
    }
    var mode_buffer = '';
    var relevance = 0;
    try {
      var match, count, index = 0;
      while (true) {
        top.terminators.lastIndex = index;
        match = top.terminators.exec(value);
        if (!match)
          break;
        count = processLexeme(value.substr(index, match.index - index), match[0]);
        index = match.index + count;
      }
      processLexeme(value.substr(index));
      for(current = top; current.parent; current = current.parent) { // close dangling modes
        if (current.className) {
          result += spanEndTag;
        }
      }
      return {
        relevance: relevance,
        value: result,
        language: name,
        top: top
      };
    } catch (e) {
      if (e.message && e.message.indexOf('Illegal') !== -1) {
        return {
          relevance: 0,
          value: escape(value)
        };
      } else {
        throw e;
      }
    }
  }

  /*
  Highlighting with language detection. Accepts a string with the code to
  highlight. Returns an object with the following properties:

  - language (detected language)
  - relevance (int)
  - value (an HTML string with highlighting markup)
  - second_best (object with the same structure for second-best heuristically
    detected language, may be absent)

  */
  function highlightAuto(text, languageSubset) {
    languageSubset = languageSubset || options.languages || objectKeys(languages);
    var result = {
      relevance: 0,
      value: escape(text)
    };
    var second_best = result;
    languageSubset.filter(getLanguage).forEach(function(name) {
      var current = highlight(name, text, false);
      current.language = name;
      if (current.relevance > second_best.relevance) {
        second_best = current;
      }
      if (current.relevance > result.relevance) {
        second_best = result;
        result = current;
      }
    });
    if (second_best.language) {
      result.second_best = second_best;
    }
    return result;
  }

  /*
  Post-processing of the highlighted markup:

  - replace TABs with something more useful
  - replace real line-breaks with '<br>' for non-pre containers

  */
  function fixMarkup(value) {
    return !(options.tabReplace || options.useBR)
      ? value
      : value.replace(fixMarkupRe, function(match, p1) {
          if (options.useBR && match === '\n') {
            return '<br>';
          } else if (options.tabReplace) {
            return p1.replace(/\t/g, options.tabReplace);
          }
      });
  }

  function buildClassName(prevClassName, currentLang, resultLang) {
    var language = currentLang ? aliases[currentLang] : resultLang,
        result   = [prevClassName.trim()];

    if (!prevClassName.match(/\bhljs\b/)) {
      result.push('hljs');
    }

    if (prevClassName.indexOf(language) === -1) {
      result.push(language);
    }

    return result.join(' ').trim();
  }

  /*
  Applies highlighting to a DOM node containing code. Accepts a DOM node and
  two optional parameters for fixMarkup.
  */
  function highlightBlock(block) {
    var node, originalStream, result, resultNode, text;
    var language = blockLanguage(block);

    if (isNotHighlighted(language))
        return;

    if (options.useBR) {
      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');
      node.innerHTML = block.innerHTML.replace(/\n/g, '').replace(/<br[ \/]*>/g, '\n');
    } else {
      node = block;
    }
    text = node.textContent;
    result = language ? highlight(language, text, true) : highlightAuto(text);

    originalStream = nodeStream(node);
    if (originalStream.length) {
      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');
      resultNode.innerHTML = result.value;
      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);
    }
    result.value = fixMarkup(result.value);

    block.innerHTML = result.value;
    block.className = buildClassName(block.className, language, result.language);
    block.result = {
      language: result.language,
      re: result.relevance
    };
    if (result.second_best) {
      block.second_best = {
        language: result.second_best.language,
        re: result.second_best.relevance
      };
    }
  }

  /*
  Updates highlight.js global options with values passed in the form of an object.
  */
  function configure(user_options) {
    options = inherit(options, user_options);
  }

  /*
  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.
  */
  function initHighlighting() {
    if (initHighlighting.called)
      return;
    initHighlighting.called = true;

    var blocks = document.querySelectorAll('pre code');
    ArrayProto.forEach.call(blocks, highlightBlock);
  }

  /*
  Attaches highlighting to the page load event.
  */
  function initHighlightingOnLoad() {
    addEventListener('DOMContentLoaded', initHighlighting, false);
    addEventListener('load', initHighlighting, false);
  }

  function registerLanguage(name, language) {
    var lang = languages[name] = language(hljs);
    if (lang.aliases) {
      lang.aliases.forEach(function(alias) {aliases[alias] = name;});
    }
  }

  function listLanguages() {
    return objectKeys(languages);
  }

  function getLanguage(name) {
    name = (name || '').toLowerCase();
    return languages[name] || languages[aliases[name]];
  }

  /* Interface definition */

  hljs.highlight = highlight;
  hljs.highlightAuto = highlightAuto;
  hljs.fixMarkup = fixMarkup;
  hljs.highlightBlock = highlightBlock;
  hljs.configure = configure;
  hljs.initHighlighting = initHighlighting;
  hljs.initHighlightingOnLoad = initHighlightingOnLoad;
  hljs.registerLanguage = registerLanguage;
  hljs.listLanguages = listLanguages;
  hljs.getLanguage = getLanguage;
  hljs.inherit = inherit;

  // Common regexps
  hljs.IDENT_RE = '[a-zA-Z]\\w*';
  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\w*';
  hljs.NUMBER_RE = '\\b\\d+(\\.\\d+)?';
  hljs.C_NUMBER_RE = '(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)'; // 0x..., 0..., decimal, float
  hljs.BINARY_NUMBER_RE = '\\b(0b[01]+)'; // 0b...
  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~';

  // Common modes
  hljs.BACKSLASH_ESCAPE = {
    begin: '\\\\[\\s\\S]', relevance: 0
  };
  hljs.APOS_STRING_MODE = {
    className: 'string',
    begin: '\'', end: '\'',
    illegal: '\\n',
    contains: [hljs.BACKSLASH_ESCAPE]
  };
  hljs.QUOTE_STRING_MODE = {
    className: 'string',
    begin: '"', end: '"',
    illegal: '\\n',
    contains: [hljs.BACKSLASH_ESCAPE]
  };
  hljs.PHRASAL_WORDS_MODE = {
    begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\b/
  };
  hljs.COMMENT = function (begin, end, inherits) {
    var mode = hljs.inherit(
      {
        className: 'comment',
        begin: begin, end: end,
        contains: []
      },
      inherits || {}
    );
    mode.contains.push(hljs.PHRASAL_WORDS_MODE);
    mode.contains.push({
      className: 'doctag',
      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',
      relevance: 0
    });
    return mode;
  };
  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');
  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\*', '\\*/');
  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');
  hljs.NUMBER_MODE = {
    className: 'number',
    begin: hljs.NUMBER_RE,
    relevance: 0
  };
  hljs.C_NUMBER_MODE = {
    className: 'number',
    begin: hljs.C_NUMBER_RE,
    relevance: 0
  };
  hljs.BINARY_NUMBER_MODE = {
    className: 'number',
    begin: hljs.BINARY_NUMBER_RE,
    relevance: 0
  };
  hljs.CSS_NUMBER_MODE = {
    className: 'number',
    begin: hljs.NUMBER_RE + '(' +
      '%|em|ex|ch|rem'  +
      '|vw|vh|vmin|vmax' +
      '|cm|mm|in|pt|pc|px' +
      '|deg|grad|rad|turn' +
      '|s|ms' +
      '|Hz|kHz' +
      '|dpi|dpcm|dppx' +
      ')?',
    relevance: 0
  };
  hljs.REGEXP_MODE = {
    className: 'regexp',
    begin: /\//, end: /\/[gimuy]*/,
    illegal: /\n/,
    contains: [
      hljs.BACKSLASH_ESCAPE,
      {
        begin: /\[/, end: /\]/,
        relevance: 0,
        contains: [hljs.BACKSLASH_ESCAPE]
      }
    ]
  };
  hljs.TITLE_MODE = {
    className: 'title',
    begin: hljs.IDENT_RE,
    relevance: 0
  };
  hljs.UNDERSCORE_TITLE_MODE = {
    className: 'title',
    begin: hljs.UNDERSCORE_IDENT_RE,
    relevance: 0
  };
  hljs.METHOD_GUARD = {
    // excludes method names from keyword processing
    begin: '\\.\\s*' + hljs.UNDERSCORE_IDENT_RE,
    relevance: 0
  };

  return hljs;
}));


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3
//     http://underscorejs.org
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var
    push             = ArrayProto.push,
    slice            = ArrayProto.slice,
    toString         = ObjProto.toString,
    hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind,
    nativeCreate       = Object.create;

  // Naked function reference for surrogate-prototype-swapping.
  var Ctor = function(){};

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object.
  if (true) {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.8.3';

  // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.
  var optimizeCb = function(func, context, argCount) {
    if (context === void 0) return func;
    switch (argCount == null ? 3 : argCount) {
      case 1: return function(value) {
        return func.call(context, value);
      };
      case 2: return function(value, other) {
        return func.call(context, value, other);
      };
      case 3: return function(value, index, collection) {
        return func.call(context, value, index, collection);
      };
      case 4: return function(accumulator, value, index, collection) {
        return func.call(context, accumulator, value, index, collection);
      };
    }
    return function() {
      return func.apply(context, arguments);
    };
  };

  // A mostly-internal function to generate callbacks that can be applied
  // to each element in a collection, returning the desired result — either
  // identity, an arbitrary callback, a property matcher, or a property accessor.
  var cb = function(value, context, argCount) {
    if (value == null) return _.identity;
    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
    if (_.isObject(value)) return _.matcher(value);
    return _.property(value);
  };
  _.iteratee = function(value, context) {
    return cb(value, context, Infinity);
  };

  // An internal function for creating assigner functions.
  var createAssigner = function(keysFunc, undefinedOnly) {
    return function(obj) {
      var length = arguments.length;
      if (length < 2 || obj == null) return obj;
      for (var index = 1; index < length; index++) {
        var source = arguments[index],
            keys = keysFunc(source),
            l = keys.length;
        for (var i = 0; i < l; i++) {
          var key = keys[i];
          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
        }
      }
      return obj;
    };
  };

  // An internal function for creating a new object that inherits from another.
  var baseCreate = function(prototype) {
    if (!_.isObject(prototype)) return {};
    if (nativeCreate) return nativeCreate(prototype);
    Ctor.prototype = prototype;
    var result = new Ctor;
    Ctor.prototype = null;
    return result;
  };

  var property = function(key) {
    return function(obj) {
      return obj == null ? void 0 : obj[key];
    };
  };

  // Helper for collection methods to determine whether a collection
  // should be iterated as an array or as an object
  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
  var getLength = property('length');
  var isArrayLike = function(collection) {
    var length = getLength(collection);
    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
  };

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.
  _.each = _.forEach = function(obj, iteratee, context) {
    iteratee = optimizeCb(iteratee, context);
    var i, length;
    if (isArrayLike(obj)) {
      for (i = 0, length = obj.length; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);
      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }
    return obj;
  };

  // Return the results of applying the iteratee to each element.
  _.map = _.collect = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length,
        results = Array(length);
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  // Create a reducing function iterating left or right.
  function createReduce(dir) {
    // Optimized iterator function as using arguments.length
    // in the main function will deoptimize the, see #1991.
    function iterator(obj, iteratee, memo, keys, index, length) {
      for (; index >= 0 && index < length; index += dir) {
        var currentKey = keys ? keys[index] : index;
        memo = iteratee(memo, obj[currentKey], currentKey, obj);
      }
      return memo;
    }

    return function(obj, iteratee, memo, context) {
      iteratee = optimizeCb(iteratee, context, 4);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length,
          index = dir > 0 ? 0 : length - 1;
      // Determine the initial value if none is provided.
      if (arguments.length < 3) {
        memo = obj[keys ? keys[index] : index];
        index += dir;
      }
      return iterator(obj, iteratee, memo, keys, index, length);
    };
  }

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.
  _.reduce = _.foldl = _.inject = createReduce(1);

  // The right-associative version of reduce, also known as `foldr`.
  _.reduceRight = _.foldr = createReduce(-1);

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, predicate, context) {
    var key;
    if (isArrayLike(obj)) {
      key = _.findIndex(obj, predicate, context);
    } else {
      key = _.findKey(obj, predicate, context);
    }
    if (key !== void 0 && key !== -1) return obj[key];
  };

  // Return all the elements that pass a truth test.
  // Aliased as `select`.
  _.filter = _.select = function(obj, predicate, context) {
    var results = [];
    predicate = cb(predicate, context);
    _.each(obj, function(value, index, list) {
      if (predicate(value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, predicate, context) {
    return _.filter(obj, _.negate(cb(predicate)), context);
  };

  // Determine whether all of the elements match a truth test.
  // Aliased as `all`.
  _.every = _.all = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj)) return false;
    }
    return true;
  };

  // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.
  _.some = _.any = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj)) return true;
    }
    return false;
  };

  // Determine if the array or object contains a given item (using `===`).
  // Aliased as `includes` and `include`.
  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
    if (!isArrayLike(obj)) obj = _.values(obj);
    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
    return _.indexOf(obj, item, fromIndex) >= 0;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      var func = isFunc ? method : value[method];
      return func == null ? func : func.apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, _.property(key));
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs) {
    return _.filter(obj, _.matcher(attrs));
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.find(obj, _.matcher(attrs));
  };

  // Return the maximum element (or element-based computation).
  _.max = function(obj, iteratee, context) {
    var result = -Infinity, lastComputed = -Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value > result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iteratee, context) {
    var result = Infinity, lastComputed = Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value < result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Shuffle a collection, using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  _.shuffle = function(obj) {
    var set = isArrayLike(obj) ? obj : _.values(obj);
    var length = set.length;
    var shuffled = Array(length);
    for (var index = 0, rand; index < length; index++) {
      rand = _.random(0, index);
      if (rand !== index) shuffled[index] = shuffled[rand];
      shuffled[rand] = set[index];
    }
    return shuffled;
  };

  // Sample **n** random values from a collection.
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function(obj, n, guard) {
    if (n == null || guard) {
      if (!isArrayLike(obj)) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    return _.shuffle(obj).slice(0, Math.max(0, n));
  };

  // Sort the object's values by a criterion produced by an iteratee.
  _.sortBy = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iteratee(value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index - right.index;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(behavior) {
    return function(obj, iteratee, context) {
      var result = {};
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });
      return result;
    };
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
  });

  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function(result, value, key) {
    result[key] = value;
  });

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key]++; else result[key] = 1;
  });

  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (isArrayLike(obj)) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
  };

  // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var pass = [], fail = [];
    _.each(obj, function(value, key, obj) {
      (predicate(value, key, obj) ? pass : fail).push(value);
    });
    return [pass, fail];
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[0];
    return _.initial(array, array.length - n);
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[array.length - 1];
    return _.rest(array, Math.max(0, array.length - n));
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, strict, startIndex) {
    var output = [], idx = 0;
    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
      var value = input[i];
      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
        //flatten current level of array or arguments object
        if (!shallow) value = flatten(value, shallow, strict);
        var j = 0, len = value.length;
        output.length += len;
        while (j < len) {
          output[idx++] = value[j++];
        }
      } else if (!strict) {
        output[idx++] = value;
      }
    }
    return output;
  };

  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, false);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }
    if (iteratee != null) iteratee = cb(iteratee, context);
    var result = [];
    var seen = [];
    for (var i = 0, length = getLength(array); i < length; i++) {
      var value = array[i],
          computed = iteratee ? iteratee(value, i, array) : value;
      if (isSorted) {
        if (!i || seen !== computed) result.push(value);
        seen = computed;
      } else if (iteratee) {
        if (!_.contains(seen, computed)) {
          seen.push(computed);
          result.push(value);
        }
      } else if (!_.contains(result, value)) {
        result.push(value);
      }
    }
    return result;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(flatten(arguments, true, true));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var result = [];
    var argsLength = arguments.length;
    for (var i = 0, length = getLength(array); i < length; i++) {
      var item = array[i];
      if (_.contains(result, item)) continue;
      for (var j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item)) break;
      }
      if (j === argsLength) result.push(item);
    }
    return result;
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = flatten(arguments, true, true, 1);
    return _.filter(array, function(value){
      return !_.contains(rest, value);
    });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    return _.unzip(arguments);
  };

  // Complement of _.zip. Unzip accepts an array of arrays and groups
  // each array's elements on shared indices
  _.unzip = function(array) {
    var length = array && _.max(array, getLength).length || 0;
    var result = Array(length);

    for (var index = 0; index < length; index++) {
      result[index] = _.pluck(array, index);
    }
    return result;
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    var result = {};
    for (var i = 0, length = getLength(list); i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // Generator function to create the findIndex and findLastIndex functions
  function createPredicateIndexFinder(dir) {
    return function(array, predicate, context) {
      predicate = cb(predicate, context);
      var length = getLength(array);
      var index = dir > 0 ? 0 : length - 1;
      for (; index >= 0 && index < length; index += dir) {
        if (predicate(array[index], index, array)) return index;
      }
      return -1;
    };
  }

  // Returns the first index on an array-like that passes a predicate test
  _.findIndex = createPredicateIndexFinder(1);
  _.findLastIndex = createPredicateIndexFinder(-1);

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iteratee, context) {
    iteratee = cb(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0, high = getLength(array);
    while (low < high) {
      var mid = Math.floor((low + high) / 2);
      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
    }
    return low;
  };

  // Generator function to create the indexOf and lastIndexOf functions
  function createIndexFinder(dir, predicateFind, sortedIndex) {
    return function(array, item, idx) {
      var i = 0, length = getLength(array);
      if (typeof idx == 'number') {
        if (dir > 0) {
            i = idx >= 0 ? idx : Math.max(idx + length, i);
        } else {
            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
        }
      } else if (sortedIndex && idx && length) {
        idx = sortedIndex(array, item);
        return array[idx] === item ? idx : -1;
      }
      if (item !== item) {
        idx = predicateFind(slice.call(array, i, length), _.isNaN);
        return idx >= 0 ? idx + i : -1;
      }
      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
        if (array[idx] === item) return idx;
      }
      return -1;
    };
  }

  // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (stop == null) {
      stop = start || 0;
      start = 0;
    }
    step = step || 1;

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);

    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Determines whether to execute a function as a constructor
  // or a normal function with the provided arguments
  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
    var self = baseCreate(sourceFunc.prototype);
    var result = sourceFunc.apply(self, args);
    if (_.isObject(result)) return result;
    return self;
  };

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
    var args = slice.call(arguments, 2);
    var bound = function() {
      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
    };
    return bound;
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder, allowing any combination of arguments to be pre-filled.
  _.partial = function(func) {
    var boundArgs = slice.call(arguments, 1);
    var bound = function() {
      var position = 0, length = boundArgs.length;
      var args = Array(length);
      for (var i = 0; i < length; i++) {
        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
      }
      while (position < arguments.length) args.push(arguments[position++]);
      return executeBound(func, bound, this, this, args);
    };
    return bound;
  };

  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = function(obj) {
    var i, length = arguments.length, key;
    if (length <= 1) throw new Error('bindAll must be passed function names');
    for (i = 1; i < length; i++) {
      key = arguments[i];
      obj[key] = _.bind(obj[key], obj);
    }
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memoize = function(key) {
      var cache = memoize.cache;
      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
      return cache[address];
    };
    memoize.cache = {};
    return memoize;
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){
      return func.apply(null, args);
    }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = _.partial(_.delay, _, 1);

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    if (!options) options = {};
    var later = function() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    };
    return function() {
      var now = _.now();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0 || remaining > wait) {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }
        previous = now;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, args, context, timestamp, result;

    var later = function() {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    };

    return function() {
      context = this;
      args = arguments;
      timestamp = _.now();
      var callNow = immediate && !timeout;
      if (!timeout) timeout = setTimeout(later, wait);
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }

      return result;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return _.partial(wrapper, func);
  };

  // Returns a negated version of the passed-in predicate.
  _.negate = function(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var args = arguments;
    var start = args.length - 1;
    return function() {
      var i = start;
      var result = args[start].apply(this, arguments);
      while (i--) result = args[i].call(this, result);
      return result;
    };
  };

  // Returns a function that will only be executed on and after the Nth call.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Returns a function that will only be executed up to (but not including) the Nth call.
  _.before = function(times, func) {
    var memo;
    return function() {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      }
      if (times <= 1) func = null;
      return memo;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = _.partial(_.before, 2);

  // Object Functions
  // ----------------

  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  function collectNonEnumProps(obj, keys) {
    var nonEnumIdx = nonEnumerableProps.length;
    var constructor = obj.constructor;
    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;

    // Constructor is a special case.
    var prop = 'constructor';
    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

    while (nonEnumIdx--) {
      prop = nonEnumerableProps[nonEnumIdx];
      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
        keys.push(prop);
      }
    }
  }

  // Retrieve the names of an object's own properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = function(obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve all the property names of an object.
  _.allKeys = function(obj) {
    if (!_.isObject(obj)) return [];
    var keys = [];
    for (var key in obj) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };

  // Returns the results of applying the iteratee to each element of the object
  // In contrast to _.map it returns an object
  _.mapObject = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys =  _.keys(obj),
          length = keys.length,
          results = {},
          currentKey;
      for (var index = 0; index < length; index++) {
        currentKey = keys[index];
        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
      }
      return results;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = createAssigner(_.allKeys);

  // Assigns a given object with all the own properties in the passed-in object(s)
  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
  _.extendOwn = _.assign = createAssigner(_.keys);

  // Returns the first key on an object that passes a predicate test
  _.findKey = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = _.keys(obj), key;
    for (var i = 0, length = keys.length; i < length; i++) {
      key = keys[i];
      if (predicate(obj[key], key, obj)) return key;
    }
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(object, oiteratee, context) {
    var result = {}, obj = object, iteratee, keys;
    if (obj == null) return result;
    if (_.isFunction(oiteratee)) {
      keys = _.allKeys(obj);
      iteratee = optimizeCb(oiteratee, context);
    } else {
      keys = flatten(arguments, false, false, 1);
      iteratee = function(value, key, obj) { return key in obj; };
      obj = Object(obj);
    }
    for (var i = 0, length = keys.length; i < length; i++) {
      var key = keys[i];
      var value = obj[key];
      if (iteratee(value, key, obj)) result[key] = value;
    }
    return result;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj, iteratee, context) {
    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
    } else {
      var keys = _.map(flatten(arguments, false, false, 1), String);
      iteratee = function(value, key) {
        return !_.contains(keys, key);
      };
    }
    return _.pick(obj, iteratee, context);
  };

  // Fill in a given object with default properties.
  _.defaults = createAssigner(_.allKeys, true);

  // Creates an object that inherits from the given prototype object.
  // If additional properties are provided then they will be added to the
  // created object.
  _.create = function(prototype, props) {
    var result = baseCreate(prototype);
    if (props) _.extendOwn(result, props);
    return result;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Returns whether an object has a given set of `key:value` pairs.
  _.isMatch = function(object, attrs) {
    var keys = _.keys(attrs), length = keys.length;
    if (object == null) return !length;
    var obj = Object(object);
    for (var i = 0; i < length; i++) {
      var key = keys[i];
      if (attrs[key] !== obj[key] || !(key in obj)) return false;
    }
    return true;
  };


  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a === 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className !== toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
      case '[object RegExp]':
      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return '' + a === '' + b;
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive.
        // Object(NaN) is equivalent to NaN
        if (+a !== +a) return +b !== +b;
        // An `egal` comparison is performed for other numeric values.
        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a === +b;
    }

    var areArrays = className === '[object Array]';
    if (!areArrays) {
      if (typeof a != 'object' || typeof b != 'object') return false;

      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
      // from different frames are.
      var aCtor = a.constructor, bCtor = b.constructor;
      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
                               _.isFunction(bCtor) && bCtor instanceof bCtor)
                          && ('constructor' in a && 'constructor' in b)) {
        return false;
      }
    }
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

    // Initializing stack of traversed objects.
    // It's done here since we only need them for objects and arrays comparison.
    aStack = aStack || [];
    bStack = bStack || [];
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a) return bStack[length] === b;
    }

    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);

    // Recursively compare objects and arrays.
    if (areArrays) {
      // Compare array lengths to determine if a deep comparison is necessary.
      length = a.length;
      if (length !== b.length) return false;
      // Deep compare the contents, ignoring non-numeric properties.
      while (length--) {
        if (!eq(a[length], b[length], aStack, bStack)) return false;
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a), key;
      length = keys.length;
      // Ensure that both objects contain the same number of properties before comparing deep equality.
      if (_.keys(b).length !== length) return false;
      while (length--) {
        // Deep compare each member
        key = keys[length];
        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return true;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
    return _.keys(obj).length === 0;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) === '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE < 9), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return _.has(obj, 'callee');
    };
  }

  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
  // IE 11 (#1621), and in Safari 8 (#1929).
  if (typeof /./ != 'function' && typeof Int8Array != 'object') {
    _.isFunction = function(obj) {
      return typeof obj == 'function' || false;
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj !== +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return obj != null && hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iteratees.
  _.identity = function(value) {
    return value;
  };

  // Predicate-generating functions. Often useful outside of Underscore.
  _.constant = function(value) {
    return function() {
      return value;
    };
  };

  _.noop = function(){};

  _.property = property;

  // Generates a function for a given object that returns a given property.
  _.propertyOf = function(obj) {
    return obj == null ? function(){} : function(key) {
      return obj[key];
    };
  };

  // Returns a predicate for checking whether an object has a given set of
  // `key:value` pairs.
  _.matcher = _.matches = function(attrs) {
    attrs = _.extendOwn({}, attrs);
    return function(obj) {
      return _.isMatch(obj, attrs);
    };
  };

  // Run a function **n** times.
  _.times = function(n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = optimizeCb(iteratee, context, 1);
    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function() {
    return new Date().getTime();
  };

   // List of HTML entities for escaping.
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };
  var unescapeMap = _.invert(escapeMap);

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function(map) {
    var escaper = function(match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped
    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function(string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };
  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap);

  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function(object, property, fallback) {
    var value = object == null ? void 0 : object[property];
    if (value === void 0) {
      value = fallback;
    }
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

  var escapeChar = function(match) {
    return '\\' + escapes[match];
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.
  _.template = function(text, settings, oldSettings) {
    if (!settings && oldSettings) settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escaper, escapeChar);
      index = offset + match.length;

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      } else if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      } else if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }

      // Adobe VMs need the match returned to produce the correct offest.
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + 'return __p;\n';

    try {
      var render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled source as a convenience for precompilation.
    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function. Start chaining a wrapped Underscore object.
  _.chain = function(obj) {
    var instance = _(obj);
    instance._chain = true;
    return instance;
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(instance, obj) {
    return instance._chain ? _(obj).chain() : obj;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    _.each(_.functions(obj), function(name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result(this, func.apply(_, args));
      };
    });
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
      return result(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  _.each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result(this, method.apply(this._wrapped, arguments));
    };
  });

  // Extracts the result from a wrapped and chained object.
  _.prototype.value = function() {
    return this._wrapped;
  };

  // Provide unwrapping proxy for some methods used in engine operations
  // such as arithmetic and JSON stringification.
  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

  _.prototype.toString = function() {
    return '' + this._wrapped;
  };

  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
      return _;
    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
}.call(this));


/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(jQuery) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RupResponsiveDemoApp; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_marionette__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_marionette___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_marionette__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_shared_main_mainView__ = __webpack_require__(97);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_shared_main_mainView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_shared_main_mainView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_pages_index_indexView__ = __webpack_require__(84);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_pages_index_indexView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_pages_index_indexView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_styleGuide_styleGuideView__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_styleGuide_styleGuideView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_styleGuide_styleGuideView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_styleGuide_bt3_styleGuideView__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_styleGuide_bt3_styleGuideView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_styleGuide_bt3_styleGuideView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_styleGuide_bt4_styleGuideView__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_styleGuide_bt4_styleGuideView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_styleGuide_bt4_styleGuideView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_components_autocomplete_autocompleteView__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_components_autocomplete_autocompleteView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_components_autocomplete_autocompleteView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_components_feedback_feedbackView__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_components_feedback_feedbackView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_components_feedback_feedbackView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_components_tooltip_tooltipView__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_components_tooltip_tooltipView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_components_tooltip_tooltipView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_components_message_messageView__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_components_message_messageView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_components_message_messageView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_components_dialog_dialogView__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_components_dialog_dialogView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_components_dialog_dialogView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_components_progressbar_progressbarView__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_components_progressbar_progressbarView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_components_progressbar_progressbarView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_components_contextMenu_contextMenuView__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_components_contextMenu_contextMenuView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_components_contextMenu_contextMenuView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_components_button_buttonView__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_components_button_buttonView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_components_button_buttonView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_components_toolbar_toolbarView__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_components_toolbar_toolbarView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_components_toolbar_toolbarView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_components_date_dateView__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_components_date_dateView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_components_date_dateView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_components_form_formView__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_components_form_formView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_components_form_formView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_components_time_timeView__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_components_time_timeView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_components_time_timeView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_components_accordion_accordionView__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_components_accordion_accordionView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_components_accordion_accordionView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_components_slider_sliderView__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_components_slider_sliderView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_components_slider_sliderView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_components_spinner_spinnerView__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_components_spinner_spinnerView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_20_components_spinner_spinnerView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_components_upload_uploadView__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_components_upload_uploadView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21_components_upload_uploadView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_components_validate_validateView__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_components_validate_validateView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_22_components_validate_validateView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23_components_chart_chartView__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23_components_chart_chartView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_23_components_chart_chartView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24_components_tree_examples_treeView__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24_components_tree_examples_treeView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_24_components_tree_examples_treeView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25_components_tree_dragDrop_treeDragDropView__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25_components_tree_dragDrop_treeDragDropView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_25_components_tree_dragDrop_treeDragDropView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26_components_tabs_tabsStaticView__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26_components_tabs_tabsStaticView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_26_components_tabs_tabsStaticView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27_components_wizard_simple_wizardSimpleView__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27_components_wizard_simple_wizardSimpleView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_27_components_wizard_simple_wizardSimpleView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28_components_wizard_dynamic_wizardDynamicView__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28_components_wizard_dynamic_wizardDynamicView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_28_components_wizard_dynamic_wizardDynamicView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29_components_combo_comboSimple_comboSimpleView__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29_components_combo_comboSimple_comboSimpleView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_29_components_combo_comboSimple_comboSimpleView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30_table_tableFilterView__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30_table_tableFilterView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_30_table_tableFilterView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31_responsiveGrid_stackedHorizontal_stackedHorizontalView__ = __webpack_require__(93);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31_responsiveGrid_stackedHorizontal_stackedHorizontalView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_31_responsiveGrid_stackedHorizontal_stackedHorizontalView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32_responsiveGrid_mobileDesktop_mobileDesktopView__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32_responsiveGrid_mobileDesktop_mobileDesktopView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_32_responsiveGrid_mobileDesktop_mobileDesktopView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33_responsiveGrid_mobileTabletDesktop_mobileTabletDesktopView__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33_responsiveGrid_mobileTabletDesktop_mobileTabletDesktopView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_33_responsiveGrid_mobileTabletDesktop_mobileTabletDesktopView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34_dashboard_dashboardView__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34_dashboard_dashboardView___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_34_dashboard_dashboardView__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35_datatable_datatableView__ = __webpack_require__(82);







































var RupResponsiveDemoApp = new __WEBPACK_IMPORTED_MODULE_0_marionette__["Application"]();

var MyRouter = __WEBPACK_IMPORTED_MODULE_0_marionette__["AppRouter"].extend({
	appRoutes: {
		'' : 'index',
		'styleGuide' : 'styleGuide',
		'bt3StyleGuide' : 'bt3StyleGuide',
		'bt4StyleGuide' : 'bt4StyleGuide',
		'autocomplete' : 'autocomplete',
		'feedback' : 'feedback',
		'tooltip' : 'tooltip',
		'message' : 'message',
		'dialog' : 'dialog',
		'progressbar' : 'progressbar',
		'contextMenu' : 'contextMenu',
		'button' : 'button',
		'toolbar' : 'toolbar',
		'date' : 'date',
		'form' : 'form',
		'time' : 'time',
		'accordion' : 'accordion',
		'slider' : 'slider',
		'spinner' : 'spinner',
		'upload' : 'upload',
		'validate' : 'validate',
		'chart' : 'chart',
		'treeExamples' : 'treeExamples',
		'treeDragDrop' : 'treeDragDrop',
		'tabsStatic' : 'tabsStatic',
		'wizardSimple' : 'wizardSimple',
		'wizardDynamic' : 'wizardDynamic',
		'comboSimple' : 'comboSimple',
		'tableFilter' : 'tableFilter',
		'stackedHorizontal': 'stackedHorizontal',
		'mobileDesktop': 'mobileDesktop',
		'mobileTabletDesktop': 'mobileTabletDesktop',
		'mobileTabletDesktop': 'mobileTabletDesktop',
		'dashboard': 'dashboard',
		'datatable': 'datatable'
	}
});

var RouteController = __WEBPACK_IMPORTED_MODULE_0_marionette__["Controller"].extend({
	index: function() {
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_2_pages_index_indexView___default.a());
	},
	styleGuide: function() {
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_3_styleGuide_styleGuideView___default.a());
	},
	bt3StyleGuide: function() {
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_4_styleGuide_bt3_styleGuideView___default.a());
	},
	bt4StyleGuide: function() {
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_5_styleGuide_bt4_styleGuideView___default.a());
	},
	autocomplete: function() {
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_6_components_autocomplete_autocompleteView___default.a());
	},
	feedback: function() {
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_7_components_feedback_feedbackView___default.a());
	},
	tooltip: function() {
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_8_components_tooltip_tooltipView___default.a());
	},
	button: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_13_components_button_buttonView___default.a());
	},
	toolbar: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_14_components_toolbar_toolbarView___default.a());
	},
	date: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_15_components_date_dateView___default.a());
	},
	form: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_16_components_form_formView___default.a());
	},
	time: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_17_components_time_timeView___default.a());
	},
	message: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_9_components_message_messageView___default.a());
	},
	dialog: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_10_components_dialog_dialogView___default.a());
	},
	progressbar: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_11_components_progressbar_progressbarView___default.a());
	},
	contextMenu: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_12_components_contextMenu_contextMenuView___default.a());
	},
	accordion: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_18_components_accordion_accordionView___default.a());
	},
	slider: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_19_components_slider_sliderView___default.a());
	},
	spinner: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_20_components_spinner_spinnerView___default.a());
	},
	upload: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_21_components_upload_uploadView___default.a());
	},
	validate: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_22_components_validate_validateView___default.a());
	},
	chart: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_23_components_chart_chartView___default.a());
	},
	treeExamples: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_24_components_tree_examples_treeView___default.a());
	},
	treeDragDrop: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_25_components_tree_dragDrop_treeDragDropView___default.a());
	},
	spinner: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_20_components_spinner_spinnerView___default.a());
	},
	tabsStatic: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_26_components_tabs_tabsStaticView___default.a());
	},
	wizardSimple: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_27_components_wizard_simple_wizardSimpleView___default.a());
	},
	wizardDynamic: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_28_components_wizard_dynamic_wizardDynamicView___default.a());
	},
	comboSimple: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_29_components_combo_comboSimple_comboSimpleView___default.a());
	},
	tableFilter: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_30_table_tableFilterView___default.a());
	},
	stackedHorizontal: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_31_responsiveGrid_stackedHorizontal_stackedHorizontalView___default.a());
	},
	mobileDesktop: function(){

		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_32_responsiveGrid_mobileDesktop_mobileDesktopView___default.a());
	},
	mobileTabletDesktop: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_33_responsiveGrid_mobileTabletDesktop_mobileTabletDesktopView___default.a());
	},
	dashboard: function(){
		jQuery(RupResponsiveDemoApp.mainView.Container.el).addClass('dashboard-content');
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_34_dashboard_dashboardView___default.a());
	},
	datatable: function(){
		RupResponsiveDemoApp.mainView.Container.show(new __WEBPACK_IMPORTED_MODULE_35_datatable_datatableView__["a" /* default */]());
	}
});




RupResponsiveDemoApp.on('start', function(){
	RupResponsiveDemoApp.Controller = new RouteController();

	RupResponsiveDemoApp.router = new MyRouter({
		controller: RupResponsiveDemoApp.Controller
	});
	Backbone.history.start();
});


RupResponsiveDemoApp.mainView = new __WEBPACK_IMPORTED_MODULE_1_shared_main_mainView___default.a();
RupResponsiveDemoApp.mainView.render();




/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(2)))

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {/*!
 * Bootstrap v4.0.0-alpha.5 (https://getbootstrap.com)
 * Copyright 2011-2016 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(a){var b=a.fn.jquery.split(" ")[0].split(".");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>=4)throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}(jQuery),+function(){function a(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!b||"object"!=typeof b&&"function"!=typeof b?a:b}function b(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},e=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),f=function(a){function b(a){return{}.toString.call(a).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}function c(a){return(a[0]||a).nodeType}function d(){return{bindType:h.end,delegateType:h.end,handle:function(b){if(a(b.target).is(this))return b.handleObj.handler.apply(this,arguments)}}}function e(){if(window.QUnit)return!1;var a=document.createElement("bootstrap");for(var b in j)if(void 0!==a.style[b])return{end:j[b]};return!1}function f(b){var c=this,d=!1;return a(this).one(k.TRANSITION_END,function(){d=!0}),setTimeout(function(){d||k.triggerTransitionEnd(c)},b),this}function g(){h=e(),a.fn.emulateTransitionEnd=f,k.supportsTransitionEnd()&&(a.event.special[k.TRANSITION_END]=d())}var h=!1,i=1e6,j={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"},k={TRANSITION_END:"bsTransitionEnd",getUID:function(a){do a+=~~(Math.random()*i);while(document.getElementById(a));return a},getSelectorFromElement:function(a){var b=a.getAttribute("data-target");return b||(b=a.getAttribute("href")||"",b=/^#[a-z]/i.test(b)?b:null),b},reflow:function(a){new Function("bs","return bs")(a.offsetHeight)},triggerTransitionEnd:function(b){a(b).trigger(h.end)},supportsTransitionEnd:function(){return Boolean(h)},typeCheckConfig:function(a,d,e){for(var f in e)if(e.hasOwnProperty(f)){var g=e[f],h=d[f],i=void 0;if(i=h&&c(h)?"element":b(h),!new RegExp(g).test(i))throw new Error(a.toUpperCase()+": "+('Option "'+f+'" provided type "'+i+'" ')+('but expected type "'+g+'".'))}}};return g(),k}(jQuery),g=(function(a){var b="alert",d="4.0.0-alpha.5",g="bs.alert",h="."+g,i=".data-api",j=a.fn[b],k=150,l={DISMISS:'[data-dismiss="alert"]'},m={CLOSE:"close"+h,CLOSED:"closed"+h,CLICK_DATA_API:"click"+h+i},n={ALERT:"alert",FADE:"fade",IN:"in"},o=function(){function b(a){c(this,b),this._element=a}return b.prototype.close=function(a){a=a||this._element;var b=this._getRootElement(a),c=this._triggerCloseEvent(b);c.isDefaultPrevented()||this._removeElement(b)},b.prototype.dispose=function(){a.removeData(this._element,g),this._element=null},b.prototype._getRootElement=function(b){var c=f.getSelectorFromElement(b),d=!1;return c&&(d=a(c)[0]),d||(d=a(b).closest("."+n.ALERT)[0]),d},b.prototype._triggerCloseEvent=function(b){var c=a.Event(m.CLOSE);return a(b).trigger(c),c},b.prototype._removeElement=function(b){return a(b).removeClass(n.IN),f.supportsTransitionEnd()&&a(b).hasClass(n.FADE)?void a(b).one(f.TRANSITION_END,a.proxy(this._destroyElement,this,b)).emulateTransitionEnd(k):void this._destroyElement(b)},b.prototype._destroyElement=function(b){a(b).detach().trigger(m.CLOSED).remove()},b._jQueryInterface=function(c){return this.each(function(){var d=a(this),e=d.data(g);e||(e=new b(this),d.data(g,e)),"close"===c&&e[c](this)})},b._handleDismiss=function(a){return function(b){b&&b.preventDefault(),a.close(this)}},e(b,null,[{key:"VERSION",get:function(){return d}}]),b}();return a(document).on(m.CLICK_DATA_API,l.DISMISS,o._handleDismiss(new o)),a.fn[b]=o._jQueryInterface,a.fn[b].Constructor=o,a.fn[b].noConflict=function(){return a.fn[b]=j,o._jQueryInterface},o}(jQuery),function(a){var b="button",d="4.0.0-alpha.5",f="bs.button",g="."+f,h=".data-api",i=a.fn[b],j={ACTIVE:"active",BUTTON:"btn",FOCUS:"focus"},k={DATA_TOGGLE_CARROT:'[data-toggle^="button"]',DATA_TOGGLE:'[data-toggle="buttons"]',INPUT:"input",ACTIVE:".active",BUTTON:".btn"},l={CLICK_DATA_API:"click"+g+h,FOCUS_BLUR_DATA_API:"focus"+g+h+" "+("blur"+g+h)},m=function(){function b(a){c(this,b),this._element=a}return b.prototype.toggle=function(){var b=!0,c=a(this._element).closest(k.DATA_TOGGLE)[0];if(c){var d=a(this._element).find(k.INPUT)[0];if(d){if("radio"===d.type)if(d.checked&&a(this._element).hasClass(j.ACTIVE))b=!1;else{var e=a(c).find(k.ACTIVE)[0];e&&a(e).removeClass(j.ACTIVE)}b&&(d.checked=!a(this._element).hasClass(j.ACTIVE),a(this._element).trigger("change")),d.focus()}}else this._element.setAttribute("aria-pressed",!a(this._element).hasClass(j.ACTIVE));b&&a(this._element).toggleClass(j.ACTIVE)},b.prototype.dispose=function(){a.removeData(this._element,f),this._element=null},b._jQueryInterface=function(c){return this.each(function(){var d=a(this).data(f);d||(d=new b(this),a(this).data(f,d)),"toggle"===c&&d[c]()})},e(b,null,[{key:"VERSION",get:function(){return d}}]),b}();return a(document).on(l.CLICK_DATA_API,k.DATA_TOGGLE_CARROT,function(b){b.preventDefault();var c=b.target;a(c).hasClass(j.BUTTON)||(c=a(c).closest(k.BUTTON)),m._jQueryInterface.call(a(c),"toggle")}).on(l.FOCUS_BLUR_DATA_API,k.DATA_TOGGLE_CARROT,function(b){var c=a(b.target).closest(k.BUTTON)[0];a(c).toggleClass(j.FOCUS,/^focus(in)?$/.test(b.type))}),a.fn[b]=m._jQueryInterface,a.fn[b].Constructor=m,a.fn[b].noConflict=function(){return a.fn[b]=i,m._jQueryInterface},m}(jQuery),function(a){var b="carousel",g="4.0.0-alpha.5",h="bs.carousel",i="."+h,j=".data-api",k=a.fn[b],l=600,m=37,n=39,o={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0},p={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean"},q={NEXT:"next",PREVIOUS:"prev"},r={SLIDE:"slide"+i,SLID:"slid"+i,KEYDOWN:"keydown"+i,MOUSEENTER:"mouseenter"+i,MOUSELEAVE:"mouseleave"+i,LOAD_DATA_API:"load"+i+j,CLICK_DATA_API:"click"+i+j},s={CAROUSEL:"carousel",ACTIVE:"active",SLIDE:"slide",RIGHT:"right",LEFT:"left",ITEM:"carousel-item"},t={ACTIVE:".active",ACTIVE_ITEM:".active.carousel-item",ITEM:".carousel-item",NEXT_PREV:".next, .prev",INDICATORS:".carousel-indicators",DATA_SLIDE:"[data-slide], [data-slide-to]",DATA_RIDE:'[data-ride="carousel"]'},u=function(){function j(b,d){c(this,j),this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this._config=this._getConfig(d),this._element=a(b)[0],this._indicatorsElement=a(this._element).find(t.INDICATORS)[0],this._addEventListeners()}return j.prototype.next=function(){this._isSliding||this._slide(q.NEXT)},j.prototype.nextWhenVisible=function(){document.hidden||this.next()},j.prototype.prev=function(){this._isSliding||this._slide(q.PREVIOUS)},j.prototype.pause=function(b){b||(this._isPaused=!0),a(this._element).find(t.NEXT_PREV)[0]&&f.supportsTransitionEnd()&&(f.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},j.prototype.cycle=function(b){b||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval(a.proxy(document.visibilityState?this.nextWhenVisible:this.next,this),this._config.interval))},j.prototype.to=function(b){var c=this;this._activeElement=a(this._element).find(t.ACTIVE_ITEM)[0];var d=this._getItemIndex(this._activeElement);if(!(b>this._items.length-1||b<0)){if(this._isSliding)return void a(this._element).one(r.SLID,function(){return c.to(b)});if(d===b)return this.pause(),void this.cycle();var e=b>d?q.NEXT:q.PREVIOUS;this._slide(e,this._items[b])}},j.prototype.dispose=function(){a(this._element).off(i),a.removeData(this._element,h),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},j.prototype._getConfig=function(c){return c=a.extend({},o,c),f.typeCheckConfig(b,c,p),c},j.prototype._addEventListeners=function(){this._config.keyboard&&a(this._element).on(r.KEYDOWN,a.proxy(this._keydown,this)),"hover"!==this._config.pause||"ontouchstart"in document.documentElement||a(this._element).on(r.MOUSEENTER,a.proxy(this.pause,this)).on(r.MOUSELEAVE,a.proxy(this.cycle,this))},j.prototype._keydown=function(a){if(a.preventDefault(),!/input|textarea/i.test(a.target.tagName))switch(a.which){case m:this.prev();break;case n:this.next();break;default:return}},j.prototype._getItemIndex=function(b){return this._items=a.makeArray(a(b).parent().find(t.ITEM)),this._items.indexOf(b)},j.prototype._getItemByDirection=function(a,b){var c=a===q.NEXT,d=a===q.PREVIOUS,e=this._getItemIndex(b),f=this._items.length-1,g=d&&0===e||c&&e===f;if(g&&!this._config.wrap)return b;var h=a===q.PREVIOUS?-1:1,i=(e+h)%this._items.length;return i===-1?this._items[this._items.length-1]:this._items[i]},j.prototype._triggerSlideEvent=function(b,c){var d=a.Event(r.SLIDE,{relatedTarget:b,direction:c});return a(this._element).trigger(d),d},j.prototype._setActiveIndicatorElement=function(b){if(this._indicatorsElement){a(this._indicatorsElement).find(t.ACTIVE).removeClass(s.ACTIVE);var c=this._indicatorsElement.children[this._getItemIndex(b)];c&&a(c).addClass(s.ACTIVE)}},j.prototype._slide=function(b,c){var d=this,e=a(this._element).find(t.ACTIVE_ITEM)[0],g=c||e&&this._getItemByDirection(b,e),h=Boolean(this._interval),i=b===q.NEXT?s.LEFT:s.RIGHT;if(g&&a(g).hasClass(s.ACTIVE))return void(this._isSliding=!1);var j=this._triggerSlideEvent(g,i);if(!j.isDefaultPrevented()&&e&&g){this._isSliding=!0,h&&this.pause(),this._setActiveIndicatorElement(g);var k=a.Event(r.SLID,{relatedTarget:g,direction:i});f.supportsTransitionEnd()&&a(this._element).hasClass(s.SLIDE)?(a(g).addClass(b),f.reflow(g),a(e).addClass(i),a(g).addClass(i),a(e).one(f.TRANSITION_END,function(){a(g).removeClass(i).removeClass(b),a(g).addClass(s.ACTIVE),a(e).removeClass(s.ACTIVE).removeClass(b).removeClass(i),d._isSliding=!1,setTimeout(function(){return a(d._element).trigger(k)},0)}).emulateTransitionEnd(l)):(a(e).removeClass(s.ACTIVE),a(g).addClass(s.ACTIVE),this._isSliding=!1,a(this._element).trigger(k)),h&&this.cycle()}},j._jQueryInterface=function(b){return this.each(function(){var c=a(this).data(h),e=a.extend({},o,a(this).data());"object"===("undefined"==typeof b?"undefined":d(b))&&a.extend(e,b);var f="string"==typeof b?b:e.slide;if(c||(c=new j(this,e),a(this).data(h,c)),"number"==typeof b)c.to(b);else if("string"==typeof f){if(void 0===c[f])throw new Error('No method named "'+f+'"');c[f]()}else e.interval&&(c.pause(),c.cycle())})},j._dataApiClickHandler=function(b){var c=f.getSelectorFromElement(this);if(c){var d=a(c)[0];if(d&&a(d).hasClass(s.CAROUSEL)){var e=a.extend({},a(d).data(),a(this).data()),g=this.getAttribute("data-slide-to");g&&(e.interval=!1),j._jQueryInterface.call(a(d),e),g&&a(d).data(h).to(g),b.preventDefault()}}},e(j,null,[{key:"VERSION",get:function(){return g}},{key:"Default",get:function(){return o}}]),j}();return a(document).on(r.CLICK_DATA_API,t.DATA_SLIDE,u._dataApiClickHandler),a(window).on(r.LOAD_DATA_API,function(){a(t.DATA_RIDE).each(function(){var b=a(this);u._jQueryInterface.call(b,b.data())})}),a.fn[b]=u._jQueryInterface,a.fn[b].Constructor=u,a.fn[b].noConflict=function(){return a.fn[b]=k,u._jQueryInterface},u}(jQuery),function(a){var b="collapse",g="4.0.0-alpha.5",h="bs.collapse",i="."+h,j=".data-api",k=a.fn[b],l=600,m={toggle:!0,parent:""},n={toggle:"boolean",parent:"string"},o={SHOW:"show"+i,SHOWN:"shown"+i,HIDE:"hide"+i,HIDDEN:"hidden"+i,CLICK_DATA_API:"click"+i+j},p={IN:"in",COLLAPSE:"collapse",COLLAPSING:"collapsing",COLLAPSED:"collapsed"},q={WIDTH:"width",HEIGHT:"height"},r={ACTIVES:".card > .in, .card > .collapsing",DATA_TOGGLE:'[data-toggle="collapse"]'},s=function(){function i(b,d){c(this,i),this._isTransitioning=!1,this._element=b,this._config=this._getConfig(d),this._triggerArray=a.makeArray(a('[data-toggle="collapse"][href="#'+b.id+'"],'+('[data-toggle="collapse"][data-target="#'+b.id+'"]'))),this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}return i.prototype.toggle=function(){a(this._element).hasClass(p.IN)?this.hide():this.show()},i.prototype.show=function(){var b=this;if(!this._isTransitioning&&!a(this._element).hasClass(p.IN)){var c=void 0,d=void 0;if(this._parent&&(c=a.makeArray(a(r.ACTIVES)),c.length||(c=null)),!(c&&(d=a(c).data(h),d&&d._isTransitioning))){var e=a.Event(o.SHOW);if(a(this._element).trigger(e),!e.isDefaultPrevented()){c&&(i._jQueryInterface.call(a(c),"hide"),d||a(c).data(h,null));var g=this._getDimension();a(this._element).removeClass(p.COLLAPSE).addClass(p.COLLAPSING),this._element.style[g]=0,this._element.setAttribute("aria-expanded",!0),this._triggerArray.length&&a(this._triggerArray).removeClass(p.COLLAPSED).attr("aria-expanded",!0),this.setTransitioning(!0);var j=function(){a(b._element).removeClass(p.COLLAPSING).addClass(p.COLLAPSE).addClass(p.IN),b._element.style[g]="",b.setTransitioning(!1),a(b._element).trigger(o.SHOWN)};if(!f.supportsTransitionEnd())return void j();var k=g[0].toUpperCase()+g.slice(1),m="scroll"+k;a(this._element).one(f.TRANSITION_END,j).emulateTransitionEnd(l),this._element.style[g]=this._element[m]+"px"}}}},i.prototype.hide=function(){var b=this;if(!this._isTransitioning&&a(this._element).hasClass(p.IN)){var c=a.Event(o.HIDE);if(a(this._element).trigger(c),!c.isDefaultPrevented()){var d=this._getDimension(),e=d===q.WIDTH?"offsetWidth":"offsetHeight";this._element.style[d]=this._element[e]+"px",f.reflow(this._element),a(this._element).addClass(p.COLLAPSING).removeClass(p.COLLAPSE).removeClass(p.IN),this._element.setAttribute("aria-expanded",!1),this._triggerArray.length&&a(this._triggerArray).addClass(p.COLLAPSED).attr("aria-expanded",!1),this.setTransitioning(!0);var g=function(){b.setTransitioning(!1),a(b._element).removeClass(p.COLLAPSING).addClass(p.COLLAPSE).trigger(o.HIDDEN)};return this._element.style[d]="",f.supportsTransitionEnd()?void a(this._element).one(f.TRANSITION_END,g).emulateTransitionEnd(l):void g()}}},i.prototype.setTransitioning=function(a){this._isTransitioning=a},i.prototype.dispose=function(){a.removeData(this._element,h),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},i.prototype._getConfig=function(c){return c=a.extend({},m,c),c.toggle=Boolean(c.toggle),f.typeCheckConfig(b,c,n),c},i.prototype._getDimension=function(){var b=a(this._element).hasClass(q.WIDTH);return b?q.WIDTH:q.HEIGHT},i.prototype._getParent=function(){var b=this,c=a(this._config.parent)[0],d='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]';return a(c).find(d).each(function(a,c){b._addAriaAndCollapsedClass(i._getTargetFromElement(c),[c])}),c},i.prototype._addAriaAndCollapsedClass=function(b,c){if(b){var d=a(b).hasClass(p.IN);b.setAttribute("aria-expanded",d),c.length&&a(c).toggleClass(p.COLLAPSED,!d).attr("aria-expanded",d)}},i._getTargetFromElement=function(b){var c=f.getSelectorFromElement(b);return c?a(c)[0]:null},i._jQueryInterface=function(b){return this.each(function(){var c=a(this),e=c.data(h),f=a.extend({},m,c.data(),"object"===("undefined"==typeof b?"undefined":d(b))&&b);if(!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||(e=new i(this,f),c.data(h,e)),"string"==typeof b){if(void 0===e[b])throw new Error('No method named "'+b+'"');e[b]()}})},e(i,null,[{key:"VERSION",get:function(){return g}},{key:"Default",get:function(){return m}}]),i}();return a(document).on(o.CLICK_DATA_API,r.DATA_TOGGLE,function(b){b.preventDefault();var c=s._getTargetFromElement(this),d=a(c).data(h),e=d?"toggle":a(this).data();s._jQueryInterface.call(a(c),e)}),a.fn[b]=s._jQueryInterface,a.fn[b].Constructor=s,a.fn[b].noConflict=function(){return a.fn[b]=k,s._jQueryInterface},s}(jQuery),function(a){var b="dropdown",d="4.0.0-alpha.5",g="bs.dropdown",h="."+g,i=".data-api",j=a.fn[b],k=27,l=38,m=40,n=3,o={HIDE:"hide"+h,HIDDEN:"hidden"+h,SHOW:"show"+h,SHOWN:"shown"+h,CLICK:"click"+h,CLICK_DATA_API:"click"+h+i,KEYDOWN_DATA_API:"keydown"+h+i},p={BACKDROP:"dropdown-backdrop",DISABLED:"disabled",OPEN:"open"},q={BACKDROP:".dropdown-backdrop",DATA_TOGGLE:'[data-toggle="dropdown"]',FORM_CHILD:".dropdown form",ROLE_MENU:'[role="menu"]',ROLE_LISTBOX:'[role="listbox"]',NAVBAR_NAV:".navbar-nav",VISIBLE_ITEMS:'[role="menu"] li:not(.disabled) a, [role="listbox"] li:not(.disabled) a'},r=function(){function b(a){c(this,b),this._element=a,this._addEventListeners()}return b.prototype.toggle=function(){if(this.disabled||a(this).hasClass(p.DISABLED))return!1;var c=b._getParentFromElement(this),d=a(c).hasClass(p.OPEN);if(b._clearMenus(),d)return!1;if("ontouchstart"in document.documentElement&&!a(c).closest(q.NAVBAR_NAV).length){var e=document.createElement("div");e.className=p.BACKDROP,a(e).insertBefore(this),a(e).on("click",b._clearMenus)}var f={relatedTarget:this},g=a.Event(o.SHOW,f);return a(c).trigger(g),!g.isDefaultPrevented()&&(this.focus(),this.setAttribute("aria-expanded","true"),a(c).toggleClass(p.OPEN),a(c).trigger(a.Event(o.SHOWN,f)),!1)},b.prototype.dispose=function(){a.removeData(this._element,g),a(this._element).off(h),this._element=null},b.prototype._addEventListeners=function(){a(this._element).on(o.CLICK,this.toggle)},b._jQueryInterface=function(c){return this.each(function(){var d=a(this).data(g);if(d||a(this).data(g,d=new b(this)),"string"==typeof c){if(void 0===d[c])throw new Error('No method named "'+c+'"');d[c].call(this)}})},b._clearMenus=function(c){if(!c||c.which!==n){var d=a(q.BACKDROP)[0];d&&d.parentNode.removeChild(d);for(var e=a.makeArray(a(q.DATA_TOGGLE)),f=0;f<e.length;f++){var g=b._getParentFromElement(e[f]),h={relatedTarget:e[f]};if(a(g).hasClass(p.OPEN)&&!(c&&"click"===c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(g,c.target))){var i=a.Event(o.HIDE,h);a(g).trigger(i),i.isDefaultPrevented()||(e[f].setAttribute("aria-expanded","false"),a(g).removeClass(p.OPEN).trigger(a.Event(o.HIDDEN,h)))}}}},b._getParentFromElement=function(b){var c=void 0,d=f.getSelectorFromElement(b);return d&&(c=a(d)[0]),c||b.parentNode},b._dataApiKeydownHandler=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)&&(c.preventDefault(),c.stopPropagation(),!this.disabled&&!a(this).hasClass(p.DISABLED))){var d=b._getParentFromElement(this),e=a(d).hasClass(p.OPEN);if(!e&&c.which!==k||e&&c.which===k){if(c.which===k){var f=a(d).find(q.DATA_TOGGLE)[0];a(f).trigger("focus")}return void a(this).trigger("click")}var g=a.makeArray(a(q.VISIBLE_ITEMS));if(g=g.filter(function(a){return a.offsetWidth||a.offsetHeight}),g.length){var h=g.indexOf(c.target);c.which===l&&h>0&&h--,c.which===m&&h<g.length-1&&h++,h<0&&(h=0),g[h].focus()}}},e(b,null,[{key:"VERSION",get:function(){return d}}]),b}();return a(document).on(o.KEYDOWN_DATA_API,q.DATA_TOGGLE,r._dataApiKeydownHandler).on(o.KEYDOWN_DATA_API,q.ROLE_MENU,r._dataApiKeydownHandler).on(o.KEYDOWN_DATA_API,q.ROLE_LISTBOX,r._dataApiKeydownHandler).on(o.CLICK_DATA_API,r._clearMenus).on(o.CLICK_DATA_API,q.DATA_TOGGLE,r.prototype.toggle).on(o.CLICK_DATA_API,q.FORM_CHILD,function(a){a.stopPropagation()}),a.fn[b]=r._jQueryInterface,a.fn[b].Constructor=r,a.fn[b].noConflict=function(){return a.fn[b]=j,r._jQueryInterface},r}(jQuery),function(a){var b="modal",g="4.0.0-alpha.5",h="bs.modal",i="."+h,j=".data-api",k=a.fn[b],l=300,m=150,n=27,o={backdrop:!0,keyboard:!0,focus:!0,show:!0},p={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},q={HIDE:"hide"+i,HIDDEN:"hidden"+i,SHOW:"show"+i,SHOWN:"shown"+i,FOCUSIN:"focusin"+i,RESIZE:"resize"+i,CLICK_DISMISS:"click.dismiss"+i,KEYDOWN_DISMISS:"keydown.dismiss"+i,MOUSEUP_DISMISS:"mouseup.dismiss"+i,MOUSEDOWN_DISMISS:"mousedown.dismiss"+i,CLICK_DATA_API:"click"+i+j},r={SCROLLBAR_MEASURER:"modal-scrollbar-measure",BACKDROP:"modal-backdrop",OPEN:"modal-open",FADE:"fade",IN:"in"},s={DIALOG:".modal-dialog",DATA_TOGGLE:'[data-toggle="modal"]',DATA_DISMISS:'[data-dismiss="modal"]',FIXED_CONTENT:".navbar-fixed-top, .navbar-fixed-bottom, .is-fixed"},t=function(){function j(b,d){c(this,j),this._config=this._getConfig(d),this._element=b,this._dialog=a(b).find(s.DIALOG)[0],this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._originalBodyPadding=0,this._scrollbarWidth=0}return j.prototype.toggle=function(a){return this._isShown?this.hide():this.show(a)},j.prototype.show=function(b){var c=this,d=a.Event(q.SHOW,{relatedTarget:b});a(this._element).trigger(d),this._isShown||d.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),a(document.body).addClass(r.OPEN),this._setEscapeEvent(),this._setResizeEvent(),a(this._element).on(q.CLICK_DISMISS,s.DATA_DISMISS,a.proxy(this.hide,this)),a(this._dialog).on(q.MOUSEDOWN_DISMISS,function(){a(c._element).one(q.MOUSEUP_DISMISS,function(b){a(b.target).is(c._element)&&(c._ignoreBackdropClick=!0)})}),this._showBackdrop(a.proxy(this._showElement,this,b)))},j.prototype.hide=function(b){b&&b.preventDefault();var c=a.Event(q.HIDE);a(this._element).trigger(c),this._isShown&&!c.isDefaultPrevented()&&(this._isShown=!1,this._setEscapeEvent(),this._setResizeEvent(),a(document).off(q.FOCUSIN),a(this._element).removeClass(r.IN),a(this._element).off(q.CLICK_DISMISS),a(this._dialog).off(q.MOUSEDOWN_DISMISS),f.supportsTransitionEnd()&&a(this._element).hasClass(r.FADE)?a(this._element).one(f.TRANSITION_END,a.proxy(this._hideModal,this)).emulateTransitionEnd(l):this._hideModal())},j.prototype.dispose=function(){a.removeData(this._element,h),a(window).off(i),a(document).off(i),a(this._element).off(i),a(this._backdrop).off(i),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._originalBodyPadding=null,this._scrollbarWidth=null},j.prototype._getConfig=function(c){return c=a.extend({},o,c),f.typeCheckConfig(b,c,p),c},j.prototype._showElement=function(b){var c=this,d=f.supportsTransitionEnd()&&a(this._element).hasClass(r.FADE);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.scrollTop=0,d&&f.reflow(this._element),a(this._element).addClass(r.IN),this._config.focus&&this._enforceFocus();var e=a.Event(q.SHOWN,{relatedTarget:b}),g=function(){c._config.focus&&c._element.focus(),a(c._element).trigger(e)};d?a(this._dialog).one(f.TRANSITION_END,g).emulateTransitionEnd(l):g()},j.prototype._enforceFocus=function(){var b=this;a(document).off(q.FOCUSIN).on(q.FOCUSIN,function(c){document===c.target||b._element===c.target||a(b._element).has(c.target).length||b._element.focus()})},j.prototype._setEscapeEvent=function(){var b=this;this._isShown&&this._config.keyboard?a(this._element).on(q.KEYDOWN_DISMISS,function(a){a.which===n&&b.hide()}):this._isShown||a(this._element).off(q.KEYDOWN_DISMISS)},j.prototype._setResizeEvent=function(){this._isShown?a(window).on(q.RESIZE,a.proxy(this._handleUpdate,this)):a(window).off(q.RESIZE)},j.prototype._hideModal=function(){var b=this;this._element.style.display="none",this._element.setAttribute("aria-hidden","true"),this._showBackdrop(function(){a(document.body).removeClass(r.OPEN),b._resetAdjustments(),b._resetScrollbar(),a(b._element).trigger(q.HIDDEN)})},j.prototype._removeBackdrop=function(){this._backdrop&&(a(this._backdrop).remove(),this._backdrop=null)},j.prototype._showBackdrop=function(b){var c=this,d=a(this._element).hasClass(r.FADE)?r.FADE:"";if(this._isShown&&this._config.backdrop){var e=f.supportsTransitionEnd()&&d;if(this._backdrop=document.createElement("div"),this._backdrop.className=r.BACKDROP,d&&a(this._backdrop).addClass(d),a(this._backdrop).appendTo(document.body),a(this._element).on(q.CLICK_DISMISS,function(a){return c._ignoreBackdropClick?void(c._ignoreBackdropClick=!1):void(a.target===a.currentTarget&&("static"===c._config.backdrop?c._element.focus():c.hide()))}),e&&f.reflow(this._backdrop),a(this._backdrop).addClass(r.IN),!b)return;if(!e)return void b();a(this._backdrop).one(f.TRANSITION_END,b).emulateTransitionEnd(m)}else if(!this._isShown&&this._backdrop){a(this._backdrop).removeClass(r.IN);var g=function(){c._removeBackdrop(),b&&b()};f.supportsTransitionEnd()&&a(this._element).hasClass(r.FADE)?a(this._backdrop).one(f.TRANSITION_END,g).emulateTransitionEnd(m):g()}else b&&b()},j.prototype._handleUpdate=function(){this._adjustDialog()},j.prototype._adjustDialog=function(){var a=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&a&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!a&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},j.prototype._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},j.prototype._checkScrollbar=function(){this._isBodyOverflowing=document.body.clientWidth<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},j.prototype._setScrollbar=function(){var b=parseInt(a(s.FIXED_CONTENT).css("padding-right")||0,10);this._originalBodyPadding=document.body.style.paddingRight||"",this._isBodyOverflowing&&(document.body.style.paddingRight=b+this._scrollbarWidth+"px")},j.prototype._resetScrollbar=function(){document.body.style.paddingRight=this._originalBodyPadding},j.prototype._getScrollbarWidth=function(){var a=document.createElement("div");a.className=r.SCROLLBAR_MEASURER,document.body.appendChild(a);var b=a.offsetWidth-a.clientWidth;return document.body.removeChild(a),b},j._jQueryInterface=function(b,c){return this.each(function(){var e=a(this).data(h),f=a.extend({},j.Default,a(this).data(),"object"===("undefined"==typeof b?"undefined":d(b))&&b);if(e||(e=new j(this,f),a(this).data(h,e)),"string"==typeof b){if(void 0===e[b])throw new Error('No method named "'+b+'"');e[b](c)}else f.show&&e.show(c)})},e(j,null,[{key:"VERSION",get:function(){return g}},{key:"Default",get:function(){return o}}]),j}();return a(document).on(q.CLICK_DATA_API,s.DATA_TOGGLE,function(b){var c=this,d=void 0,e=f.getSelectorFromElement(this);e&&(d=a(e)[0]);var g=a(d).data(h)?"toggle":a.extend({},a(d).data(),a(this).data());"A"===this.tagName&&b.preventDefault();var i=a(d).one(q.SHOW,function(b){b.isDefaultPrevented()||i.one(q.HIDDEN,function(){a(c).is(":visible")&&c.focus()})});t._jQueryInterface.call(a(d),g,this)}),a.fn[b]=t._jQueryInterface,a.fn[b].Constructor=t,a.fn[b].noConflict=function(){return a.fn[b]=k,t._jQueryInterface},t}(jQuery),function(a){var b="scrollspy",g="4.0.0-alpha.5",h="bs.scrollspy",i="."+h,j=".data-api",k=a.fn[b],l={offset:10,method:"auto",target:""},m={offset:"number",method:"string",target:"(string|element)"},n={ACTIVATE:"activate"+i,SCROLL:"scroll"+i,LOAD_DATA_API:"load"+i+j},o={DROPDOWN_ITEM:"dropdown-item",DROPDOWN_MENU:"dropdown-menu",NAV_LINK:"nav-link",NAV:"nav",ACTIVE:"active"},p={DATA_SPY:'[data-spy="scroll"]',ACTIVE:".active",LIST_ITEM:".list-item",LI:"li",LI_DROPDOWN:"li.dropdown",NAV_LINKS:".nav-link",DROPDOWN:".dropdown",DROPDOWN_ITEMS:".dropdown-item",DROPDOWN_TOGGLE:".dropdown-toggle"},q={OFFSET:"offset",POSITION:"position"},r=function(){function j(b,d){c(this,j),this._element=b,this._scrollElement="BODY"===b.tagName?window:b,this._config=this._getConfig(d),this._selector=this._config.target+" "+p.NAV_LINKS+","+(this._config.target+" "+p.DROPDOWN_ITEMS),this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,a(this._scrollElement).on(n.SCROLL,a.proxy(this._process,this)),this.refresh(),this._process()}return j.prototype.refresh=function(){var b=this,c=this._scrollElement!==this._scrollElement.window?q.POSITION:q.OFFSET,d="auto"===this._config.method?c:this._config.method,e=d===q.POSITION?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight();var g=a.makeArray(a(this._selector));g.map(function(b){var c=void 0,g=f.getSelectorFromElement(b);return g&&(c=a(g)[0]),c&&(c.offsetWidth||c.offsetHeight)?[a(c)[d]().top+e,g]:null}).filter(function(a){return a}).sort(function(a,b){return a[0]-b[0]}).forEach(function(a){b._offsets.push(a[0]),b._targets.push(a[1])})},j.prototype.dispose=function(){a.removeData(this._element,h),a(this._scrollElement).off(i),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},j.prototype._getConfig=function(c){if(c=a.extend({},l,c),"string"!=typeof c.target){var d=a(c.target).attr("id");d||(d=f.getUID(b),a(c.target).attr("id",d)),c.target="#"+d}return f.typeCheckConfig(b,c,m),c},j.prototype._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.scrollY:this._scrollElement.scrollTop},j.prototype._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},j.prototype._process=function(){var a=this._getScrollTop()+this._config.offset,b=this._getScrollHeight(),c=this._config.offset+b-this._scrollElement.offsetHeight;if(this._scrollHeight!==b&&this.refresh(),a>=c){var d=this._targets[this._targets.length-1];this._activeTarget!==d&&this._activate(d)}if(this._activeTarget&&a<this._offsets[0])return this._activeTarget=null,void this._clear();for(var e=this._offsets.length;e--;){var f=this._activeTarget!==this._targets[e]&&a>=this._offsets[e]&&(void 0===this._offsets[e+1]||a<this._offsets[e+1]);f&&this._activate(this._targets[e])}},j.prototype._activate=function(b){this._activeTarget=b,this._clear();var c=this._selector.split(",");c=c.map(function(a){return a+'[data-target="'+b+'"],'+(a+'[href="'+b+'"]')});var d=a(c.join(","));d.hasClass(o.DROPDOWN_ITEM)?(d.closest(p.DROPDOWN).find(p.DROPDOWN_TOGGLE).addClass(o.ACTIVE),d.addClass(o.ACTIVE)):d.parents(p.LI).find(p.NAV_LINKS).addClass(o.ACTIVE),a(this._scrollElement).trigger(n.ACTIVATE,{relatedTarget:b})},j.prototype._clear=function(){a(this._selector).filter(p.ACTIVE).removeClass(o.ACTIVE)},j._jQueryInterface=function(b){return this.each(function(){var c=a(this).data(h),e="object"===("undefined"==typeof b?"undefined":d(b))&&b||null;if(c||(c=new j(this,e),a(this).data(h,c)),"string"==typeof b){if(void 0===c[b])throw new Error('No method named "'+b+'"');c[b]()}})},e(j,null,[{key:"VERSION",get:function(){return g}},{key:"Default",get:function(){return l}}]),j}();return a(window).on(n.LOAD_DATA_API,function(){for(var b=a.makeArray(a(p.DATA_SPY)),c=b.length;c--;){var d=a(b[c]);r._jQueryInterface.call(d,d.data())}}),a.fn[b]=r._jQueryInterface,a.fn[b].Constructor=r,a.fn[b].noConflict=function(){return a.fn[b]=k,r._jQueryInterface},r}(jQuery),function(a){var b="tab",d="4.0.0-alpha.5",g="bs.tab",h="."+g,i=".data-api",j=a.fn[b],k=150,l={HIDE:"hide"+h,HIDDEN:"hidden"+h,SHOW:"show"+h,SHOWN:"shown"+h,CLICK_DATA_API:"click"+h+i},m={DROPDOWN_MENU:"dropdown-menu",ACTIVE:"active",FADE:"fade",IN:"in"},n={A:"a",LI:"li",DROPDOWN:".dropdown",UL:"ul:not(.dropdown-menu)",FADE_CHILD:"> .nav-item .fade, > .fade",ACTIVE:".active",ACTIVE_CHILD:"> .nav-item > .active, > .active",DATA_TOGGLE:'[data-toggle="tab"], [data-toggle="pill"]',
DROPDOWN_TOGGLE:".dropdown-toggle",DROPDOWN_ACTIVE_CHILD:"> .dropdown-menu .active"},o=function(){function b(a){c(this,b),this._element=a}return b.prototype.show=function(){var b=this;if(!this._element.parentNode||this._element.parentNode.nodeType!==Node.ELEMENT_NODE||!a(this._element).hasClass(m.ACTIVE)){var c=void 0,d=void 0,e=a(this._element).closest(n.UL)[0],g=f.getSelectorFromElement(this._element);e&&(d=a.makeArray(a(e).find(n.ACTIVE)),d=d[d.length-1]);var h=a.Event(l.HIDE,{relatedTarget:this._element}),i=a.Event(l.SHOW,{relatedTarget:d});if(d&&a(d).trigger(h),a(this._element).trigger(i),!i.isDefaultPrevented()&&!h.isDefaultPrevented()){g&&(c=a(g)[0]),this._activate(this._element,e);var j=function(){var c=a.Event(l.HIDDEN,{relatedTarget:b._element}),e=a.Event(l.SHOWN,{relatedTarget:d});a(d).trigger(c),a(b._element).trigger(e)};c?this._activate(c,c.parentNode,j):j()}}},b.prototype.dispose=function(){a.removeClass(this._element,g),this._element=null},b.prototype._activate=function(b,c,d){var e=a(c).find(n.ACTIVE_CHILD)[0],g=d&&f.supportsTransitionEnd()&&(e&&a(e).hasClass(m.FADE)||Boolean(a(c).find(n.FADE_CHILD)[0])),h=a.proxy(this._transitionComplete,this,b,e,g,d);e&&g?a(e).one(f.TRANSITION_END,h).emulateTransitionEnd(k):h(),e&&a(e).removeClass(m.IN)},b.prototype._transitionComplete=function(b,c,d,e){if(c){a(c).removeClass(m.ACTIVE);var g=a(c).find(n.DROPDOWN_ACTIVE_CHILD)[0];g&&a(g).removeClass(m.ACTIVE),c.setAttribute("aria-expanded",!1)}if(a(b).addClass(m.ACTIVE),b.setAttribute("aria-expanded",!0),d?(f.reflow(b),a(b).addClass(m.IN)):a(b).removeClass(m.FADE),b.parentNode&&a(b.parentNode).hasClass(m.DROPDOWN_MENU)){var h=a(b).closest(n.DROPDOWN)[0];h&&a(h).find(n.DROPDOWN_TOGGLE).addClass(m.ACTIVE),b.setAttribute("aria-expanded",!0)}e&&e()},b._jQueryInterface=function(c){return this.each(function(){var d=a(this),e=d.data(g);if(e||(e=e=new b(this),d.data(g,e)),"string"==typeof c){if(void 0===e[c])throw new Error('No method named "'+c+'"');e[c]()}})},e(b,null,[{key:"VERSION",get:function(){return d}}]),b}();return a(document).on(l.CLICK_DATA_API,n.DATA_TOGGLE,function(b){b.preventDefault(),o._jQueryInterface.call(a(this),"show")}),a.fn[b]=o._jQueryInterface,a.fn[b].Constructor=o,a.fn[b].noConflict=function(){return a.fn[b]=j,o._jQueryInterface},o}(jQuery),function(a){if(void 0===window.Tether)throw new Error("Bootstrap tooltips require Tether (http://tether.io/)");var b="tooltip",g="4.0.0-alpha.5",h="bs.tooltip",i="."+h,j=a.fn[b],k=150,l="bs-tether",m={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:"0 0",constraints:[]},n={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"string",constraints:"array"},o={TOP:"bottom center",RIGHT:"middle left",BOTTOM:"top center",LEFT:"middle right"},p={IN:"in",OUT:"out"},q={HIDE:"hide"+i,HIDDEN:"hidden"+i,SHOW:"show"+i,SHOWN:"shown"+i,INSERTED:"inserted"+i,CLICK:"click"+i,FOCUSIN:"focusin"+i,FOCUSOUT:"focusout"+i,MOUSEENTER:"mouseenter"+i,MOUSELEAVE:"mouseleave"+i},r={FADE:"fade",IN:"in"},s={TOOLTIP:".tooltip",TOOLTIP_INNER:".tooltip-inner"},t={element:!1,enabled:!1},u={HOVER:"hover",FOCUS:"focus",CLICK:"click",MANUAL:"manual"},v=function(){function j(a,b){c(this,j),this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._tether=null,this.element=a,this.config=this._getConfig(b),this.tip=null,this._setListeners()}return j.prototype.enable=function(){this._isEnabled=!0},j.prototype.disable=function(){this._isEnabled=!1},j.prototype.toggleEnabled=function(){this._isEnabled=!this._isEnabled},j.prototype.toggle=function(b){if(b){var c=this.constructor.DATA_KEY,d=a(b.currentTarget).data(c);d||(d=new this.constructor(b.currentTarget,this._getDelegateConfig()),a(b.currentTarget).data(c,d)),d._activeTrigger.click=!d._activeTrigger.click,d._isWithActiveTrigger()?d._enter(null,d):d._leave(null,d)}else{if(a(this.getTipElement()).hasClass(r.IN))return void this._leave(null,this);this._enter(null,this)}},j.prototype.dispose=function(){clearTimeout(this._timeout),this.cleanupTether(),a.removeData(this.element,this.constructor.DATA_KEY),a(this.element).off(this.constructor.EVENT_KEY),this.tip&&a(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._tether=null,this.element=null,this.config=null,this.tip=null},j.prototype.show=function(){var b=this,c=a.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){a(this.element).trigger(c);var d=a.contains(this.element.ownerDocument.documentElement,this.element);if(c.isDefaultPrevented()||!d)return;var e=this.getTipElement(),g=f.getUID(this.constructor.NAME);e.setAttribute("id",g),this.element.setAttribute("aria-describedby",g),this.setContent(),this.config.animation&&a(e).addClass(r.FADE);var h="function"==typeof this.config.placement?this.config.placement.call(this,e,this.element):this.config.placement,i=this._getAttachment(h);a(e).data(this.constructor.DATA_KEY,this).appendTo(document.body),a(this.element).trigger(this.constructor.Event.INSERTED),this._tether=new Tether({attachment:i,element:e,target:this.element,classes:t,classPrefix:l,offset:this.config.offset,constraints:this.config.constraints,addTargetClasses:!1}),f.reflow(e),this._tether.position(),a(e).addClass(r.IN);var k=function(){var c=b._hoverState;b._hoverState=null,a(b.element).trigger(b.constructor.Event.SHOWN),c===p.OUT&&b._leave(null,b)};if(f.supportsTransitionEnd()&&a(this.tip).hasClass(r.FADE))return void a(this.tip).one(f.TRANSITION_END,k).emulateTransitionEnd(j._TRANSITION_DURATION);k()}},j.prototype.hide=function(b){var c=this,d=this.getTipElement(),e=a.Event(this.constructor.Event.HIDE),g=function(){c._hoverState!==p.IN&&d.parentNode&&d.parentNode.removeChild(d),c.element.removeAttribute("aria-describedby"),a(c.element).trigger(c.constructor.Event.HIDDEN),c.cleanupTether(),b&&b()};a(this.element).trigger(e),e.isDefaultPrevented()||(a(d).removeClass(r.IN),f.supportsTransitionEnd()&&a(this.tip).hasClass(r.FADE)?a(d).one(f.TRANSITION_END,g).emulateTransitionEnd(k):g(),this._hoverState="")},j.prototype.isWithContent=function(){return Boolean(this.getTitle())},j.prototype.getTipElement=function(){return this.tip=this.tip||a(this.config.template)[0]},j.prototype.setContent=function(){var b=a(this.getTipElement());this.setElementContent(b.find(s.TOOLTIP_INNER),this.getTitle()),b.removeClass(r.FADE).removeClass(r.IN),this.cleanupTether()},j.prototype.setElementContent=function(b,c){var e=this.config.html;"object"===("undefined"==typeof c?"undefined":d(c))&&(c.nodeType||c.jquery)?e?a(c).parent().is(b)||b.empty().append(c):b.text(a(c).text()):b[e?"html":"text"](c)},j.prototype.getTitle=function(){var a=this.element.getAttribute("data-original-title");return a||(a="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),a},j.prototype.cleanupTether=function(){this._tether&&this._tether.destroy()},j.prototype._getAttachment=function(a){return o[a.toUpperCase()]},j.prototype._setListeners=function(){var b=this,c=this.config.trigger.split(" ");c.forEach(function(c){if("click"===c)a(b.element).on(b.constructor.Event.CLICK,b.config.selector,a.proxy(b.toggle,b));else if(c!==u.MANUAL){var d=c===u.HOVER?b.constructor.Event.MOUSEENTER:b.constructor.Event.FOCUSIN,e=c===u.HOVER?b.constructor.Event.MOUSELEAVE:b.constructor.Event.FOCUSOUT;a(b.element).on(d,b.config.selector,a.proxy(b._enter,b)).on(e,b.config.selector,a.proxy(b._leave,b))}}),this.config.selector?this.config=a.extend({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},j.prototype._fixTitle=function(){var a=d(this.element.getAttribute("data-original-title"));(this.element.getAttribute("title")||"string"!==a)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},j.prototype._enter=function(b,c){var d=this.constructor.DATA_KEY;return c=c||a(b.currentTarget).data(d),c||(c=new this.constructor(b.currentTarget,this._getDelegateConfig()),a(b.currentTarget).data(d,c)),b&&(c._activeTrigger["focusin"===b.type?u.FOCUS:u.HOVER]=!0),a(c.getTipElement()).hasClass(r.IN)||c._hoverState===p.IN?void(c._hoverState=p.IN):(clearTimeout(c._timeout),c._hoverState=p.IN,c.config.delay&&c.config.delay.show?void(c._timeout=setTimeout(function(){c._hoverState===p.IN&&c.show()},c.config.delay.show)):void c.show())},j.prototype._leave=function(b,c){var d=this.constructor.DATA_KEY;if(c=c||a(b.currentTarget).data(d),c||(c=new this.constructor(b.currentTarget,this._getDelegateConfig()),a(b.currentTarget).data(d,c)),b&&(c._activeTrigger["focusout"===b.type?u.FOCUS:u.HOVER]=!1),!c._isWithActiveTrigger())return clearTimeout(c._timeout),c._hoverState=p.OUT,c.config.delay&&c.config.delay.hide?void(c._timeout=setTimeout(function(){c._hoverState===p.OUT&&c.hide()},c.config.delay.hide)):void c.hide()},j.prototype._isWithActiveTrigger=function(){for(var a in this._activeTrigger)if(this._activeTrigger[a])return!0;return!1},j.prototype._getConfig=function(c){return c=a.extend({},this.constructor.Default,a(this.element).data(),c),c.delay&&"number"==typeof c.delay&&(c.delay={show:c.delay,hide:c.delay}),f.typeCheckConfig(b,c,this.constructor.DefaultType),c},j.prototype._getDelegateConfig=function(){var a={};if(this.config)for(var b in this.config)this.constructor.Default[b]!==this.config[b]&&(a[b]=this.config[b]);return a},j._jQueryInterface=function(b){return this.each(function(){var c=a(this).data(h),e="object"===("undefined"==typeof b?"undefined":d(b))?b:null;if((c||!/dispose|hide/.test(b))&&(c||(c=new j(this,e),a(this).data(h,c)),"string"==typeof b)){if(void 0===c[b])throw new Error('No method named "'+b+'"');c[b]()}})},e(j,null,[{key:"VERSION",get:function(){return g}},{key:"Default",get:function(){return m}},{key:"NAME",get:function(){return b}},{key:"DATA_KEY",get:function(){return h}},{key:"Event",get:function(){return q}},{key:"EVENT_KEY",get:function(){return i}},{key:"DefaultType",get:function(){return n}}]),j}();return a.fn[b]=v._jQueryInterface,a.fn[b].Constructor=v,a.fn[b].noConflict=function(){return a.fn[b]=j,v._jQueryInterface},v}(jQuery));(function(f){var h="popover",i="4.0.0-alpha.5",j="bs.popover",k="."+j,l=f.fn[h],m=f.extend({},g.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),n=f.extend({},g.DefaultType,{content:"(string|element|function)"}),o={FADE:"fade",IN:"in"},p={TITLE:".popover-title",CONTENT:".popover-content"},q={HIDE:"hide"+k,HIDDEN:"hidden"+k,SHOW:"show"+k,SHOWN:"shown"+k,INSERTED:"inserted"+k,CLICK:"click"+k,FOCUSIN:"focusin"+k,FOCUSOUT:"focusout"+k,MOUSEENTER:"mouseenter"+k,MOUSELEAVE:"mouseleave"+k},r=function(g){function l(){return c(this,l),a(this,g.apply(this,arguments))}return b(l,g),l.prototype.isWithContent=function(){return this.getTitle()||this._getContent()},l.prototype.getTipElement=function(){return this.tip=this.tip||f(this.config.template)[0]},l.prototype.setContent=function(){var a=f(this.getTipElement());this.setElementContent(a.find(p.TITLE),this.getTitle()),this.setElementContent(a.find(p.CONTENT),this._getContent()),a.removeClass(o.FADE).removeClass(o.IN),this.cleanupTether()},l.prototype._getContent=function(){return this.element.getAttribute("data-content")||("function"==typeof this.config.content?this.config.content.call(this.element):this.config.content)},l._jQueryInterface=function(a){return this.each(function(){var b=f(this).data(j),c="object"===("undefined"==typeof a?"undefined":d(a))?a:null;if((b||!/destroy|hide/.test(a))&&(b||(b=new l(this,c),f(this).data(j,b)),"string"==typeof a)){if(void 0===b[a])throw new Error('No method named "'+a+'"');b[a]()}})},e(l,null,[{key:"VERSION",get:function(){return i}},{key:"Default",get:function(){return m}},{key:"NAME",get:function(){return h}},{key:"DATA_KEY",get:function(){return j}},{key:"Event",get:function(){return q}},{key:"EVENT_KEY",get:function(){return k}},{key:"DefaultType",get:function(){return n}}]),l}(g);return f.fn[h]=r._jQueryInterface,f.fn[h].Constructor=r,f.fn[h].noConflict=function(){return f.fn[h]=l,r._jQueryInterface},r})(jQuery)}();
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
	__webpack_require__(1),
	!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.accordion\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

	var AccordionBodyView = Marionette.LayoutView.extend({
		template: App.Templates.demo.app.components.accordion.accordionBodyTemplate

	});

	return AccordionBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.accordion\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var AccordionTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.accordion.accordionTestTemplate,
    ui:{
      accordion: ".rup_accordion",
      toolbarMixta: "#toolbarMixta",
      toolbarRight: "#toolbarRight"
    },
    onAttach: fncOnAttach

  });

  function fncOnAttach(){

     	$(".rup_accordion").rup_accordion({
  		animated: "bounceslide",
  		active: false,
  		autoHeight: false,
  		collapsible: true
  	});

  	$("#accordionExample2").rup_accordion("option","change", function(event, ui){
  		//section autocomplete
  		if(ui.options.active === 0){
  			$("#autocomplete_label").rup_autocomplete("search", "java");
  		//seccion mantenimiento
  		} else if (ui.options.active === 1){

  			//////////////////////////
  			//seccion Mantenimiento
  			//////////////////////////

  			if($("#mockPageContent").length > 0){
  				$("#mockPageContent").remove();
  			}

  			$.rup_ajax({
  				url: "/x21aMantenimientosWar/usuario/groupMulti",
  				//Cabecera RUP
  				success: function(data, textStatus, jqXHR) {
  					$("#maintGroup").html("");
  					$("#maintGroup").append(data);
  				},
  				error: function (XMLHttpRequest, textStatus, errorThrown){
  					alert("Se ha producido un error al recuperar los datos del servidor");
  				}
  			});
  		} else if (ui.options.active === 2){

  			/////////////////////
  			//seccion pestañas
  			/////////////////////

  			if($("#mockPageContent").length > 0){
  				$("#mockPageContent").remove();
  			}

  			if(!$("#maintTab").hasClass("ui-tabs")){
  				$("#maintTab").rup_tabs({
  					tabs:[
  					    {i18nCaption:"maint1", url:"/x21aMantenimientosWar/usuario/simpleTable1"},
  						{i18nCaption:"maint2", url:"/x21aMantenimientosWar/usuario/simpleTable2"},
  						{i18nCaption:"maint3", url:"/x21aMantenimientosWar/usuario/simpleTable3"},
  						{i18nCaption:"edit1", url:"/x21aMantenimientosWar/usuario/editTable1"},
  						{i18nCaption:"multi1", url:"/x21aMantenimientosWar/usuario/multiTable1"}],
  					load: function(event, ui){
  						if($("#mockPageContent").length > 0){
  							$("#maintTab").rup_tabs("disableTabs", {
  								idTab: "maintTab",
  								position: [1,2,3,4]
  							});
  							$("#mockPageContent #loginButtonObject").on("click", function (event){
  								$("#maintTab").rup_tabs("enableTabs", {
  									idTab: "maintTab",
  									position: [1,2,3,4]
  								});
  							});
  						}
  					}
  				});
  			} else {
  				$("#maintTab").rup_tabs("loadTab", {
  						idTab: "maintTab",
  						position: 0
  				});
  				$("#maintTab").rup_tabs("selectTab", {
  					idTab: "maintTab",
  					position: 0
  				});
  			}
  		}
  	});

  	$("#accordionExample2").rup_accordion("option","changestart", function(event, ui){
  		//section autocomplete
  		if (ui.options.active === 1){
  			$("#maintGroup").html("");
  		}
  	});

  	/////////////////////////
  	//section autocomplete
  	/////////////////////////

  	$("#autocomplete").rup_autocomplete({
  		/*source : ["asp", "c", "c++", "coldfusion", "groovy", "haskell", "java", "javascript", "perl", "php", "python", "ruby", "scala"]*/
  		source : [
  			{i18nCaption: "asp", value:"asp_value"},
  			{i18nCaption: "c", value:"c_value"},
  			{i18nCaption: "c++", value:"c++_value"},
  			{i18nCaption: "coldfusion", value:"coldfusion_value"},
  			{i18nCaption: "groovy", value:"groovy_value"},
  			{i18nCaption: "haskell", value:"haskell_value"},
  			{i18nCaption: "java", value:"java_value"},
  			{i18nCaption: "javascript", value:"javascript_value"},
  			{i18nCaption: "perl", value:"perl_value"},
  			{i18nCaption: "php", value:"php_value"},
  			{i18nCaption: "python", value:"python_value"},
  			{i18nCaption: "ruby", value:"ruby_value"},
  			{i18nCaption: "scala", value:"scala_value"}
  		],
  		contains : false
  	});

  	$("#patron").rup_autocomplete({
  		source : "autocomplete/remote",
  		sourceParam : {label:"desc"+$.rup_utils.capitalizedLang(), value:"code"},
  		minLength: 4
  	});

  	///////////////////
  	//seccion upload
  	///////////////////

  	// Creacion de los componentes feedback
  	$("#feedback_fileupload_form_multiple").rup_feedback();

  	// Se utiliza jquery.form para realizar el submit de los formularios por AJAX
  	$("#usuarioFormSimple").ajaxForm(function(){
  		$("#feedback_fileupload_form_multiple").rup_feedback("set","Los datos se han enviado correctamente");
  	});

  	// Dos controles Upload intergrados en un mismo formulario
  	$('#fileupload_file_form_padre').rup_upload({
  		form:"fileupload_form_multiple",
  		fileInput: $("#file_form_padre"),
  		submitFormButton: $("#sendButtonMultiple"),
  		maxFileSize: 5000000,
  		singleFileUploads:true,
  		submitInForm:true
  	});

  	$('#fileupload_file_form_madre').rup_upload({
  		form:"fileupload_form_multiple",
  		fileInput: $("#file_form_madre"),
  		submitFormButton: $("#sendButtonMultiple"),
  		maxFileSize: 5000000,
  		singleFileUploads:true,
  		submitInForm:true
  	});

  }


  return AccordionTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(8),
        __webpack_require__(9),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.accordion\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, AccordionBodyView, AccordionTestView, ComponentExampleCodeView){

  var AccordionView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new AccordionBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.accordion.accordionHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.accordion.accordionJsCodeTemplate
    }));
    $view.Test.show(new AccordionTestView());
  }


  return AccordionView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.autocomplete\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var AutocompleteBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.autocomplete.autocompleteBodyTemplate

  });

  return AutocompleteBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.autocomplete\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var AutocompleteTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.autocomplete.autocompleteTestTemplate,
    ui:{
      autocompleteLocal: "#autocomplete",
      autocompleteRemote: "#patron",
      comboboxLocal: "#comboboxLocal",
      comboboxRemote: "#comboboxRemoto",
    },
    languageList:[],
    initialize: fncInitialize,
    onAttach: fncOnAttach

  });

  function fncInitialize(){
    this.languageList = [
  			{i18nCaption: "asp", value:"asp_value"},
  			{i18nCaption: "c", value:"c_value"},
  			{i18nCaption: "c++", value:"c++_value"},
  			{i18nCaption: "coldfusion", value:"coldfusion_value"},
  			{i18nCaption: "groovy", value:"groovy_value"},
  			{i18nCaption: "haskell", value:"haskell_value"},
  			{i18nCaption: "java", value:"java_value"},
  			{i18nCaption: "javascript", value:"javascript_value"},
  			{i18nCaption: "perl", value:"perl_value"},
  			{i18nCaption: "php", value:"php_value"},
  			{i18nCaption: "python", value:"python_value"},
  			{i18nCaption: "ruby", value:"ruby_value"},
  			{i18nCaption: "scala", value:"scala_value"}
  		];
  }

  function fncOnAttach(){

    this.ui.autocompleteLocal.rup_autocomplete({
  		source : this.languageList,
  		defaultValue : "java",
  		contains : false
  	});

    this.ui.autocompleteRemote.rup_autocomplete({
  		source : "autocomplete/remote",
  		sourceParam : {
              label:"desc"+$.rup_utils.capitalizedLang(),
              value:"code"
          },
  		minLength: 4
  	});

    this.ui.comboboxLocal.rup_autocomplete({
  		source : this.languageList,
  		contains : false,
  		combobox: true,
  		minLength:0
  	});

    this.ui.comboboxRemote.rup_autocomplete({
  		source : "autocomplete/remote",
  		sourceParam : {label:"desc"+$.rup_utils.capitalizedLang(), value:"code"},
  		minLength: 4,
  		combobox: true
  	});
  }


  return AutocompleteTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(11),
        __webpack_require__(12),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.autocomplete\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, AutocompleteBodyView, AutocompleteTestView, ComponentExampleCodeView){

  var AutocompleteView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new AutocompleteBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.autocomplete.autocompleteHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.autocomplete.autocompleteJsCodeTemplate
    }));
    $view.Test.show(new AutocompleteTestView());
  }


  return AutocompleteView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ToolbarBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.button.buttonBodyTemplate,
  });

  return ToolbarBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()), !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.message\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ButtonTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.button.buttonTestTemplate,
      ui:{
        btnDefault: "#boton",
        btnIconHtml: "#btnIconHtml",
        btnIconJs: "#btnIconJs",
        btnRwdHtmlSm: "#btnRwdHtmlSm",
        btnRwdHtmlMd: "#btnRwdHtmlMd",
        btnRwdJsSm: "#btnRwdJsSm",
        btnRwdJsMd: "#btnRwdJsMd",
        btnMButton: "#btnMButton",
        btnDropdownList: "#dropdownHtmlListButton",
        btnDropdownDialog: "#dropdownDialogButton",
        btnFab: "#fabButton",
        fabButtonLayer: "#fabButtonLayer",
        btnFabFixed: "#fabButtonFixed",
        dropdownDialog: "#dropdownDialog",
        dropdownElem: "#dropdownElem1",
        dropdownCombo: "#dropdownButton-combo",
        btnClickJQuery: "#btnClickJQuery",
        btnClickRup: "#btnClickRup",
      },
      events:{
        'click @ui.dropdownElem': fncDropdownElementClick
      },
      onAttach: fncOnAttach
  });

  function fncOnAttach(){
    var $view = this;


   	$view.ui.btnDefault.rup_button({});

    //Botón con icono HTML
    $view.ui.btnIconHtml.rup_button();

    //Botón con icono JS
    $view.ui.btnIconJs.rup_button({
      iconCss: "fa fa-cog"
    });

    // Botón Rwd HTML Sd
    $view.ui.btnRwdHtmlSm.rup_button();
    $view.ui.btnRwdHtmlMd.rup_button();
    $view.ui.btnRwdJsSm.rup_button({
      iconCss: "fa fa-cog",
      labelCss: "hidden-sm-down"
    });
    $view.ui.btnRwdJsMd.rup_button({
      iconCss: "fa fa-cog",
      labelCss: "hidden-md-down"
    });

    // MButton

    $view.ui.btnMButton.rup_button({});


    $view.ui.btnFab.rup_button({
      //fab: true
    });

    $view.ui.fabButtonLayer.rup_button({
      //fab: true
    });

    $view.ui.btnFabFixed.rup_button({
      //fab: true
    });

  	$view.ui.btnDropdownList.rup_button({
  		dropdown:{
  			dropdownListId:"dropdownHtmlList"
  		}
  	});

    // Eventos click
    $view.ui.btnClickJQuery.rup_button().on("click", function(){
      $.rup_messages("msgOK", {
        title: "Evento Click",
        message: "Se ha capturado el evento click mediante un handler de jQuery."
      });
    });
    $view.ui.btnClickRup.rup_button({
      iconCss: "fa fa-cog",
      click: function(){
        $.rup_messages("msgOK", {
          title: "Evento Click",
          message: "Se ha capturado el evento click mediante un handler especificado en la propiedad click."
        });
      }
    });


  	// Dropdown dialog

  	$view.ui.btnDropdownDialog.rup_button({
  		dropdown:{
  			dropdownDialog: "dropdownDialog",
  			dropdownDialogConfig:{
  				title:"<span class='rup-icon rup-icon-filter'/>Administración de filtros",
  				width:"380px",
  				buttons: [{
  					text: "Guardar",
  					click: function () {
  					}
  				},
  				{
  					text: "Aceptar",
  					click: function () {
  					}
  				},
  				{
  					text: "Eliminar",
  					click: function () {
  					}
  				},
  				{
  					text: "Cancelar",
  					click: function () {
  						$view.ui.dropdownDialog.dialog("close");
  					},
  					btnType: $.rup.dialog.LINK
  				}
  				]
  			}
  		}
  	});

  	var options_ejie_combo = {
  			source : [
  			   {label:"Si", value:"0"},
  			   {label:"No", value:"1"}
  			],
  			width: 120,
  			blank: ""
  		};


  	$view.ui.dropdownCombo.rup_combo(options_ejie_combo);
  }

  function fncDropdownElementClick (){
    alert("Seleccionado elemento 1");
  }

  return ButtonTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(14),
        __webpack_require__(15),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.message\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, ButtonBodyView, ButtonTestView, ComponentExampleCodeView){

  var ButtonView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new ButtonBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.button.buttonHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.button.buttonJsCodeTemplate
    }));
    $view.Test.show(new ButtonTestView());
  }

  return ButtonView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.chart\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ChartBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.chart.chartBodyTemplate
  });

  return ChartBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.chart\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()), !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function (Marionette, App) {

    var ChartTestView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.components.chart.chartTestTemplate,
        ui: {

            graficoLine: "#graficoLine",
            graficoBar: "#graficoBar",
            graficoRadar: "#graficoRadar",
            graficoPolar: "#graficoPolar",
            graficoPie: "#graficoPie",
            graficoDoughnut: "#graficoDoughnut",
            graficoBubble: "#graficoBubble"

        },
        initialize: fncInitialize,
        onAttach: fncOnAttach,
        mesesData: [],
        colorsData: [],
        radarData: [],
        bubbleData: []

    });

    function fncInitialize() {
        /*data*/

        this.mesesData = {
            labels: $.rup.i18n.app.charts.mesesLabels,
            datasets: [{
                label: $.rup.i18n.app.charts.datasetRadar.dataset1,
                data: [65, 59, 80, 81, 56, 55, 40]
          }]
        };
        this.colorsData = {

            labels: $.rup.i18n.app.charts.colorLabels,
            datasets: [{
                data: [300, 50, 100],
                backgroundColor: [
                  "#FF6384",
                  "#36A2EB",
                  "#FFCE56"
              ],
                hoverBackgroundColor: [
                  "#FF6384",
                  "#36A2EB",
                  "#FFCE56"
              ]
          }]
        };
        this.radarData = {
            labels: $.rup.i18n.app.charts.radarLabels,
            datasets: [{
                label: $.rup.i18n.app.charts.datasetRadar.dataset1,
                data: [65, 59, 90, 81, 56, 55, 40]
          }, {
                label: $.rup.i18n.app.charts.datasetRadar.dataset2,
                data: [28, 48, 40, 19, 96, 27, 100]
          }]
        };

        this.bubbleData = {
            datasets: [{
                label: $.rup.i18n.app.charts.datasetRadar.dataset1,
                data: [{
                    x: 20,
                    y: 30,
                    r: 15
              }, {
                    x: 40,
                    y: 10,
                    r: 10
              }],
                backgroundColor: "#FF6384",
                hoverBackgroundColor: "#FF6384",
          }]
        };
    }

    function fncOnAttach() {
        var $view = this;
        var options = {
            responsive: true,
            legend: {
                display: true
            }

        };
        //line chart
        $view.ui.graficoLine.rup_chart({
            type: "line",
            data: $view.mesesData,
            options: options
        });

        //bar chart
        $view.ui.graficoBar.rup_chart({
            type: "bar",
            data: $view.mesesData,
            options: options
        });

        //radar chart
        $view.ui.graficoRadar.rup_chart({
            type: "radar",
            data: $view.radarData
        });

        //polar chart
        $view.ui.graficoPolar.rup_chart({
            type: "polarArea",
            data: $view.colorsData

        });

        //pie chart
        $view.ui.graficoPie.rup_chart({
            type: "pie",
            data: $view.colorsData

        });

        // doughnut chart
        $view.ui.graficoDoughnut.rup_chart({
            type: "doughnut",
            data: $view.colorsData

        });

        //bubble chart
        $view.ui.graficoBubble.rup_chart({
            type: 'bubble',
            data: $view.bubbleData

        });
    }



    return ChartTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(17),
        __webpack_require__(18),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.chart\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, ChartBodyView, ChartTestView, ComponentExampleCodeView){

  var ChartView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new ChartBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.chart.chartHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.chart.chartJsCodeTemplate
    }));
    $view.Test.show(new ChartTestView());
  }


  return ChartView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.combo\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ComboSimpleBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.combo.comboSimple.comboSimpleBodyTemplate
  });

  return ComboSimpleBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.combo\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ComboSimpleTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.combo.comboSimple.comboSimpleTestTemplate,
      ui:{
        comboLocal: "#combo",
        comboRemoto: "#comboRemoto",
        comboLargo: "#comboLargo",
        comboGrupos: "#comboGrupos",
        comboGruposRemoto: "#comboGruposRemoto",
        comboImgs: "#comboImgs",
        comboInput: "#comboInput",
        comboLoadFromSelect: "#comboLoadFromSelect"
      },
      languageList:[],
      personList:[],
      actionList:[],
      teamList:[],
      initialize: fncInitialize,
      onAttach: fncOnAttach

    });

    function fncInitialize(){
      this.languageList = [
  			{i18nCaption: "asp", value:"asp_value"},
  			{i18nCaption: "c", value:"c_value"},
  			{i18nCaption: "c++", value:"c++_value"},
  			{i18nCaption: "coldfusion", value:"coldfusion_value"},
  			{i18nCaption: "groovy", value:"groovy_value"},
  			{i18nCaption: "haskell", value:"haskell_value"},
  			{i18nCaption: "java", value:"java_value"},
  			{i18nCaption: "javascript", value:"javascript_value"},
  			{i18nCaption: "perl", value:"perl_value"},
  			{i18nCaption: "php", value:"php_value"},
  			{i18nCaption: "python", value:"python_value"},
  			{i18nCaption: "ruby", value:"ruby_value"},
  			{i18nCaption: "scala", value:"scala_value"}
  		];

      this.personList = [
  			{i18nCaption: "jon_doe", value:"jon"},
  			{i18nCaption: "jane_doe", value:"jane"},
  			{i18nCaption: "joseph_doe", value:"joseph"},
  			{i18nCaption: "mad_doe", value:"mad"}
  		];

      this.actionList = ["Borrar", "Filtrar", "Imprimir"];

      this.teamList = [
  			{"futbol" : [
  				{i18nCaption: "alaves", value:"alaves_value", style:"delete"},
  				{i18nCaption: "ath", value:"ath_value", style:"filter"},
  				{i18nCaption: "real", value:"real_value", style:"print"}
  			]},
  			{"baloncesto" : [
  				{i18nCaption: "laboral", value:"laboral_value"},
  				{i18nCaption: "bilbao", value:"bilbao_value"},
  				{i18nCaption: "lagun aro", value:"lagun aro_value"}
  			]},
  			{"formula1" : [
  				{i18nCaption: "falonso", value:"falonso_value"},
  				{i18nCaption: "hamilton", value:"hamilton_value"},
  				{i18nCaption: "vettel", value:"vettel_value"}
  			]}
  		];

      this.languageNameList = ["asp", "c", "c++", "coldfusion", "groovy", "haskell", "java", "javascript", "perl", "php", "python", "ruby", "scala"];
    }

    function fncOnAttach(){
      var $view = this;

      $view.ui.comboLocal.rup_combo({
    		source : this.languageList,
    		selected: "perl_value",
    		width: 300,
    		blank : "0",
    		rowStriping : true,
    		inputText:true
    	});


    	$view.ui.comboRemoto.rup_combo({
    		source : "comboSimple/remote",
    		sourceParam : {
                label:"desc"+$.rup_utils.capitalizedLang(),
                value:"code",
                style:"css"},
    		selected: "3",
    		width: 300
    	});


    	$view.ui.comboLargo.rup_combo({
    		/*source: ["John Doe - 78 West Main St Apt 3A | Bloomsburg, PA 12345 (footer text)",
    				"Jane Doe - 78 West Main St Apt 3A | Bloomsburg, PA 12345 (footer text)",
    				"Joseph Doe - 78 West Main St Apt 3A | Bloomsburg, PA 12345 (footer text)",
    				"Mad Doe Kiiid - 78 West Main St Apt 3A | Bloomsburg, PA 12345 (footer text)"
    		],*/
    		source : this.personList,
    		selected: "joseph",
    		width: 400,
    		format: "default"
    	});


    	$view.ui.comboGrupos.rup_combo({
    		sourceGroup : this.teamList,
    		selected: "real_value",
    		rowStriping : true
    	});

    	$view.ui.comboGruposRemoto.rup_combo({
    		sourceGroup : "comboSimple/remoteGroup",
    		sourceParam : {
                label:"desc"+$.rup_utils.capitalizedLang(),
                value:"code",
                style:"css"},
    		selected: "7",
    		width: 300
    	});


    	$view.ui.comboImgs.rup_combo({
    		source : this.actionList,
    		imgs : [
    			{Borrar: "delete"},
    			{Filtrar: "filter"},
    			{Imprimir: "print"}
    		],
    		selected: "Filtrar"
    	});

    	$view.ui.comboInput.rup_combo({
    		source : this.languageNameList,
    		width: 300
    	});

    	$view.ui.comboLoadFromSelect.rup_combo({
    		source : "comboSimple/remote",
    		sourceParam : {label:"desc"+$.rup_utils.capitalizedLang(), value:"code", style:"css"},
    		loadFromSelect: true,
    		width: 300,
    		height: 75
    	});
    }




  return ComboSimpleTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(20),
        __webpack_require__(21),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.combo\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, ComboSimpleBodyView, ComboSimpleTestView, ComponentExampleCodeView){

  var ComboSimpleView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new ComboSimpleBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.combo.comboSimple.comboSimpleHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.combo.comboSimple.comboSimpleJsCodeTemplate
    }));
    $view.Test.show(new ComboSimpleTestView());
  }


  return ComboSimpleView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.contextMenu\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ContextMenuBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.contextMenu.contextMenuBodyTemplate

  });

  return ContextMenuBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.contextMenu\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ContextMenuTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.contextMenu.contextMenuTestTemplate,
    ui:{
      contextMenu: "#contextMenu",
      contextMenuLeft: ".contextMenu-left",
      contextMenuHover: "#contextMenu-hover",
      contextMenuOther: ".contextMenu-other",
      btnActivateMenu: "#activate-menu"
    },
    events:{
      "click @ui.btnActivateMenu": fncActivateMenu
    },
    onAttach: fncOnAttach

  });

  function fncOnAttach(){

   	var items = {
        "edit": {name: "Edit", icon: "edit"},
        "cut": {name: "Cut", icon: "cut"},
        "copy": {name: "Copy", icon: "copy"},
        "paste": {name: "Paste", icon: "paste"},
        "delete": {name: "Delete", icon: "delete"},
        "sep1": "---------",
        "quit": {name: "Quit", icon: "quit"}
    };


  	this.ui.contextMenu.rup_contextMenu({
  		callback: function(key, options) {
  			alert("clicked: " + key);
  	    },
  		items: {
  	        "edit": {name: "Clickable", icon: "edit", disabled: false},
  	        "cut": {name: "Disabled", icon: "cut", disabled: true}
  		}
  	});

  	this.ui.contextMenuLeft.rup_contextMenu({
  		trigger: 'left',
  		callback: function(key, options) {
             alert("clicked: " + key);
          },
  		items: {
              "edit": {name: "Edit", icon: "edit", accesskey: "e"},
              "cut": {name: "Cut", icon: "cut", accesskey: "c"},
              // first unused character is taken (here: o)
              "copy": {name: "Copy", icon: "copy", accesskey: "c o p y"},
              // words are truncated to their first letter (here: p)
              "paste": {name: "Paste", icon: "paste", accesskey: "cool paste"},
              "delete": {name: "Delete", icon: "delete"},
              "sep1": "---------",
              "quit": {name: "Quit", icon: "quit"}
          }
  	});

  	this.ui.contextMenuHover.rup_contextMenu({
  		trigger: 'hover',
  		callback: function(key, options) {
  			alert("clicked: " + key);
  	    },
  	    items: {
              "edit": {"name": "Edit", "icon": "edit"},
              "cut": {"name": "Cut", "icon": "cut"},
              "sep1": "---------",
              "quit": {"name": "Quit", "icon": "quit"},
              "sep2": "---------",
              "fold1": {
                  "name": "Sub group",
                  "items": {
                      "foo bar": {"name": "Foo bar"},
                      "fold2": {
                          "name": "Sub group 2",
                          "items": {
                              "alpha": {"name": "alpha"},
                              "bravo": {"name": "bravo"},
                              "charlie": {"name": "charlie"}
                          }
                      },
                      "delta": {"name": "delta"}
                  }
              },
              "fold1a": {
                  "name": "Other group",
                  "items": {
                      "echo": {"name": "echo"},
                      "foxtrot": {"name": "foxtrot"},
                      "golf": {"name": "golf"}
                  }
              }
          }
  	});

  	this.ui.contextMenuOther.rup_contextMenu({
          trigger: 'none',
          build: function($trigger, e) {
  	        return {
  	        	callback: function(key, options) {
  	    			alert("clicked: " + key);
  	    	    },
  	            items: {
  	                "edit": {name: "Edit", icon: "edit"},
  	                "cut": {name: "Cut", icon: "cut"},
  	                "copy": {name: "Copy", icon: "copy"},
  	                "paste": {name: "Paste", icon: "paste"},
  	                "delete": {name: "Delete", icon: "delete"},
  	                "sep1": "---------",
  	                "quit": {name: "Quit", icon: "quit"}
  	            }
  	        };
          }
      });
  }

  function fncActivateMenu(){
    this.ui.contextMenuOther.rup_contextMenu("show");
  }


  return ContextMenuTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(23),
        __webpack_require__(24),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.contextMenu\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, ContextMenuBodyView, ContextMenuTestView, ComponentExampleCodeView){

  var ContextMenuView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new ContextMenuBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.contextMenu.contextMenuHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.contextMenu.contextMenuJsCodeTemplate
    }));
    $view.Test.show(new ContextMenuTestView());
  }


  return ContextMenuView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var DateBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.date.dateBodyTemplate,
  });

  return DateBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.date\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function (Marionette, App) {

  var DateTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.date.dateTestTemplate,
    openDate: fncOpenDate,
    openDateMultiple: fncOpenDateMultiple,
    openDateInline: fncOpenDateInline,
    ui: {
      date: "#fecha",
      dateMultiple: "#fecha_multi",
      dateInline: "#fecha_inline",
      btnDate: "#fecha_button",
      btnDateMultiple: "#fecha_multi_button",
      btnDateInline: "#fecha_inline_button"
    },
    events: {
      'click @ui.btnDate': "openDate",
      'click @ui.dateMultiple': "openDateMultiple",
      'click @ui.dateInline': "openDateInline"
    },
    onAttach: fncOnAttach
  });

  function fncOnAttach() {
    var $view = this;


    var $view = this;

    $view.ui.date.rup_date({
      labelMaskId: "fecha-mask",
      showButtonPanel: true,
      showOtherMonths: true,
      noWeekend: true
      //, buttonImage : "/rup/basic-theme/images/exclamation.png"
    });

    $view.ui.dateMultiple.rup_date({
      multiSelect: 3,
      //multiSelect: [0,5],
      labelMaskId: "fecha_multi-mask"
      //, buttonImage : "/rup/basic-theme/images/exclamation.png"
    });

    $.rup_date({
      from: "desde",
      to: "hasta",
      //Resto igual que en date
      labelMaskId: "intervalo-mask",
      numberOfMonths: 3,
      onSelect: function (selectedDate) {
        /*alert("La fecha seleccionada es: " + selectedDate);*/
      }
    });

    $.rup_date({
      from: "desdeDateTime",
      to: "hastaDateTime",
      //Resto igual que en date
      labelMaskId: "intervalo-mask-date-time",
      numberOfMonths: 3,
      datetimepicker: true,
      showButtonPanel: true,
      showOtherMonths: true,
      noWeekend: true,
      mask: "dd/mm/yyyy hh:mm",
      showSecond: false,
      dateFormat: "dd/mm/yyyy",
      timeFormat: 'hh:mm',
      onSelect: function (selectedDate) {
        /*alert("La fecha seleccionada es: " + selectedDate);*/
      }
    });

    $view.ui.dateInline.rup_date({
      changeMonth: false,
      changeYear: false,
      numberOfMonths: [2, 3],
      stepMonths: 6,
      showWeek: true,
      minDate: $.rup_utils.createDate(01, 01, 2012),
      maxDate: $.rup_utils.createDate(31, 12, 2012)
    });
  }

  function fncOpenDate() {
    alert("Fecha: " + this.ui.date.rup_date("getDate"));
  }

  function fncOpenDateMultiple() {
    alert("Fechas: " + this.ui.dateMultiple.rup_date("getDate"));
  }

  function fncOpenDateInline() {
    alert("Fecha: " + this.ui.dateInline.rup_date("getDate"));
  }

  return DateTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(26),
        __webpack_require__(27),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.date\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, DateBodyView, DateTestView, ComponentExampleCodeView){

  var DateView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new DateBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.date.dateHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.date.dateJsCodeTemplate
    }));
    $view.Test.show(new DateTestView());
  }

  return DateView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.dialog\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var DialogBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.dialog.dialogBodyTemplate
  });

  return DialogBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.dialog\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var DialogTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.dialog.dialogTestTemplate,
      openDialog: fncOpenDialog,
      openAjaxDialogWar: fncOpenAjaxDialogWar,
      openAjaxDialogStatics: fncOpenAjaxDialogStatics,
      openBtnTextDialog: fncOpenBtnTextDialog,
      ui:{
        dialog: "#idDialog",
        btnDialog: "#btnDialog",
        btnAjaxDialogWAR: "#btnAjaxDialogWAR",
        btnAjaxDialogStatics: "#btnAjaxDialogStatics",
        btnTextDialog: "#btnTextDialog"
      },
      events: {
          "click @ui.btnDialog": "openDialog",
          "click @ui.btnAjaxDialogWAR": "openAjaxDialogWar",
          "click @ui.btnAjaxDialogStatics": "openAjaxDialogStatics",
          "click @ui.btnTextDialog": "openBtnTextDialog"

      },
      onAttach: fncOnAttach

  });

  function fncOnAttach(){
    var $view = this;

    $view.ui.dialog.rup_dialog({
        type: $.rup.dialog.DIV,
        autoOpen: false,
        modal: true,
        resizable: true,
        width:"90%",
        position:null,
        appendTo :'#container',
        title: "Título del dialog (div)",
        buttons: [{
                text: "Aceptar",
                click: function () {
                    $view.ui.dialog.dialog("close");
                }
            },
            {
                text: "Enviar",
                click: function () {
                    $view.ui.dialog.dialog("close");
                }
            },
            {
                text: "Abandonar",
                click: function () {
                    $view.ui.dialog.dialog("close");
                },
                btnType: $.rup.dialog.LINK
            }
        ]
        //,position: { my: "left top", at: "left bottom", of: $("#btnAjaxDialogWAR") }
    });
  }

  function fncOpenDialog(){
    console.log("hez");
    this.ui.dialog.rup_dialog("open");
  }

  function fncOpenAjaxDialogWar(){
    $(document).rup_dialog({
        type: $.rup.dialog.AJAX,
        url: "dialog/dialogAjax" ,
        autoOpen: true,
        modal: true,
        width: "650",
        resizable: true,
        title: "Diálogo Ajax (War)",
        buttons: [{
            text: "Aceptar",
            click: function () {
                $(this).dialog("close");
            }
        }]
    });
  }

  function fncOpenAjaxDialogStatics(){
    $(document).rup_dialog({
        type: $.rup.dialog.AJAX,
        url: "app/components/dialog/ajaxDiv.htm",
        autoOpen: true,
        modal: true,
        draggable: true,
        width:"none",
        position:null,
        resizable: false,
        dialogClass: "rup-dialog-responsive",
        title: "Diálogo Ajax (Statics)",
        buttons: [{
            text: "Aceptar",
            click: function () {
                $(this).dialog("close");
            }
        }]
    });
  }

  function fncOpenBtnTextDialog(){
    $(document).rup_dialog({
        type: $.rup.dialog.TEXT,
        autoOpen: true,
        modal: true,
        resizable: true,
        title: "Título del dialog (text) ",
        message: "Se esta creando un div con el mensaje puesto por parametro."
    });
  }



  return DialogTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(29),
        __webpack_require__(30),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.dialog\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, DialogBodyView, DialogTestView, ComponentExampleCodeView){

  var DialogView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new DialogBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.dialog.dialogHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.dialog.dialogJsCodeTemplate
    }));
    $view.Test.show(new DialogTestView());
  }


  return DialogView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.feedback\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var FeedbackBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.feedback.feedbackBodyTemplate,
      ui:{
          feedbackOk: "#feedbackOk",
          feedbackAlert: "#feedbackAlert",
          feedbackError: "#feedbackError"
      },
      onShow: fncOnShow
  });

  function fncOnShow(){
    var $view = this;

    $view.ui.feedbackOk.rup_feedback({
        message:"<strong>Ok!</strong> Se ha realizado correctamente la acción solicitada.",
        type:"ok"
    });
    $view.ui.feedbackAlert.rup_feedback({
        message:"<strong>Atención!</strong> El resultado de la acción requiere su atención.",
        type:"alert"
    });
    $view.ui.feedbackError.rup_feedback({
        message:"<strong>Error!</strong> Se ha producido un error inesperado.",
        type:"error"
    });
  }

  return FeedbackBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.feedback\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var FeedbackTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.feedback.feedbackTestTemplate,
      create: fncCreate,
      destroy: fncDestroy,
      set: fncSet,
      setOptions: fncSetOptions,
      setType: fncSetType,
      setImageClass: fncSetImageClass,
      setHide: fncHide,
      setClose: fncClose,
      setShow: fncShow,
      _getOptions: fncGetOptions,
      ui:{
          feedback: "#feedback",
          btnCreate: "#boton_create",
          btnDestroy: "#boton_destroy",
          btnSet: "#boton_set",
          btnSetOptions: "#boton_setOptions",
          btnSetType: "#boton_setType",
          btnSetImageClass: "#boton_setImgClass",
          btnHide: "#boton_hide",
          btnClose: "#boton_close",
          btnShow: "#boton_show",
          selectType: "#feedback_type",
          selectGotoTop: "#feedback_gotoTop",
          selectBlock: "#feedback_block",
          selectCloseLink: "#feedback_closeLink",
          txtImageClass: "#feedback_imgClass",
          txtDelay: "#feedback_delay",
          txtFadeSpeed: "#feedback_fadeSpeed",
          buttons:"button.feedback-test-button"

      },
      events: {
          "click @ui.btnCreate": "create",
          "click @ui.btnDestroy": "destroy",
          "click @ui.btnSet": "set",
          "click @ui.btnSetOptions": "setOptions",
          "click @ui.btnSetType": "setType",
          "click @ui.btnSetImageClass": "setImageClass",
          "click @ui.btnHide": "hide",
          "click @ui.btnClose": "close",
          "click @ui.btnShow": "show"
      }

  });

  function fncCreate(){
      this.ui.feedback.rup_feedback(this._getOptions());
      this.ui.btnCreate.attr("disabled",true);
      this.ui.btnDestroy.attr("disabled",false);
  }
  function fncDestroy(){
      this.ui.feedback.rup_feedback("destroy");
      this.ui.btnDestroy.attr("disabled",true);
      this.ui.btnCreate.attr("disabled",false);
  }
  function fncSet(){
      this.ui.feedback.rup_feedback("set","Este es un ejemplo de <b>Feedback</b>");
  }
  function fncSetOptions(){
      this.ui.feedback.rup_feedback("option",this._getOptions());
  }
  function fncSetType(){
      this.ui.feedback.rup_feedback("set",
              "Este es un ejemplo de cambio de tipo de <b>Feedback</b>",
              this.ui.selectType.val()==""?null:this.ui.selectType.val()
      );
  }
  function fncSetImageClass(){
      this.ui.feedback.rup_feedback("set",
              "Este es un ejemplo de cambio de tipo por imgClass del <b>Feedback</b>",
              null,
              this.ui.txtImageClass.val()
      );
  }
  function fncHide(){
      this.ui.feedback.rup_feedback("hide",
              this.ui.txtDelay.val()==""?null:this.ui.txtDelay.val(),
              this.ui.txtFadeSpeed.val()==""?null:this.ui.txtFadeSpeed.val()
      );
  }
  function fncClose(){
      this.ui.feedback.rup_feedback("close");
  }
  function fncShow(){
      this.ui.feedback.rup_feedback("show");
  }

  function fncGetOptions(){
      //Recuperar variables
      var my_type = this.ui.selectType.val()==""?null:this.ui.selectType.val(),
          my_imgClass = this.ui.txtImageClass.val()==""?null:this.ui.txtImageClass.val(),
          my_delay = this.ui.txtDelay.val()==""?null: this.ui.txtDelay.val(),
          my_fadeSpeed = this.ui.txtFadeSpeed.val()==""?null: this.ui.txtFadeSpeed.val(),
          my_gotoTop = eval(this.ui.selectGotoTop.val()),
          my_block = eval(this.ui.selectBlock.val()),
          my_closeLink = eval(this.ui.selectCloseLink.val()),
          //Parametros feedback
          properties = {
              type: my_type,
              imgClass: my_imgClass,
              delay: my_delay,
              fadeSpeed: my_fadeSpeed,
              gotoTop: my_gotoTop,
              block: my_block,
              closeLink: my_closeLink,
              message: "Este es un ejemplo de <b>Feedback</b> con message cargado en el create()"
          };
      return properties;
  }


  return FeedbackTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(32),
        __webpack_require__(33),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.feedback\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, FeedbackBodyView, FeedbackTestView, ComponentExampleCodeView){

  var FeedbackView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new FeedbackBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.feedback.feedbackHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.feedback.feedbackJsCodeTemplate
    }));
    $view.Test.show(new FeedbackTestView());
  }


  return FeedbackView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.form\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var FormBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.form.formBodyTemplate
  });

  return FormBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($, jQuery) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.form\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var FormTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.form.formTestTemplate,
      reconfigureForm: fncReconfigureForm,
      exampleFormSerialize: fncExampleFormSerialize,
      exampleFieldSerialize: fncExampleFieldSerialize,
      exampleFieldValue: fncExampleFieldValue,
      exampleResetForm: fncExampleResetForm,
      exampleClearForm: fncExampleClearForm,
      exampleClearFields: fncExampleClearFields,

      ui:{
        botonConfiguracion: '#botonConfiguracion',
        botonFormSerialize: '#botonFormSerialize',
        botonFieldValue: '#botonFieldValue',
        botonResetForm: '#botonResetForm',
        botonClearForm: '#botonClearForm',
        botonClearFields: '#botonClearFields',
        formHttpSubmit: "#formHttpSubmit",
        formMultientidades: "#formMultientidades",
        formMultientidadesMismoTipo: "#formMultientidadesMismoTipo",
        formSubidaArchivos: "#formSubidaArchivos",
        tabsForm: "#tabsFormulario",
        feedback: "#feedbackMensajes",
        inputFields: "#form input",
        errorLabels: "#formHttpSubmit label.error",
        errorInputs: "#formHttpSubmit input.error",
        validationIcons: "#formHttpSubmit img.error.rup-maint_validateIcon",
        resultadoFormSerialize: "#resultadoFormSerialize",
        resultadoFieldSerialize: "#resultadoFieldSerialize",
        fieldSexo: "#sexo",
        fieldPais: "#pais",
        fieldAutonomia: "#autonomia",
        fieldProvincia: "#provincia",
        fieldMunicipio: "#municipio",
        fieldCalle: "#calle",
        fieldFechaNacimiento: "#fechaNacimiento"
      },
      events:{
        "click @ui.botonConfiguracion": "reconfigureForm",
        "click @ui.botonFormSerialize": "exampleFormSerialize",
        "click @ui.botonFieldSerialize": "exampleFieldSerialize",
        "click @ui.botonFieldValue": "exampleFieldValue",
        "click @ui.botonResetForm": "exampleResetForm",
        "click @ui.botonClearForm": "exampleClearForm",
        "click @ui.botonClearFields": "exampleClearFields"
      },
      onAttach: fncOnAttach,
      _configureForm: _fncConfigureForm
  });

  function fncOnAttach(){
    var $view = this;
    // Definicion de las pestanas
    $view.ui.tabsForm.rup_tabs({
      tabs : [{
        i18nCaption : "ejemploYFunciones",
        layer : "#divformHttpSubmit"
      }, {
        i18nCaption : "multiplesEntidades",
        layer : "#divMultiplesEntidades"
      }, {
        i18nCaption : "subidaArchivos",
        layer : "#divSubidaFicheros"
      }]
    });

   /*
    * CREACION DE LOS COMPONENTES DEL FORMULARIO
    */

   // Feedback
   $view.ui.feedback.rup_feedback({
     type: "ok",
     closeLink: true,
     delay: 1000,
     fadeSpeed: 500,
     block:true
   });

   // Combo sexo
   $view.ui.fieldSexo.rup_combo({
     source : [
       {i18nCaption: "masculino", value:"M"},
       {i18nCaption: "femenino", value:"F"}
     ],
     i18nId:"sexo"
   });

   // Combo pais
   $view.ui.fieldPais.rup_combo({
     source : "nora/pais",
     sourceParam : {label:"dsO", value:"id"},
     blank : "0"
   });

   // Combo autonomia
   $view.ui.fieldAutonomia.rup_combo({
     source : "nora/autonomia",
     sourceParam : {label:"dsO", value:"id"},
     width : 400,
     blank : ""
   });

 //	jQuery("#formTypeCombo").rup_combo({
 //		source : [{label:"AJAX submit", value:"ajax"},{label:"HTTP submit", value:"http"}]
 //	});

   // Combo provincia
   $view.ui.fieldProvincia.rup_combo({
     parent: ["autonomia"],
     source : "../nora/provincia",
     firstLoad:[{"value":"01","label":"Alava/Araba"},{"value":"20","label":"Gipuzkoa"},{"value":"48","label":"Bizkaia"}],
     sourceParam : {label:"dsO", value:"id"},
     width : 300,
     blank : ""
   });

   // Autocomplete municipio
   $view.ui.fieldMunicipio.rup_autocomplete({
     source : "../nora/municipio",
     sourceParam : {label:"dsO", value:"id"},
     minLength: 4
   });

   // Autocomplete calle
   $view.ui.fieldCalle.rup_autocomplete({
     source : "../nora/calle",
     sourceParam : {label:"dsO", value:"id"},
     minLength: 4
   });

   // Fecha
   $view.ui.fieldFechaNacimiento.rup_date();


   /*
    * FUNCIONES
    */

   // Se muestra un feedback el caso de que se haya realizado un envio http del formulario
   //if (respuesta==="true"){
   //	$("#feedbackMensajes").rup_feedback("set","El formulario se ha enviado correctamente mediante un submit http", "ok");
   //}


   /*
    * INICIALIZACION DEL FORMULARIO
    */
   $view._configureForm();



   /*
    * EJEMPLOS DE METODOS
    */
   $view.ui.formMultientidades.rup_form({
     url:"form/multientidades",
     feedback:$("#feedbackMensajes"),
     success:function(xhr){
       $view.ui.feedback.rup_feedback("set",$.rup_utils.printMsg(jQuery.toJSON(xhr)),"ok");
     },
     validate:{
       rules:{
         "departamento.code":{digits:true}
       }
     }

   });

   $view.ui.formMultientidadesMismoTipo.rup_form({
     url:$.rup.CTX_PATH+"/patrones/form/multientidadesMismoTipo",
     feedback:$("#feedbackMensajes"),
     success:function(xhr){
       $view.ui.rup_feedback("set",$.rup_utils.printMsg(jQuery.toJSON(xhr)),"ok");
     },
     validate:{
       rules:{
         "comarca1.code":{digits:true},
         "comarca2.code":{digits:true},
         "comarca3.code":{digits:true},
         "comarca3.provincia.code":{digits:true}
       }
     }
   });

   $view.ui.formSubidaArchivos.rup_form({
     url:$.rup.CTX_PATH+"/patrones/form/subidaArchivos",
     feedback:$("#feedbackMensajes"),
     dataType: 'json',
     success:function(xhr){
       $view.ui.feedback.rup_feedback("set",$.rup_utils.printMsg(xhr),"ok");
     }
   });
  }

  // Se realiza la reconfiguracion del componente de acuerdo a los valores indicados en la seccion de configuracion
  function fncReconfigureForm(){
      var $view = this;

      $view.ui.formHttpSubmit.rup_form("destroy");
  		$view.ui.errorLabels.remove();
  		$view.ui.validationIcons.remove();
  		$view.ui.errorInputs.removeClass("error");
  		$view.ui.feedback.hide();
  		$view._configureForm();
  }

  function fncExampleFormSerialize(){
      var $view = this;
      var serializedForm = $view.ui.formHttpSubmit.rup_form("formSerialize");
      $view.ui.resultadoFormSerialize.text(serializedForm);
  }

  function fncExampleFieldSerialize(){
      var $view = this;
      var serializedFields = $view.ui.inputFields.rup_form("fieldSerialize");
      $view.ui.resultadoFieldSerialize.text(serializedFields);
  }

  function fncExampleFieldValue(){
      var $view = this;
      var serializedFields = $view.ui.inputFields.rup_form("fieldValue");
      $view.ui.resultadoFieldValue.text(serializedFields.toString());
  }

  function fncExampleResetForm(){
      var $view = this;
      $view.ui.formHttpSubmit.rup_form("resetForm");
  }

  function fncExampleClearForm(){
      var $view = this;
      $view.ui.formHttpSubmit.rup_form("clearForm");
  }

  function fncExampleClearFields(){
      var $view = this;
      $view.ui.inputFields.rup_form("clearFields");
  }

  function _fncConfigureForm(){
      var $view = this;
      // Objeto de configuracion del componente.
      var configSettings = {};

      // Propiedades de configuracion por defecto comunes a todas las posibilidades de configuracion.
      var defaultConfigSettings = {
              feedback:$("#feedbackMensajes"),
              success:function(xhr){
                  $("#feedbackMensajes").rup_feedback("set",$.rup_utils.printMsg($.parseJSON($.parseJSON(xhr))),"ok");
              }
      };

      // Creacion de la configuracion del componente de validaciones.
      var validationConfigSettings = {
          validate:{
              liveCheckingErrors:true,
              showFieldErrorAsDefault:true,
              showErrorsInFeedback:true,
              showErrorsDetailsInFeedback:true,
              feedback:$("#feedbackMensajes"),
              messages:{
                  "password_confirm":$.rup.i18n.app.validaciones.password_confirm,
                  "email_confirm":$.rup.i18n.app.validaciones.email_confirm
              },
              rules:{
                  "nombre":{required:true},
                  "apellido1":{required:true},
                  "usuario":{required:true,minlength:4},
                  "password":{required:true,minlength:4},
                  "password_confirm": {
                        equalTo: "#password"
                      },
                  "fechaNacimiento":{date: true},
                  "email":{email: true},
                  "email_confirm": {
                        equalTo: "#email"
                      },
                  "dni":{dni:true}
              }
          }
      };

      // Creacion de la configuracion del componente de formulario
      var formConfigSettings = {
          ajaxForm:{
              url:$.rup.CTX_PATH+"/patrones/form/ajax",
              success:function(){
                  $("#feedbackMensajes").rup_feedback("set","El formulario se ha enviado correctamente mediante un submit AJAX", "ok");
              }
          }
      };


      // Se conforma el objeto de configuracion final
      configSettings = $.extend(true, configSettings, defaultConfigSettings, validationConfigSettings,
              ($("#formTypeCombo").val()==="ajax"?formConfigSettings:{})
      );

      // Se realiza la creacion del componente formulario
      $("#formHttpSubmit").rup_form(configSettings);
  }




  return FormTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(2)))

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(35),
        __webpack_require__(36),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.form\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, FormBodyView, FormTestView, ComponentExampleCodeView){

  var FormView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new FormBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.form.formHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.form.formJsCodeTemplate
    }));
    $view.Test.show(new FormTestView());
  }


  return FormView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.message\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var MessageBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.message.messageBodyTemplate,
  });

  return MessageBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.message\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var MessageTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.message.messageTestTemplate,
      ui:{
        btnError: '#btnError',
        btnConfirm: '#btnConfirm',
        btnOK: '#btnOK',
        btnAlert: '#btnAlert',
        btnAlertJS: '#btnAlertJS',
        buttons: "button.message-button"
      },
      events:{
        "click @ui.btnError": fncClickBtnError,
        "click @ui.btnConfirm": fncClickBtnConfirm,
        "click @ui.btnOK": fncClickBtnOK,
        "click @ui.btnAlert": fncClickAlert,
        "click @ui.btnAlertJS": fncClickBtnAlertJS
      },
      onAttach: fncOnAttach
  });

  function fncOnAttach(){
    
    this.ui.buttons.rup_button({});

  }

  function fncClickBtnError(){
    $.rup_messages("msgError", {
      title: "Error grave",
      message: "<p>Se ha producido un error a la hora de intentar guardar el registro.<br>Consulte con el administrador.</p>"
    });
  }

  function fncClickBtnConfirm(){
    $.rup_messages("msgConfirm", {
      message: "¿Está seguro que desea cancelar?",
      title: "Confirmación",
      OKFunction : fncConfirmAcceptCallback
    });
  }

  function fncClickBtnOK(){
    $.rup_messages("msgOK", {
      title: "Correcto",
      message: "Todo ha ido OK."
    });
  }

  function fncClickAlert(){
    $.rup_messages("msgAlert", {
      title: "Alerta",
      message: "Esto es una alerta."
    });
  }

  function fncClickBtnAlertJS(){
    alert("esto es un alert de javascript puro");
  }

  function fncConfirmAcceptCallback(){
    alert("Aceptar");
  }

  return MessageTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(38),
        __webpack_require__(39),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.message\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, MessagekBodyView, MessageTestView, ComponentExampleCodeView){

  var MessageView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new MessagekBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.message.messageHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.message.messageJsCodeTemplate
    }));
    $view.Test.show(new MessageTestView());
  }

  return MessageView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.progressbar\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ProgressbarBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.progressbar.progressbarBodyTemplate

  });

  return ProgressbarBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.progressbar\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ProgressbarTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.progressbar.progressbarTestTemplate,
    ui:{
      progressbar: "#progressbar",
      progressbarLabel: "#progressbarLabel",
      progressbarValueFalse: "#progressbarValueFalse"
    },
    onAttach: fncOnAttach

  });

  function fncOnAttach(){

      var $view = this;

      $view.ui.progressbar.rup_progressbar({
        value: 37
      });

      $view.ui.progressbarLabel.rup_progressbar({
        value: 37,
        label: $.rup.i18n.base.rup_progressbar.progress
      });

      $view.ui.progressbarValueFalse.rup_progressbar({
        value: false,
        label: $.rup.i18n.base.rup_progressbar.loading
      });
  }


  return ProgressbarTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(41),
        __webpack_require__(42),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.progressbar\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, ProgressbarBodyView, ProgressbarTestView, ComponentExampleCodeView){

  var ProgressbarView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new ProgressbarBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.progressbar.progressbarHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.progressbar.progressbarJsCodeTemplate
    }));
    $view.Test.show(new ProgressbarTestView());
  }


  return ProgressbarView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.slider\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var SliderBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.slider.sliderBodyTemplate

  });

  return SliderBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.slider\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var SliderTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.slider.sliderTestTemplate,
    ui:{
      slider: "#slider",
      sliderRange: "#sliderRange",
      amount: "#amount"
    },
    onAttach: fncOnAttach

  });

  function fncOnAttach(){
    var $view = this;

    $view.ui.slider.rup_slider({});

    $view.ui.sliderRange.rup_slider({
      range: true,
      min: 0,
      max: 500,
      values: [ 75, 300 ],
      slide: function( event, ui ) {
        $view.ui.amount.val( "$" + ui.values[ 0 ] + " - $" + ui.values[ 1 ] );
      }
    });

  }


  return SliderTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(44),
        __webpack_require__(45),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.slider\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, SliderBodyView, SliderTestView, ComponentExampleCodeView){

  var SliderView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new SliderBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.slider.sliderHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.slider.sliderJsCodeTemplate
    }));
    $view.Test.show(new SliderTestView());
  }


  return SliderView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.spinner\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var SpinnerBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.spinner.spinnerBodyTemplate

  });

  return SpinnerBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.spinner\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var SpinnerTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.spinner.spinnerTestTemplate,
    ui:{
      spinner: "#spinner",
      btnDisable: "#disable",
      btnDestroy: "#destroy",
      btnGetValue: "#getvalue",
      btnSetValue: "#setvalue",
      btnButton: "#button"
    },
    onAttach: fncOnAttach

  });


  function fncOnAttach(){
    var $view = this;

    $view.ui.spinner.rup_spinner();

    $view.ui.btnDisable.click(function() {
      if ( $view.ui.spinner.spinner( "option", "disabled" ) ) {
        $view.ui.spinner.spinner( "enable" );
      } else {
        $view.ui.spinner.spinner( "disable" );
      }
    });
    $view.ui.btnDestroy.click(function() {
      if ( $view.ui.spinner.spinner( "instance" ) ) {
        $view.ui.spinner.spinner( "destroy" );
      } else {
        $view.ui.spinner.rup_spinner();
      }
    });
    $view.ui.btnGetValue.click(function() {
      alert( $view.ui.spinner.rup_spinner( "getRupValue" ) );
    });
    $view.ui.btnSetValue.click(function() {
      $view.ui.spinner.rup_spinner( "setRupValue", 5 );
    });

    $view.ui.btnButton.button();

  }


  return SpinnerTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(47),
        __webpack_require__(48),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.spinner\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, SpinnerBodyView, SpinnerTestView, ComponentExampleCodeView){

  var SpinnerView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new SpinnerBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.spinner.spinnerHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.spinner.spinnerJsCodeTemplate
    }));
    $view.Test.show(new SpinnerTestView());
  }


  return SpinnerView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(4),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, hljs){

  var TabsStaticView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.tabs.tabsStaticTemplate,
    ui:{
      tabs: "#tabsStatic"
    },
    onDomRefresh: fncOnDomRefresh

  });

  function fncOnDomRefresh(){

    this.ui.tabs.rup_tabs({
     		tabs : [
     			{i18nCaption:"pestana0", layer:".estiloo"},
     			{i18nCaption:"pestana1", layer:"#ejemploVisual"},
     			{i18nCaption:"pestana2", layer:".estiloo2"}]
    });
  }

  return TabsStaticView;

}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.time\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var TimeBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.time.timeBodyTemplate

  });

  return TimeBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.time\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var TimeTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.time.timeTestTemplate,
    ui:{
      timeFull: "#hora",
      timeShort: "#hora2",
      timeInline: "#hora_inline"
    },
    onAttach: fncOnAttach
  });

  function fncOnAttach(){
    var $view = this;

    $view.ui.timeFull.rup_time({
  		labelMaskId : "hora-mask",
  		showSecond : true,
  		timeFormat: 'hh:mm:ss',
  		showButtonPanel: true
  	});

  	$view.ui.timeShort.rup_time({
  		showTime: false,
  		ampm : true,
  		hour: 8,
  		minute: 30,
  		hourMin: 8,
  		hourMax: 18,
  		stepHour : 2,
  		stepMinute : 10
  		//,disabled:true
  	});

  	$view.ui.timeInline.rup_time({
  		hourGrid: 5,
  		minuteGrid: 10
  	});

  	$view.ui.timeInline.rup_time("setTime", new Date());
  }


  return TimeTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(51),
        __webpack_require__(52),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.time\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, TimeBodyView, TimeTestView, ComponentExampleCodeView){

  var TimeView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new TimeBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.time.timeHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.time.timeJsCodeTemplate
    }));
    $view.Test.show(new TimeTestView());
  }


  return TimeView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ToolbarBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.toolbar.toolbarBodyTemplate,
  });

  return ToolbarBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.toolbar\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ToolbarTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.toolbar.toolbarTestTemplate,
      ui:{
        toolbar: "#toolbar",
        toolbarMixta: "#toolbarMixta",
        toolbarRight: "#toolbarRight",

        toolbarRwd: "#toolbarRwd",
        toolbarNewJs: "#toolbarNewJs",

        jQueryUIToolbar: "#jQueryUIToolbar",
        jQueryUIToolbarMixta: "#jQueryUIToolbarMixta",
        jQueryUIToolbarRight: "#jQueryUIToolbarRight"

      },
      onAttach: fncOnAttach
  });

  function fncOnAttach(){



    this.ui.toolbar.rup_toolbar({

  		buttons:[
  			{i18nCaption:"buscar", css:"fa fa-search", click: handlerBoton },
  			{id: "mbuton1", i18nCaption:"otros", buttons:[
  				{i18nCaption:"nuevo", css:"fa fa-file-o", click: handlerMButtons},
  				{i18nCaption:"editar", css:"fa fa-pencil-square-o", click: handlerMButtons},
  				{i18nCaption:"cancelar", css:"fa fa-times-circle", click: handlerMButtons},
  				{i18nCaption:"borrar", css:"fa fa-trash-o", click: handlerMButtons},
  				{i18nCaption:"filtrar", css:"fa fa-filter", click: handlerMButtons},
  				{i18nCaption:"imprimir", css:"fa fa-print", click: handlerMButtons}
  			 ]},
  			 {i18nCaption:"editar", css:"fa fa-pencil-square-o", click: handlerMButtons},
  			 {i18nCaption:"borrar", css:"fa fa-trash-o", click: handlerMButtons},
  			 {id : "mbuton2", i18nCaption:"ficheros", buttons:[
     				{i18nCaption:"DLL", css:"fa fa-file-o", click: handlerMButtons },
     				{i18nCaption:"DOC", css:"fa fa-file-word-o", click: handlerMButtons},
     				{i18nCaption:"EXE", css:"fa fa-file-o", click: handlerMButtons},
     				{i18nCaption:"GIF", css:"fa fa-file-image-o", click: handlerMButtons},
     				{i18nCaption:"JPG", css:"fa fa-file-image-o", click: handlerMButtons},
     				{i18nCaption:"JS",  css:"fa fa-file-code-o",  click: handlerMButtons},
     				{i18nCaption:"PDF", css:"fa fa-file-pdf-o", click: handlerMButtons},
     				{i18nCaption:"PPT", css:"fa fa-file-powerpoint-o", click: handlerMButtons},
     				{i18nCaption:"TXT", css:"fa fa-file-text-o", click: handlerMButtons},
     				{i18nCaption:"XLS", css:"fa fa-file-excel-o", click: handlerMButtons},
     				{i18nCaption:"ZIP", css:"fa fa-file-archive-o", click: handlerMButtons}
     			]},
     			{i18nCaption:"filtrar", css:"fa fa-filter", click: handlerMButtons}
  		]
  	});

    this.ui.toolbarRight.rup_toolbar({

  		buttons:[
  		    {i18nCaption:"cancelar", css:"fa fa-times-circle", click: handlerMButtons, right: true},
  		    {i18nCaption:"borrar", css:"fa fa-trash-o", click: handlerMButtons, right: true},
  			{id: "mbuton1", i18nCaption:"otros", right: true, buttons:[
          {i18nCaption:"nuevo", css:"fa fa-file-o", click: handlerMButtons},
  				{i18nCaption:"editar", css:"fa fa-pencil-square-o", click: handlerMButtons},
  				{i18nCaption:"cancelar", css:"fa fa-times-circle", click: handlerMButtons},
  				{i18nCaption:"borrar", css:"fa fa-trash-o", click: handlerMButtons},
  				{i18nCaption:"filtrar", css:"fa fa-filter", click: handlerMButtons},
  				{i18nCaption:"imprimir", css:"fa fa-print", click: handlerMButtons}
  			 ]},
  			 {i18nCaption:"editar", css:"fa fa-pencil-square-o", click: handlerMButtons, right: true},
  			 {id : "mbuton2", i18nCaption:"ficheros", right: true, buttons:[
           {i18nCaption:"DLL", css:"fa fa-file-o", click: handlerMButtons },
           {i18nCaption:"DOC", css:"fa fa-file-word-o", click: handlerMButtons},
           {i18nCaption:"EXE", css:"fa fa-file-o", click: handlerMButtons},
           {i18nCaption:"GIF", css:"fa fa-file-image-o", click: handlerMButtons},
           {i18nCaption:"JPG", css:"fa fa-file-image-o", click: handlerMButtons},
           {i18nCaption:"JS",  css:"fa fa-file-code-o",  click: handlerMButtons},
           {i18nCaption:"PDF", css:"fa fa-file-pdf-o", click: handlerMButtons},
           {i18nCaption:"PPT", css:"fa fa-file-powerpoint-o", click: handlerMButtons},
           {i18nCaption:"TXT", css:"fa fa-file-text-o", click: handlerMButtons},
           {i18nCaption:"XLS", css:"fa fa-file-excel-o", click: handlerMButtons},
           {i18nCaption:"ZIP", css:"fa fa-file-archive-o", click: handlerMButtons}
     			]},
     			{i18nCaption:"filtrar", css:"fa fa-filter", click: handlerMButtons, right: true},
     			{i18nCaption:"imprimir", css:"fa fa-print", click: handlerMButtons, right: true}
  		]
  	});

    this.ui.toolbarRwd.rup_toolbar({
      buttons:[
        {id: "filter", text:"Filtrar", css:"fa fa-filter", click: handlerMButtons},
        {id: "print", text:"Imprimir", css:"fa fa-print", click: handlerMButtons},
  			{id: "others", id: "mbuton1", text:"Otros", groupClasses:"rup-collapsed-md", buttons:[
  				{id: "new", text:"Nuevo", css:"fa fa-file-o", click: handlerMButtons},
  				{id: "edit", text:"Editar", css:"fa fa-pencil-square-o", click: handlerMButtons},
  				{id: "cancel", text:"Cancelar", css:"fa fa-times-circle", click: handlerMButtons},
  				{id: "delete", text:"Borrar", css:"fa fa-trash-o", click: handlerMButtons}
  			 ]}
       ]
    });

    this.ui.toolbarMixta.rup_toolbar({

  		buttons:[
  		    {i18nCaption:"cancelar", css:"fa fa-times-circle", click: handlerMButtons, right: true},
  			{i18nCaption:"buscar", css:"fa fa-search", click: handlerBoton },
  			{id: "mbuton1", i18nCaption:"otros", buttons:[
          {i18nCaption:"nuevo", css:"fa fa-file-o", click: handlerMButtons},
  				{i18nCaption:"editar", css:"fa fa-pencil-square-o", click: handlerMButtons},
  				{i18nCaption:"cancelar", css:"fa fa-times-circle", click: handlerMButtons},
  				{i18nCaption:"borrar", css:"fa fa-trash-o", click: handlerMButtons},
  				{i18nCaption:"filtrar", css:"fa fa-filter", click: handlerMButtons},
  				{i18nCaption:"imprimir", css:"fa fa-print", click: handlerMButtons}
  			 ]},
  			 {id : "mbuton2", i18nCaption:"ficheros", right: true, buttons:[
           {i18nCaption:"DLL", css:"fa fa-file-o", click: handlerMButtons },
           {i18nCaption:"DOC", css:"fa fa-file-word-o", click: handlerMButtons},
           {i18nCaption:"EXE", css:"fa fa-file-o", click: handlerMButtons},
           {i18nCaption:"GIF", css:"fa fa-file-image-o", click: handlerMButtons},
           {i18nCaption:"JPG", css:"fa fa-file-image-o", click: handlerMButtons},
           {i18nCaption:"JS",  css:"fa fa-file-code-o",  click: handlerMButtons},
           {i18nCaption:"PDF", css:"fa fa-file-pdf-o", click: handlerMButtons},
           {i18nCaption:"PPT", css:"fa fa-file-powerpoint-o", click: handlerMButtons},
           {i18nCaption:"TXT", css:"fa fa-file-text-o", click: handlerMButtons},
           {i18nCaption:"XLS", css:"fa fa-file-excel-o", click: handlerMButtons},
           {i18nCaption:"ZIP", css:"fa fa-file-archive-o", click: handlerMButtons}
     			]},
     			{i18nCaption:"filtrar", css:"fa fa-filter", click: handlerMButtons},
     			{i18nCaption:"imprimir", css:"fa fa-print", click: handlerMButtons, right: true}
  		]
  	});

    this.ui.jQueryUIToolbar.rup_toolbar({

      adapter: "toolbar_jqueryui",
  		buttons:[
  			{i18nCaption:"buscar", css:"buscar", click: handlerBoton },
  			{id: "mbuton1", i18nCaption:"otros", buttons:[
  				{i18nCaption:"nuevo", css:"nuevo", click: handlerMButtons},
  				{i18nCaption:"editar", css:"editar", click: handlerMButtons},
  				{i18nCaption:"cancelar", css:"cancelar", click: handlerMButtons},
  				{i18nCaption:"borrar", css:"borrar", click: handlerMButtons},
  				{i18nCaption:"filtrar", css:"filtrar", click: handlerMButtons},
  				{i18nCaption:"imprimir", css:"imprimir", click: handlerMButtons}
  			 ]},
  			 {i18nCaption:"editar", css:"editar", click: handlerMButtons},
  			 {i18nCaption:"borrar", css:"borrar", click: handlerMButtons},
  			 {id : "mbuton2", i18nCaption:"ficheros", buttons:[
     				{i18nCaption:"DLL", css:"dll", click: handlerMButtons },
     				{i18nCaption:"DOC", css:"doc", click: handlerMButtons},
     				{i18nCaption:"EXE", css:"exe", click: handlerMButtons},
     				{i18nCaption:"GIF", css:"gif", click: handlerMButtons},
     				{i18nCaption:"JPG", css:"jpg", click: handlerMButtons},
     				{i18nCaption:"JS",  css:"js",  click: handlerMButtons},
     				{i18nCaption:"PDF", css:"pdf", click: handlerMButtons},
     				{i18nCaption:"PPT", css:"ppt", click: handlerMButtons},
     				{i18nCaption:"TXT", css:"txt", click: handlerMButtons},
     				{i18nCaption:"XLS", css:"xls", click: handlerMButtons},
     				{i18nCaption:"ZIP", css:"zip", click: handlerMButtons}
     			]},
     			{i18nCaption:"filtrar", css:"filtrar", click: handlerMButtons}
  		]
  	});

  	this.ui.jQueryUIToolbarMixta.rup_toolbar({
      adapter: "toolbar_jqueryui",
  		buttons:[
  		    {i18nCaption:"cancelar", css:"cancelar", click: handlerMButtons, right: true},
  			{i18nCaption:"buscar", css:"buscar", click: handlerBoton },
  			{id: "mbuton1", i18nCaption:"otros", buttons:[
  				{i18nCaption:"nuevo", css:"nuevo", click: handlerMButtons},
  				{i18nCaption:"editar", css:"editar", click: handlerMButtons},
  				{i18nCaption:"cancelar", css:"cancelar", click: handlerMButtons},
  				{i18nCaption:"borrar", css:"borrar", click: handlerMButtons},
  				{i18nCaption:"filtrar", css:"filtrar", click: handlerMButtons},
  				{i18nCaption:"imprimir", css:"imprimir", click: handlerMButtons}
  			 ]},
  			 {id : "mbuton2", i18nCaption:"ficheros", right: true, buttons:[
     				{i18nCaption:"DLL", css:"dll", click: handlerMButtons },
     				{i18nCaption:"DOC", css:"doc", click: handlerMButtons},
     				{i18nCaption:"EXE", css:"exe", click: handlerMButtons},
     				{i18nCaption:"GIF", css:"gif", click: handlerMButtons},
     				{i18nCaption:"JPG", css:"jpg", click: handlerMButtons},
     				{i18nCaption:"JS",  css:"js",  click: handlerMButtons},
     				{i18nCaption:"PDF", css:"pdf", click: handlerMButtons},
     				{i18nCaption:"PPT", css:"ppt", click: handlerMButtons},
     				{i18nCaption:"TXT", css:"txt", click: handlerMButtons},
     				{i18nCaption:"XLS", css:"xls", click: handlerMButtons},
     				{i18nCaption:"ZIP", css:"zip", click: handlerMButtons}
     			]},
     			{i18nCaption:"filtrar", css:"filtrar", click: handlerMButtons},
     			{i18nCaption:"imprimir", css:"imprimir", click: handlerMButtons, right: true}
  		]
  	});

  	this.ui.jQueryUIToolbarRight.rup_toolbar({
  		adapter: "toolbar_jqueryui",
  		buttons:[
  		    {i18nCaption:"cancelar", css:"cancelar", click: handlerMButtons, right: true},
  		    {i18nCaption:"borrar", css:"borrar", click: handlerMButtons, right: true},
  			{id: "mbuton1", i18nCaption:"otros", right: true, buttons:[
  				{i18nCaption:"nuevo", css:"nuevo", click: handlerMButtons},
  				{i18nCaption:"editar", css:"editar", click: handlerMButtons},
  				{i18nCaption:"cancelar", css:"cancelar", click: handlerMButtons},
  				{i18nCaption:"borrar", css:"borrar", click: handlerMButtons},
  				{i18nCaption:"filtrar", css:"filtrar", click: handlerMButtons},
  				{i18nCaption:"imprimir", css:"imprimir", click: handlerMButtons}
  			 ]},
  			 {i18nCaption:"editar", css:"editar", click: handlerMButtons, right: true},
  			 {id : "mbuton2", i18nCaption:"ficheros", right: true, buttons:[
     				{i18nCaption:"DLL", css:"dll", click: handlerMButtons },
     				{i18nCaption:"DOC", css:"doc", click: handlerMButtons},
     				{i18nCaption:"EXE", css:"exe", click: handlerMButtons},
     				{i18nCaption:"GIF", css:"gif", click: handlerMButtons},
     				{i18nCaption:"JPG", css:"jpg", click: handlerMButtons},
     				{i18nCaption:"JS",  css:"js",  click: handlerMButtons},
     				{i18nCaption:"PDF", css:"pdf", click: handlerMButtons},
     				{i18nCaption:"PPT", css:"ppt", click: handlerMButtons},
     				{i18nCaption:"TXT", css:"txt", click: handlerMButtons},
     				{i18nCaption:"XLS", css:"xls", click: handlerMButtons},
     				{i18nCaption:"ZIP", css:"zip", click: handlerMButtons}
     			]},
     			{i18nCaption:"filtrar", css:"filtrar", click: handlerMButtons, right: true},
     			{i18nCaption:"imprimir", css:"imprimir", click: handlerMButtons, right: true}
  		]
  	});


  	function handlerBoton(){
  		alert ("Se ha pulsado el boton");
  	}
  	function handlerMButtons(event){
  		alert ("MButton:" + event.data.i18nCaption);
  	}
  }



  return ToolbarTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(54),
        __webpack_require__(55),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.message\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, ToolbarBodyView, ToolbarTestView, ComponentExampleCodeView){

  var ToolbarView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new ToolbarBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.toolbar.toolbarHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.toolbar.toolbarJsCodeTemplate
    }));
    $view.Test.show(new ToolbarTestView());
  }

  return ToolbarView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tooltip\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var TooltipBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.tooltip.tooltipBodyTemplate
  });

  return TooltipBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tooltip\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var TooltipTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.tooltip.tooltipTestTemplate,
      ui:{
        pageTitles: '[title]',
        btnCodeTooltip: '#codeTooltip',
        btnIdTooltip: '#idTooltip',
        btnHtmlTooltip: '#htmlTooltip',
        btnStyle: '#button',
        inputCode: '#code',
        inputId: '#identificador',
        inputHtml: '#htmlTooltip',
        htmlContentAccordionLayer: '#accordionExample1',
        htmlContentAccordion: '.rup_accordion',
        pageQtips: '.qtip'
      },
      events:{
        "click @ui.btnStyle": fncSetStyle
      },
      onAttach: fncOnAttach

  });

  function fncOnAttach(){
    this.ui.pageTitles.rup_tooltip({"applyToPortal": true});

    this.ui.btnCodeTooltip.rup_tooltip({
  		content: {
  			text: "Esto es un ejemplo de tooltip sobre imagen"
  		},
  		position: {
  			my: 'top center',
  			at: 'bottom center',
  			target: this.ui.inputCode
  		},
  		show: {
  			event: 'click'
  		}
  	});

    this.ui.btnIdTooltip.rup_tooltip({
  		content: {
  			text: 'Esto es un ejemplo de tooltip modal sobre imagen',
  			title: {
  				text: 'Tooltip modal'
  			}
  		},
  		position: {
  			my: 'bottom center',
  			at: 'top center',
  			target: this.ui.inputId
  		},
  		show: {
  			event: 'click',
  			modal: true
  		},
  		hide: {
  			event: 'click'
  		}
  	});

    this.ui.btnHtmlTooltip.rup_tooltip({
  		content: {
  			text: this.ui.htmlContentAccordionLayer
  		},
  		style:{
  			width:900
  		},
  		position: {
  			my: 'bottom center',
  			at: 'top center',
  			target: this.ui.inputHtml
  		},
  		show: {
  			event: 'click',
  		},
  		hide: {
  			event: 'click'
  		}
  	});

    this.ui.htmlContentAccordion.rup_accordion({
  		animated: "bounceslide",
  		active: false,
  		autoHeight: false,
  		collapsible: true
  	});
  }

  function fncSetStyle(){
    var $view = this;

    $view.ui.btnStyle.click(function() {
      $view.ui.pageQtips.rup_tooltip('option', 'style.widget', true);
    });
  }




  return TooltipTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(57),
        __webpack_require__(58),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tooltip\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, TooltipBodyView, TooltipTestView, ComponentExampleCodeView){

  var TooltipView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new TooltipBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.tooltip.tooltipHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.tooltip.tooltipJsCodeTemplate
    }));
    $view.Test.show(new TooltipTestView());
  }


  return TooltipView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tree\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var TreeDragDropBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.tree.dragDrop.treeDragDropBodyTemplate
  });

  return TreeDragDropBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),

        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tree\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function (Marionette, App) {

    var TreeDragDropCodeView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.components.tree.dragDrop.treeDragDropCodeTemplate
    });

    return TreeDragDropCodeView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tree\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()), !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function (Marionette, App) {

    var TreeDragDropTestView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.components.tree.dragDrop.treeDragDropTestTemplate,
        ui: {
            pageTitles: '[title]',
            sortTree: "#tasksReorderTree",
            btnSortTree: "#btnReorderTreeUniqueControl",
            exchangeTree: '#tasksTree',
            btnExchangeTree: "#btnExchangeTreeUniqueControl",
            workersTree: "#workersTree",
            btnWorkersTree: "#btnPromotionsDismissalsUniqueControl",
            codeDialogSelector: "#treeCodeDialog",
            accordionCode: "#AccordionCode"
        },
        events: {

        },
        tasksTreeTypes: {},
        workersTreeTypes: {},
        workersTreeJson: [],
        tasksTreeJson: [],
        workersDepartmentTreeJson: [],
        initialize: fncInitialize,
        onAttach: fncOnAttach,
        codeCleanLoad: codeCleanLoad
    });

    function codeCleanLoad(id, $view) {
        $('#AccordionCode').append($('#treeCodeDialog').children());
        $('#treeCodeDialog').append($("#" + id));
    }

    function fncInitialize() {
        /* Tipos para la gestión de tareas */
        this.tasksTreeTypes = {
            "valid_children": ["tasks"],
            "types": {
                "tasks": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/PendingWorks.png"
                    },
                    "valid_children": ["forms", "invoice", "repair", "suppliers", "Transportation"]
                },
                "forms": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/forms.png"
                    },
                    "valid_children": ["job"]
                },
                "invoice": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/invoice.png"
                    },
                    "valid_children": ["job"]
                },
                "repair": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/repair.png"
                    },
                    "valid_children": ["job"]
                },
                "job": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/job.png"
                    },
                    "valid_children": ["none"]
                },
                "suppliers": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/suppliers.png"
                    },
                    "valid_children": ["job"]
                },
                "Transportation": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/Transportation.png"
                    },
                    "valid_children": ["job"]
                }
            }
        };

        /* Tipos para la gestion de trabajadores */
        this.workersTreeTypes = {
            "valid_children": ["workers"],
            "types": {
                "enterprise": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/enterprise.png"
                    },
                    "valid_children": ["job"]
                },
                "worker": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/worker.png"
                    },
                    "valid_children": ["job"]
                },
                "workers": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/workers.png"
                    },
                    "valid_children": ["worker", "enterprise"]
                },
                "job": {
                    "icon": {
                        "image": $.rup.STATICS + "/demoResponsive/images/arbol/job.png"
                    },
                    "valid_children": ["none"]
                }
            }
        };

        /* Codigo JSon del árbol de tareas */
        this.tasksTreeJson = [
            {
                "data": {
                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "raiz")
                },
                "attr": {
                    "id": "raizTasks",
                    "rel": "tasks"
                },
                "state": "open",
                "children": [
                    {
                        "data": {
                            "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "informes")
                        },
                        "attr": {
                            "id": "informes",
                            "rel": "forms"
                        },
                        "state": "open",
                        "children": [
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "informe_trimestral")
                                },
                                "attr": {
                                    "id": "informe_trimestral",
                                    "rel": "job"
                                }
               },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "informe_gastos_generales")
                                },
                                "attr": {
                                    "id": "informe_trimestral",
                                    "rel": "job"
                                }
               },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "informe_desperfectos")
                                },
                                "attr": {
                                    "id": "informe_trimestral",
                                    "rel": "job"
                                }
               },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "informe_deudas")
                                },
                                "attr": {
                                    "id": "informe_trimestral",
                                    "rel": "job"
                                }
               },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "informe_calidad")
                                },
                                "attr": {
                                    "id": "informe_trimestral",
                                    "rel": "job"
                                }
               },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "informe_perdidas")
                                },
                                "attr": {
                                    "id": "informe_trimestral",
                                    "rel": "job"
                                }
               }
          ]
                    },
                    {
                        "data": {
                            "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "transportes")
                        },
                        "attr": {
                            "id": "transportes",
                            "rel": "Transportation"
                        },
                        "state": "open",
                        "children": [
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "pedido_lujua")
                                },
                                "attr": {
                                    "id": "pedido_lujua",
                                    "rel": "job"
                                }
               },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "pedido_cemento")
                                },
                                "attr": {
                                    "id": "pedido_cemento",
                                    "rel": "job"
                                }
               },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "pedido_martillo")
                                },
                                "attr": {
                                    "id": "pedido_martillo",
                                    "rel": "job"
                                }
               }
          ]
                    },
                    {
                        "data": {
                            "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "reparaciones")
                        },
                        "attr": {
                            "id": "reparaciones",
                            "rel": "repair"
                        },
                        "state": "open",
                        "children": [
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "reparacion_fachada")
                                },
                                "attr": {
                                    "id": "reparacion_fachada",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "reparacion_indundacion")
                                },
                                "attr": {
                                    "id": "reparacion_indundacion",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "reparacion_suelo")
                                },
                                "attr": {
                                    "id": "reparacion_suelo",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "reparacion_ratas")
                                },
                                "attr": {
                                    "id": "reparacion_ratas",
                                    "rel": "job"
                                }
           }
          ]
                    },
                    {
                        "data": {
                            "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "suministros")
                        },
                        "attr": {
                            "id": "suministros",
                            "rel": "suppliers"
                        },
                        "state": "open",
                        "children": [
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "mp_ladrillos")
                                },
                                "attr": {
                                    "id": "mp_ladrillos",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "mp_clavos")
                                },
                                "attr": {
                                    "id": "mp_clavos",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "mp_cemento")
                                },
                                "attr": {
                                    "id": "mp_cemento",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "mp_recambios")
                                },
                                "attr": {
                                    "id": "mp_recambios",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "mp_jabon")
                                },
                                "attr": {
                                    "id": "mp_jabon",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "mp_botas")
                                },
                                "attr": {
                                    "id": "mp_botas",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "mp_cascos")
                                },
                                "attr": {
                                    "id": "mp_cascos",
                                    "rel": "job"
                                }
           }
          ]
                    },
                    {
                        "data": {
                            "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "facturas")
                        },
                        "attr": {
                            "id": "facturas",
                            "rel": "invoice"
                        },
                        "state": "open",
                        "children": [
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "factura_VH")
                                },
                                "attr": {
                                    "id": "factura_VH",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "factura_Lindo")
                                },
                                "attr": {
                                    "id": "factura_Lindo",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "factura_devolucion")
                                },
                                "attr": {
                                    "id": "factura_devolucion",
                                    "rel": "job"
                                }
           },
                            {
                                "data": {
                                    "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "factura_OM")
                                },
                                "attr": {
                                    "id": "factura_OM",
                                    "rel": "job"
                                }
           }
          ]
                    }
        ]
            },
    ];

        /* Codigo JSon del árbol de trabajadores */
        this.workersTreeJson = [{
            "data": {
                "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "workers")
            },
            "attr": {
                "id": "raizWorkers",
                "rel": "workers"
            },
            "state": "open",
            "children": [{
                "data": {
                    "title": "Abanca Rodrigez Silvia"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Almonzon Mendia Juan"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Alonso Ruiz Laura"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Gil Sandia Marta"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Jiménez Arriurtua Francisco"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Mantenimientos Jet"
                },
                "attr": {
                    "rel": "enterprise"
                }
            }, {
                "data": {
                    "title": "Matias S.L."
                },
                "attr": {
                    "rel": "enterprise"
                }
            }, {
                "data": {
                    "title": "Montajes Loiu"
                },
                "attr": {
                    "rel": "enterprise"
                }
            }, {
                "data": {
                    "title": "Mortaro Filon Sara"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Ortiz Dulon Jose"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Padilla Alcantara Sergio"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Puertas y molduras Sanz"
                },
                "attr": {
                    "rel": "enterprise"
                }
            }, {
                "data": {
                    "title": "Randal Sweder Moly"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Ruiz de Santiesteban Pedro"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Sánchez Rodin Pablo"
                },
                "attr": {
                    "rel": "worker"
                }
            }]
        }, ];

        /* Codigo JSon del árbol de trabajadores */
        this.workersDepartmentTreeJson = [{
            "data": {
                "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "depAdmin")
            },
            "attr": {
                "id": "department",
                "rel": "workers"
            },
            "state": "open",
            "children": [{
                "data": {
                    "title": "Abanca Rodrigez Silvia"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Alonso Ruiz Laura"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Gil Sandia Marta"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Jiménez Arriurtua Francisco"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Padilla Alcantara Sergio"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Sánchez Rodin Pablo"
                },
                "attr": {
                    "rel": "worker"
                }
            }]
        }, {
            "data": {
                "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "depClientes")
            },
            "attr": {
                "id": "department",
                "rel": "workers"
            },
            "state": "close",
            "children": [{
                "data": {
                    "title": "Alzola Urierate Leticia"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Aranguren Loinaz Jose"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Bermejo Solo Ana"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Garzon Alonso Luis"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Jerez Templado Bisball"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Noiz Sapuerta Gordi"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Ortiz Dulon Jose"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Prudencio Fratan Armand"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Ruiz de Santiesteban Pedro"
                },
                "attr": {
                    "rel": "worker"
                }
            }]
        }, {
            "data": {
                "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "depReparaciones")
            },
            "attr": {
                "id": "department",
                "rel": "workers"
            },
            "state": "close",
            "children": [{
                "data": {
                    "title": "Anemo Muñoz Jon"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Almonzon Mendia Juan"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Bornaz Satrustegui Armando"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Muleto Delito Afelio"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Gaztedi Jobar Maria"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Zarate Oligarco Ramon"
                },
                "attr": {
                    "rel": "worker"
                }
            }]
        }, {
            "data": {
                "title": $.rup.i18nParse($.rup.i18n.app.tasksTree, "depSuministros")
            },
            "attr": {
                "id": "department",
                "rel": "workers"
            },
            "state": "close",
            "children": [{
                "data": {
                    "title": "Eredia Puyol Maider"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Montero Rucio Luis"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Perez Mendia Jone"
                },
                "attr": {
                    "rel": "worker"
                }
            }, {
                "data": {
                    "title": "Puertas y molduras Sanz"
                },
                "attr": {
                    "rel": "worker"
                }
            }]
        }];

    }

    function fncOnAttach() {

        var $view = this;

        $view.ui.pageTitles.rup_tree({
            "applyToPortal": true
        });

        /* Dialogo de visualización de código */
        $('#treeCodeDialog').rup_dialog({
            type: $.rup.dialog.DIV,
            autoOpen: false,
            modal: true,
            resizable: true,
            width: "auto",
            title: $.rup.i18nParse($.rup.i18n.app.treeCodeDialog, "title"),
            buttons: [{
                text: $.rup.i18nParse($.rup.i18n.base, "rup_global.close"),
                click: function () {
                    $(this).dialog("close");
                }
  		}]
        });









        /* Ejemplo de arbol de tareas pendientes con reordenacion */
        $view.ui.sortTree.rup_tree({
            "json_data": {
                "data": this.tasksTreeJson
            },
            "types": this.tasksTreeTypes,
            "crrm": {
                "move": {
                    "check_move": function (moveObject) {
                        var moveObjectParent = this._get_parent(moveObject.o);
                        if (!moveObjectParent) return false;
                        moveObjectParent = moveObjectParent == -1 ? this.get_container() : moveObjectParent;
                        if (moveObjectParent === moveObject.np) return true;
                        if (moveObjectParent[0] && moveObject.np[0] && moveObjectParent[0] === moveObject.np[0]) return true;
                        return false;
                    }
                }
            },
            "dnd": {
                "enable": true,
                "drop_target": false,
                "drag_target": false
            }
        });

        $view.ui.btnSortTree.on("click", function () {
            codeCleanLoad("reorderAccordionCode", $view);
            $('#treeCodeDialog').rup_dialog("open");
            $("#reorderAccordionCode").rup_accordion("activate", 0);
        });

        /* Ejemplo de arboles con distribucion de tareas (D&D) */
        $view.ui.exchangeTree.rup_tree({
            "json_data": {
                "data": $view.tasksTreeJson
            },
            "crrm": {
                "move": {
                    "check_move": function (moveObject) {
                        return false;
                    }
                }
            },
            "types": $view.tasksTreeTypes,
            "dnd": {
                "enable": true,
                "drop_target": false,
                "drag_target": false
            }
        });

        $view.ui.workersTree.rup_tree({
            "json_data": {
                "data": $view.workersTreeJson
            },
            "crrm": {
                "move": {
                    "check_move": function (moveObject) {
                        var moveObjectParent = moveObject.op;
                        if (moveObject.op.parents($view.ui.exchangeTree).length > 0) {
                            return true;
                        } else {
                            return false;
                        }
                    }
                }
            },
            "types": $view.workersTreeTypes,
            "dnd": {
                "enable": true,
                "drop_target": false,
                "drag_target": false
            }
        });

        $view.ui.btnExchangeTree.on("click", function () {
            codeCleanLoad("exchangeAccordionCode", $view);
            $('#treeCodeDialog').rup_dialog("open");
            $("#exchangeAccordionCode").rup_accordion("activate", 0);
        });

        /* Gestion del panel visual */
        var treeNodesExchangePanelPosition = $("#treeNodesExchangePanel").position();
        $(".treeNodesExchangePanel_center_img").css("top", treeNodesExchangePanelPosition.top + (($("#treeNodesExchangePanel").height()) / 2) - (($(".treeNodesExchangePanel_center_img").height()) / 2))
            .css("left", treeNodesExchangePanelPosition.left + (($("#treeNodesExchangePanel").width()) / 2) - (($(".treeNodesExchangePanel_center_img").width()) / 2));
        $(".treeNodesExchangePanel_center").css("visibility", "visible");

        /*    $.rup_messages("msgError", {
                title: $.rup.i18nParse($.rup.i18n.app.treeNodesExchangePanel_center, "errorOp"),
                message: $.rup.i18nParse($.rup.i18n.app.treeNodesExchangePanel_center, "funtError")
            });*/

        /* Árbol y código asociado a la gestión de ascensos y despidos */
        $("#promotionsDismissalsTree").rup_tree({
            "json_data": {
                "data": $view.workersDepartmentTreeJson
            },
            "types": $view.workersTreeTypes,
            "crrm": {
                "move": {
                    "check_move": function (moveObject) {
                        var moveObjectParent = this._get_parent(moveObject.o);
                        if (!moveObjectParent) return false;
                        moveObjectParent = moveObjectParent == -1 ? this.get_container() : moveObjectParent;
                        if (moveObjectParent === moveObject.np) return true;
                        if (moveObjectParent[0] && moveObject.np[0] && moveObjectParent[0] === moveObject.np[0]) return true;
                        return false;
                    }
                }
            },
            "sort": {
                "enable": true
            },
            "dnd": {
                "drop_check": function (data) {
                    if ((!data.r.hasClass("promotionsDismissalsActionPanel_list")) || (data.o.attr("rel") !== "worker")) {
                        return false;
                    }
                    return {
                        after: false,
                        before: false,
                        inside: true
                    };
                },
                "drop_finish": function (data) {
                    data.r.append(data.o.clone());
                },
                "enable": true,
                "drag_target": false,
                "drop_target": ".promotionsDismissalsActionPanel_list"
            }
        });

        $view.ui.btnWorkersTree.on("click", function () {
            codeCleanLoad("promotionsDismissalsAccordionCode", $view);
            $('#treeCodeDialog').rup_dialog("open");
            $("#promotionsDismissalsAccordionCode").rup_accordion("activate", 0);
        });

        /* Accordions de visualizacion de codigo */
        $(".rup_accordion").rup_accordion({
            autoHeight: false
        });




    }





    return TreeDragDropTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(60),
        __webpack_require__(3),
        __webpack_require__(61),
        __webpack_require__(62),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tree\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function (Marionette, App, TreeDragDropBodyView, ComponentExampleCodeView, TreeDragDropCodeView, TreeDragDropTestView) {

    var TreeView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.components.tree.dragDrop.treeDragDropLayoutTemplate,
        regions: {
            Main: "#componentMainBody",
            //Example: "#exampleCode",
            Code: "#componentCode",
            Test: "#componentTest"
        },
        onRender: fncOnRender
    });

    function fncOnRender() {
        var $view = this;

        $view.Main.show(new TreeDragDropBodyView());
        /*  $view.Example.show(new ComponentExampleCodeView({
              templateHtml: App.Templates.demo.app.components.tree.dragDrop.treeDragDropHtmlCodeTemplate,
              templateJs: App.Templates.demo.app.components.tree.dragDrop.treeDragDropJsCodeTemplate
          }));*/
        $view.Code.show(new TreeDragDropCodeView());
        $view.Test.show(new TreeDragDropTestView());

    }


    return TreeView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tree\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var TreeBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.tree.examples.treeBodyTemplate
  });

  return TreeBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tree\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()), !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function (Marionette, App) {

    var TreeTestView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.components.tree.examples.treeTestTemplate,
        ui: {
            treeCodeDialog: "#treeCodeDialog"
        },
        onAttach: fncOnAttach

    });

    function fncOnAttach() {
        var $view = this;

        //Copia fuente del código del árbol utilizado
        $("#defaultDemoCodeHtml code").append("&lt;div id=\"defaultDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#defaultDemoCodeHtml code").append($($("#model_example_1_code").html()).clone());

        $("#specificStyleDemoCodeHtml code").append("&lt;div id=\"specificStyleDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#specificStyleDemoCodeHtml code").append($($("#model_example_1_code").html()).clone());

        $("#changeViewDemoCodeHtml code").append("&lt;div id=\"changeViewDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#changeViewDemoCodeHtml code").append($($("#model_example_1_code").html()).clone());

        $("#jqueryuiStylesDemoCodeHtml code").append("&lt;div id=\"jqueryuiStylesDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#jqueryuiStylesDemoCodeHtml code").append($($("#model_example_1_code").html()).clone());

        $("#selectDemoCodeHtml code").append("&lt;div id=\"selectDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#selectDemoCodeHtml code").append($($("#model_example_1_code").html()).clone());

        $("#hotkeysDemoCodeHtml code").append("&lt;div id=\"hotkeysDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#hotkeysDemoCodeHtml code").append($($("#model_example_1_code").html()).clone());

        $("#sortDemoCodeHtml code").append("&lt;div id=\"sortDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#sortDemoCodeHtml code").append($($("#model_example_1_code").html()).clone());

        $("#checkboxDemoCodeHtml code").append("&lt;div id=\"checkboxDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#checkboxDemoCodeHtml code").append($($("#model_example_1_code").html()).clone());

        $("#contextmenuDemoCodeHtml code").append("&lt;div id=\"contextmenuDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#contextmenuDemoCodeHtml code").append($($("#model_example_1_code").html()).clone());

        $("#uniqueDemoCodeHtml code").append("&lt;div id=\"uniqueDemo\" class=\"rup_tree\"&gt;<br/>");
        $("#uniqueDemoCodeHtml code").append($($("#model_example_2_code").html()).clone());

        function codeCleanLoad(id) {
            $view.ui.treeCodeDialog.find("#htmlCode").children().remove();
            $view.ui.treeCodeDialog.find("#javaScriptCode").children().remove();
            $view.ui.treeCodeDialog.find("#htmlCode").append($("#" + id + "JS").clone());
            $view.ui.treeCodeDialog.find("#javaScriptCode").append($("#" + id + "Html").clone());
        }

        /* Dialogo de visualización de código */
        $view.ui.treeCodeDialog.rup_dialog({
            type: $.rup.dialog.DIV,
            autoOpen: false,
            modal: true,
            resizable: true,
            width: "auto",
            title: $.rup.i18nParse($.rup.i18n.app["treeCodeDialog"], "title"),
            buttons: [{
                text: $.rup.i18nParse($.rup.i18n.base, "rup_global.close"),
                click: function () {
                    $(this).dialog("close");
                }
		}]
        });


        /* Ejemplo de un árbol por defecto */
        //Copia del código del árbol utilizado
        $("#defaultDemo").html($($("#model_example_1").html()).clone());

        $("#defaultDemo").rup_tree();

        $("#btnDefaultDemo").bind("click", function () {
            codeCleanLoad("defaultDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });


        /* Ejemplo de un árbol con estilo especificado por la aplicación */
        //Copia del código del árbol utilizado
        $("#specificStyleDemo").html($($("#model_example_1").html()).clone());

        $("#specificStyleDemo").rup_tree({
            "themes": {
                "theme": "default",
                "url": STATICS + "/demoResponsive/css/tree/themes/default/style.css"
            }
        });

        $("#btnSpecificStyleDemo").bind("click", function () {
            codeCleanLoad("specificStyleDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });


        /* Ejemplo de un árbol que cambie su aspecto visual */
        //Copia del código del árbol utilizado
        $("#changeViewDemo").prepend($($("#model_example_1").html()).clone());

        $("#changeViewDemo").rup_tree({
            "themes": {
                "dots": false,
                "icons": false
            }
        });

        $("#btnChangeViewDemo").bind("click", function () {
            codeCleanLoad("changeViewDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });

        $("#toggle_dots").click(function () {
            $("#changeViewDemo").rup_tree("toggle_dots");
        });

        $("#toggle_icons").click(function () {
            $("#changeViewDemo").rup_tree("toggle_icons");
        });

        $("#changeTheme").click(function () {
            var type = $("#changeViewDemo").rup_tree("get_theme");
            if (type === "rup-default") {
                $("#changeViewDemo").rup_tree("set_theme", "apple", STATICS + "/x21a/styles/tree/themes/apple/style.css");
            } else if (type === "apple") {
                $("#changeViewDemo").rup_tree("set_theme", "default", STATICS + "/x21a/styles/tree/themes/default/style.css");
            } else if (type === "default") {
                $("#changeViewDemo").rup_tree("set_theme", "classic", STATICS + "/x21a/styles/tree/themes/classic/style.css");
            } else {
                $("#changeViewDemo").rup_tree("set_theme", "rup-default", false);
            }
        });

        /* Ejemplo de árbol con estilos de jQueryUI */
        //Copia del código del árbol utilizado
        $("#jqueryuiStylesDemo").html($($("#model_example_1").html()).clone());

        $("#jqueryuiStylesDemo").rup_tree({
            "core": {
                "initially_open": ["node121", "node112", "node113"],
                "html_titles": true
            },
            "jQueryUIStyles": {
                "enable": true
            }
        });

        $("#btnJqueryuiStylesDemo").bind("click", function () {
            codeCleanLoad("jqueryuiStylesDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });

        $("#tree_example").rup_tree({
            "json_data": {

            }

        });


        /* Ejemplo de un árbol con cambios en el modo de selección */
        //Copia del código del árbol utilizado
        $("#selectDemo").prepend($($("#model_example_1").html()).clone());

        $("#selectDemo").rup_tree({
            "select": {
                "select_limit": "2",
                "initially_select": ["node122", "node1213"]
            }
            //		,"select_node_event" : function(){var nodes = "";$.each($("#selectDemo").rup_tree("get_selected"), function(key, value){nodes = nodes + $(value).attr("id")+ " ";}); alert("Evento select<br>Nodos seleccionados: "+ nodes);},
            //		"deselect_node_event" : function(){var nodes = "";$.each($("#selectDemo").rup_tree("get_selected"), function(key, value){nodes = nodes + $(value).attr("id")+ " ";}); alert("Evento deselect<br>Nodos seleccionados: "+ nodes);}
        });

        $("#btnSelectDemo").bind("click", function () {
            codeCleanLoad("selectDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });

        $("#saveSelection").click(function () {
            $("#selectDemo").rup_tree("save_selected");
        });

        $("#loadSelection").click(function () {
            $("#selectDemo").rup_tree("deselect_all");
            $("#selectDemo").rup_tree("reselect");
        });

        $("#deselectAll").click(function () {
            $("#selectDemo").rup_tree("deselect_all");
        });


        /* Ejemplo del manejo de un árbol con el teclado (por defecto activo) */
        //Copia del código del árbol utilizado
        $("#hotkeysDemo").html($($("#model_example_1").html()).clone());

        $("#hotkeysDemo").rup_tree({
            "core": {
                "initially_open": ["node121"]
            }
        });

        $("#enableHotkeys").click(function () {
            $("#hotkeysDemo").rup_tree("enable_hotkeys");
        });

        $("#disableHotkeys").click(function () {
            $("#hotkeysDemo").rup_tree("disable_hotkeys");
        });

        $("#btnHotkeysDemo").bind("click", function () {
            codeCleanLoad("hotkeysDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });

        /* Ejemplo de ordenacion de nodos de un árbol */
        //Copia del código del árbol utilizado
        $("#sortDemo").html($($("#model_example_1").html()).clone());

        $("#sortDemo").rup_tree({
            "core": {
                "initially_open": ["node121", "node112"]
            },
            "sort": {
                "enable": true
            }
        });

        $("#renameButton").click(function () {
            if ($("#sortDemo").rup_tree("get_selected").size() > 0) {
                $("#sortDemo").rup_tree("rename");
            }
        });

        $("#btnSortDemo").bind("click", function () {
            codeCleanLoad("sortDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });

        /* Ejemplo de árbol con checkbox */
        //Copia del código del árbol utilizado
        $("#checkboxDemo").html($($("#model_example_1").html()).clone());

        $("#checkboxDemo").rup_tree({
            "core": {
                "initially_open": ["node121", "node112", "node113"]
            },
            "checkbox": {
                "enable": true
            }
        });


        var checkboxState = true;

        $("#checkboxShowHide").click(function () {
            if (checkboxState) {
                checkboxState = false;
                $("#checkboxDemo").rup_tree("hide_checkboxes");
            } else {
                checkboxState = true;
                $("#checkboxDemo").rup_tree("show_checkboxes");
            }
        });

        $("#checkboxCheckAll").click(function () {
            $("#checkboxDemo").rup_tree("check_all");
        });

        $("#checkboxUncheckAll").click(function () {
            $("#checkboxDemo").rup_tree("uncheck_all");
        });

        $("#btnCheckboxDemo").bind("click", function () {
            codeCleanLoad("checkboxDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });

        /* Ejemplo de árbol con contextmenu */
        //Copia del código del árbol utilizado
        $("#contextmenuDemo").html($($("#model_example_1").html()).clone());

        $("#contextmenuDemo").rup_tree({
            "core": {
                "initially_open": ["node121", "node112", "node113"]
            },
            "contextmenu": {
                "enable": true,
                "defaultOptions": {
                    //				"create" : false,
                    //				"remove" : false,
                    //				"rename" : false,
                    //				//"ccp" : false
                    "ccp": {
                        //					"cut" : false,
                        //					"paste" : false,
                        "copy": false
                    }
                },
                "items": {
                    // Some key
                    "exampleItem": {
                        // The item label
                        "label": $.rup.i18nParse($.rup.i18n.app["contextmenuDemo"], "exampleEntry"),
                        // The function to execute upon a click
                        "action": function (obj) {
                            $("#contextmenuDemo").rup_tree("rename", obj);
                        },
                        // All below are optional
                        "_disabled": false, // clicking the item won't do a thing
                        "_class": "class", // class is applied to the item LI node
                        "separator_before": false, // Insert a separator before the item
                        "separator_after": false, // Insert a separator after the item
                        // false or string - if does not contain `/` - used as classname
                        "icon": false //,
                            //					"submenu"           : {
                            //					/* Collection of objects (the same structure) */
                            //						}
                    },
                    "rename": {
                        // The item label
                        "label": $.rup.i18nParse($.rup.i18n.app["contextmenuDemo"], "udaRename"),
                        // The function to execute upon a click
                        "action": function (obj) {
                            $("#contextmenuDemo").rup_tree("rename", obj);
                        },
                        // All below are optional
                        "_disabled": false, // clicking the item won't do a thing
                        "_class": "class", // class is applied to the item LI node
                        "separator_before": false, // Insert a separator before the item
                        "separator_after": false, // Insert a separator after the item
                        // false or string - if does not contain `/` - used as classname
                        "icon": false
                    }
                }
            },
            "sort": {
                "enable": true
            }
        });

        $("#btnContextmenuDemo").bind("click", function () {
            codeCleanLoad("contextmenuDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });

        /* Ejemplo de nodos, en el mismo subgrupo, que tengan diferente nombre (no puede haber dos iguales) */
        //Copia del código del árbol utilizado
        $("#uniqueDemo").html($($("#model_example_2").html()).clone());

        $("#uniqueDemo").rup_tree({
            "core": {
                "initially_open": ["nodeC", "nodeAC"]
            },
            "contextmenu": {
                "enable": true
            },
            "unique": {
                "enable": true,
                "error_callback": function (n, p, f) {
                    $.rup_messages("msgError", {
                        title: $.rup.i18nParse($.rup.i18n.app["uniqueDemo"], "duplicateKey"),
                        message: $.rup.i18nParse($.rup.i18n.app["uniqueDemo"], "duplicateNodes") + "\"" + n + "\"" + $.rup.i18nParse($.rup.i18n.app["uniqueDemo"], "inFunction") + "\"" + f + "\"!"
                    });
                }
            }
        });

        $("#uniqueRenameButton").click(function () {
            if ($("#uniqueDemo").rup_tree("get_selected").size() > 0) {
                $("#uniqueDemo").rup_tree("rename");
            }
        });

        $("#uniqueNewButton").click(function () {
            if ($("#uniqueDemo").rup_tree("get_selected").size() > 0) {
                $("#uniqueDemo").rup_tree("create");
            }
        });

        $("#btnUniqueDemo").bind("click", function () {
            codeCleanLoad("uniqueDemoCode");
            $view.ui.treeCodeDialog.rup_dialog("open");
        });

        /* Ejemplo de carga de datos mediante json */



        $("#jsonTreeDemo").rup_tree({
            "core": {
                "initially_open": ["Padre 1"]
            },
            "json_data": {
                "data": [{
                    "data": "Padre 1",
                    "children": [
                        {
                            "data": "Padre 1.1",
                            "children": [{
                                    "data": "Hoja 1.1.1"
            	  },
                                {
                                    "data": "Padre 1.1.2",
                                    "children": ["Hoja 1.1.2.1", "Hoja 1.1.2.2"]
            	  }]
			},
                        {
                            "data": "Hoja 1.2"
			}]
		}]
            }
        });

        /* Ejemplo de carga de datos mediante xml */



        $("#xmlTreeDemo").rup_tree({
            "core": {
                "initially_open": ["padre_1"]
            },
            "xml_data": {
                "data": "" +
                    "<root>" +
                    "<item id='padre_1'>" +
                    "<content><name><![CDATA[Padre 1]]></name></content>" +
                    "<item id='padre_1_1' parent_id='padre_1'>" +
                    "<content><name><![CDATA[Padre 1.1]]></name></content>" +
                    "<item id='hoja_1_1_1' parent_id='padre_1_1'>" +
                    "<content><name><![CDATA[Hoja 1.1.1]]></name></content>" +
                    "</item>" +
                    "<item id='padre_1_1_2' parent_id='padre_1_1'>" +
                    "<content><name><![CDATA[Padre 1.1.2]]></name></content>" +
                    "<item id='hoja_1_1_2_1' parent_id='padre_1_1_2'>" +
                    "<content><name><![CDATA[Hoja 1.1.2.1]]></name></content>" +
                    "</item>" +
                    "<item id='hoja_1_1_2_2' parent_id='padre_1_1_2'>" +
                    "<content><name><![CDATA[Hoja 1.1.2.2]]></name></content>" +
                    "</item>" +
                    "</item>" +
                    "</item>" +
                    "<item id='hoja_1_2' parent_id='padre_1'>" +
                    "<content><name><![CDATA[Hoja 1.2]]></name></content>" +
                    "</item>" +
                    "</item>" +
                    "</root>"
            }
        });


        $("#ajaxTreeDemo").rup_tree({
            "json_data": {
                "ajax": {
                    "url": "ajaxTree"
                }
            }
        });
    }




    return TreeTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(64),
        __webpack_require__(65),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tree\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, TreeBodyView, TreeTestView, ComponentExampleCodeView){

  var TreeView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new TreeBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.tree.examples.treeHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.tree.examples.treeJsCodeTemplate
    }));
    $view.Test.show(new TreeTestView());
  }


  return TreeView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.upload\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var UploadBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.upload.uploadBodyTemplate
  });

  return UploadBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        // 'rup/rup.upload','rup/rup.button'], function(Marionette, App){
          __webpack_require__(104),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var UploadTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.upload.uploadTestTemplate,
      ui:{
        basicFileuploadContext: "#basicFileuploadContext"
      },
      onAttach: fncOnAttach

  });

  function fncOnAttach(){
    var $view = this;

    $('#basicFileupload').fileupload({
        dataType: 'json',
        uploadTemplateId:false,
        downloadTemplateId:false,
        add: function (e, data) {
            $view.ui. basicFileuploadContext.text("Subiendo archivos...");
            data.submit();
        },
        done: function (e, data) {
          $.each(data.result, function (index, file) {
            $view.ui. basicFileuploadContext.text(file.name);
          });
        }
    });

  }



  return UploadTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(67),
        __webpack_require__(68),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.upload\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, UploadBodyView, UploadTestView, ComponentExampleCodeView){

  var UploadView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new UploadBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.upload.uploadHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.upload.uploadJsCodeTemplate
    }));
    $view.Test.show(new UploadTestView());
  }


  return UploadView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.validate\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ValidateBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.validate.validateBodyTemplate
  });

  return ValidateBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($, jQuery) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.validate\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var ValidateTestView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.validate.validateTestTemplate,
      listaDias:[],
      configuracionBasicaValidate:{},
      onAttach: fncOnAttach,
      initialize: function(){
          this.listaDias = [
  			{i18nCaption: "lunes", value:"1"},
  			{i18nCaption: "martes", value:"2"},
  			{i18nCaption: "miercoles", value:"3"},
  			{i18nCaption: "jueves", value:"4"},
  			{i18nCaption: "viernes", value:"5"},
  			{i18nCaption: "sabado", value:"6"},
  			{i18nCaption: "domingo", value:"7"}
  		];


        this.configuracionBasicaValidate = {
    			feedback:$("#feedbackErroresValidaciones"),
    			liveCheckingErrors:$("#liveCheckingErrors").is(":checked"),
    			showFieldErrorAsDefault:$("#checkShowFieldErrorsTip").is(":checked"),
    			showErrorsInFeedback:$("#checkFeedbackError").is(":checked"),
    			showFieldErrorsInFeedback:$("#checkShowErrorsFeedback").is(":checked")
    		};
      }

  });

  function fncOnAttach(){



     	$("#autocomplete").rup_autocomplete({
  		source : "autocomplete/remote",
  		sourceParam : {label:"desc"+$.rup_utils.capitalizedLang(), value:"code"},
  		minLength: 4
  	});


  	$("#comboAbueloRemoto").rup_combo({
  		source : "comboEnlazadoSimple/remoteEnlazadoProvincia",
  		sourceParam : {label:"desc"+$.rup_utils.capitalizedLang(), value:"code", style:"css"},
  		blank: ""
  	});

  	$("#comboPadreRemoto").rup_combo({
  		parent: [ "comboAbueloRemoto"],
  		source : "comboEnlazadoSimple/remoteEnlazadoComarca",
  		sourceParam : {label:"desc"+$.rup_utils.capitalizedLang(), value:"code", style:"css"},
  		blank: ""
  	});

  	$("#comboHijoRemoto").rup_combo({
  		parent: [ "comboPadreRemoto" ],
  		source : "comboEnlazadoSimple/remoteEnlazadoLocalidad",
  		sourceParam : {label:"desc"+$.rup_utils.capitalizedLang(), value:"code", style:"css"},
  		blank: ""
  	});

  	$('#multicombo').rup_combo({
  		source : this.listaDias,
  		width: 400,
  		ordered:false,
  		loadFromSelect:true,
  		multiselect:true
  	});

  	$("#fecha").rup_date({
  		labelMaskId : "fecha-mask",
  		showButtonPanel : true,
  		showOtherMonths : true,
  		noWeekend : true
  		//, buttonImage : "/rup/basic-theme/images/exclamation.png"
  	});

  	$("#fechaHora").rup_date({
  		datetimepicker:true,
  		labelMaskId : "fecha-mask",
  		showButtonPanel : true,
  		showOtherMonths : true,
  		noWeekend : true,
  		showSecond: false,
  		dateFormat: "dd/mm/yyyy",
  		timeFormat: 'hh:mm'

  	});


  	/*
  	 * CONFIGURACION FORMULARIO DE VALIDACIONES
  	 */

  	$("#tabsValidacion").rup_tabs({
  		tabs : [{
  			i18nCaption : "validacionesCliente",
  			tabs:[{
  				i18nCaption : "reglasValidacion",
  				layer : "#divValidaciones"
  			}, {
  				i18nCaption : "validacionComponentes",
  				layer : "#divValidaciones2"
  			}]
  		}, {
  			i18nCaption : "validacionesServidor",
  			tabs:[{
  				i18nCaption : "formularioServidor",
  				layer : "#divValidaciones3"
  			}, {
  				i18nCaption : "formularioServidor2",
  				layer : "#divValidaciones4"
  			}]
  		}
  		]
  	});

  	$('#diaObligatorio').rup_combo({
  		//source : ["asp", "c", "c++", "coldfusion", "groovy", "haskell", "java", "javascript", "perl", "php", "python", "ruby", "scala"],
  		source : this.listaDias,
  		width: 100,
  		ordered:false
  	});

  	jQuery("#feedbackErroresValidaciones").rup_feedback({
  		type: "ok",
  		closeLink: true,
  		block:false
  	});

  	var properties={

  	};

  	function getConfiguracionBasicaValidate(){

  		var configuracion_basica_validate = {
  			feedback:$("#feedbackErroresValidaciones"),
  			liveCheckingErrors:$("#liveCheckingErrors").is(":checked"),
  			showFieldErrorAsDefault:$("#checkShowFieldErrorsTip").is(":checked"),
  			showErrorsInFeedback:$("#checkFeedbackError").is(":checked"),
  			showFieldErrorsInFeedback:$("#checkShowErrorsFeedback").is(":checked")
  		};

  		return configuracion_basica_validate;
  	}



  	function getConfiguracionValClienteReglas(){

  		var configuracion_form1 = {
        debug:true,
  			rules:{
  				"campoObligatorio1":{required:true},
  				"campoObligatorio2":{required:"#esObligatorio:checked"},
  				"campoObligatorio3":{required:function(){
  					return $("#diaObligatorio").val() > 5;
  				}},
  				"longitudMinima":{minlength:8},
  				"longitudMaxima":{maxlength:20},
  				"longitudIntervalo":{rangelength:[8,20]},
  				"valorMinimo":{min:10},
  				"valorMaximo":{max:30},
  				"valorIntervalo":{range:[10,30]},
  				"validacionEmail":{email:true},
  				"validacionUrl":{url:true},
  				"validacionFecha":{date:true},
  				"validacionFechaISO":{dateISO:true},
  				"numeroDecimal":{number:true},
  				"soloDigitos":{digits:true},
  				"tarjetaCredito":{creditcard:true},
  				"extension":{accept: "xls|csv"},
  				"clave_confirmar":{
  					equalTo: "#clave"
  				},
  				"dni":{dni:true},
  				"palabrasMaximo":{maxWords:6},
  				"palabrasMinimo":{minWords:2},
  				"palabrasIntervalo":{rangeWords:[2,6]},
  				"letrasYPuntuacion":{letterswithbasicpunc:true},
  				"alfanumerico":{alphanumeric:true},
  				"soloLetras":{lettersonly:true},
  				"sinEspacios":{nowhitespace:true},
  				"entero":{integer:true},
  				"patron":{pattern:'\\d'}
  			}
  		};

  		return $.extend(getConfiguracionBasicaValidate(), configuracion_form1);
  	}

  	function getConfiguracionValClienteCampos(){
  		var configuracion_form2 = {
  			rules:{
  				"autocomplete":{required:true},
  				"provincia":{required:true},
  				"comarca":{required:true},
  				"localidad":{required:true},
  				"gender":{required:true},
  				"agree":{required:true},
  				"notificacion[]":{required:true, minlength:2},
  				"multicombo":{required:true},
  				"lenguaje":{required:true},
  				"lenguajeMulti":{required:true, rangelength:[2,3]}
  			}
  		};

  		return $.extend(getConfiguracionBasicaValidate(), configuracion_form2);
  	}


  	function getConfiguracionValServidorEjemplo1(){
  		var configuracion_validate3 = {
  			feedback:$("#feedbackErroresValidaciones"),
  			validate:getConfiguracionBasicaValidate(),
  			url:$.rup.CTX_PATH+"/patrones/validacion/servidor",
  			success:function(a,b,c,d){
  				$("#feedbackErroresValidaciones").rup_feedback("set","El formulario se ha enviado correctamente mediante un submit AJAX", "ok");
  			}
  		};

  		return configuracion_validate3;
  	}


  	function getConfiguracionValServidorEjemplo2(){
  		var configuracion_validate4 = {
  			feedback:$("#feedbackErroresValidaciones"),
  			validate:getConfiguracionBasicaValidate(),
  			url:$.rup.CTX_PATH+"/patrones/validacion/servidor2",
  			success:function(json,b,c,d){
  				$("#feedbackErroresValidaciones").rup_feedback("set",$.rup_utils.printMsg(json), "ok");
  			}
  		};

  		return configuracion_validate4;
  	}

  	var ajaxForm = {
  		success:function(a,b,c,d){
  			$("#feedbackErroresValidaciones").rup_feedback("set","El formulario se ha enviado correctamente.", "ok");
  		}
  	};
  	$("#formValidaciones").rup_validate(getConfiguracionValClienteReglas());
  	$("#formValidaciones").ajaxForm(ajaxForm);
  	$("#formValidaciones2").rup_validate(getConfiguracionValClienteCampos());
  	$("#formValidaciones2").ajaxForm(ajaxForm);
  	$("#formServidor").rup_form(getConfiguracionValServidorEjemplo1());
  	$("#formServidor2").rup_form(getConfiguracionValServidorEjemplo2());
  	$("#botonConfiguracion").bind("click",function(){
  		$("#formValidaciones").rup_validate("destroy");
  		$("#formValidaciones2").rup_validate("destroy");
  		$("#formServidor").rup_validate("destroy");
  		$("#formServidor").rup_form("destroy");
  		$("#formServidor2").rup_validate("destroy");
  		$("#formServidor2").rup_form("destroy");
  		$("#formValidaciones").rup_validate(getConfiguracionValClienteReglas());
  		$("#formValidaciones").ajaxForm(ajaxForm);
  		$("#formValidaciones2").rup_validate(getConfiguracionValClienteCampos());
  		$("#formValidaciones2").ajaxForm(ajaxForm);
  		$("#formServidor").rup_form(getConfiguracionValServidorEjemplo1());
  		$("#formServidor2").rup_form(getConfiguracionValServidorEjemplo2());

  	});
  }
  return ValidateTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(2)))

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(70),
        __webpack_require__(71),
        __webpack_require__(3),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.validate\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, ValidateBodyView, ValidateTestView, ComponentExampleCodeView){

  var ValidateView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new ValidateBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.validate.validateHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.validate.validateJsCodeTemplate
    }));
    $view.Test.show(new ValidateTestView());
  }


  return ValidateView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.wizard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var WizardDynamicBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.wizard.dynamic.wizardDynamicBodyTemplate

  });

  return WizardDynamicBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.wizard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var WizardDynamicTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.wizard.dynamic.wizardDynamicTestTemplate,

    onAttach: fncOnAttach
  });

  function fncOnAttach(){
    var $view = this;






    $("#radio_summary_yes").click(function(){
      $("[name=accordion]").attr('disabled',false);
      $("[name=tabs2accordion]").attr('disabled',false);
    });
    $("#radio_summary_no").click(function(){
      $("[name=accordion]").attr('disabled',true);
      $("[name=tabs2accordion]").attr('disabled',true);
    });

    $("#makeWizard").click(function (){
      $("#wizardForm").rup_wizard({
        submitButton: 'saveForm',
        submitFnc : function(){
          //Función que se ejecuta antes de enviar el formulario
          //console.log("Enviando formulario...");
          alert("Enviando formulario...");
        },
        //parseJSON para convertir String en Boolean
        summary: $.parseJSON($('[name=summary]:checked').val()),
        summaryWithAccordion: $.parseJSON($('[name=accordion]:checked').val()),
        summaryTabs2Accordion: $.parseJSON($('[name=tabs2accordion]:checked').val()),
        summaryFnc_PRE: function(){
          //Función adicional previa al generar el resumen (con return false se corta generación)
          //console.log("Generando resumen...");
        },
        summaryFnc_INTER: function(){
          //Función adicional intermedia al generar el resumen (con return false se corta generación)
          //console.log("Comenzando gestión elementos...");
        },
        summaryFnc_POST: function(){
          //Función adicional posterior al generar el resumen (con return false se corta generación)
          //console.log("Resumen generado.");
        },
        stepFnc : {
          //Funciones de cada paso.
          0 : function (){
    //						console.log("Ir al paso "+$("#stepDesc0").children("a").text());
          },
          1 : function (){
    //						console.log("Ir al paso "+$("#stepDesc1").children("a").text());
          },
          2 : function (){
    //						if ($("#wizardForm").rup_wizard("getCurrentStep")==0 && $("#username").val()!=="uda"){
    //							alert("El campo 'Usuario' deber contener 'uda'");
    //							return false;
    //						}
    //						console.log("Ir al paso "+$("#stepDesc2").children("a").text());

              //Petición de contenido
              $.rup_ajax({
                url: "wizard_dinamico_content",
                success: function(data, textStatus, jqXHR) {

                  //Modificar contenido
                  $("#step"+$("#wizardForm").rup_wizard("getCurrentStep")).html(data);

                  //Funciones a ejecutar sobre el contenido
                    $("#tabs").rup_tabs({
                      tabs : [
                        {i18nCaption:"Empleado", layer:"#empleado"},
                        {i18nCaption:"Empresa", tabs:[
                            {i18nCaption:"Datos", layer:"#empresa_datos"},
                            {i18nCaption:"Delegaciones", tabs: [
                                 {i18nCaption:"Araba", layer:"#empresa_araba"},
                                 {i18nCaption:"Bizkaia", layer:"#empresa_bizkaia"},
                                 {i18nCaption:"Gipuzkoa", layer:"#empresa_gipuzkoa"}
                                  ]}
                          ]},
                        {i18nCaption:"Datos adicionales", layer:"#otros_datos"}
                      ]
                    });
                    $('#provincia').rup_combo({
                      source : "comboSimple/remote",
                      sourceParam : {label:"desc"+$.rup_utils.capitalizedLang(), value:"code", style:"css"},
                      selected: "Combo",
                      width: 300
                    });

                },
                error: function (XMLHttpRequest, textStatus, errorThrown){
                  alert('Error recuperando datos del paso');
                }
              });

          },
          3 : function (){
    //					console.log("Ir al paso "+$("#stepDesc3").children("a").text());
          }
        }
        , disabled : [1] //Intervalos con string separado con guión (ej. "1-2")
      });
      $("#wizard_options").remove();
    });

    //Pasos
    $.rup_date({
      from: "desde",
      to: "hasta",
      labelMaskId : "intervalo-mask",
      numberOfMonths: 3
    });

    $("#hora_entrada").rup_time({
      labelMaskId : "hora-mask",
      showSecond : true,
      timeFormat: 'hh:mm:ss',
      showButtonPanel: true
    });

    $("#hora_salida").rup_time({
      showSecond : true,
      timeFormat: 'hh:mm:ss',
      showButtonPanel: true
    });

    $('#dias').rup_combo({
      source : ["Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"],
      ordered: false,
      width: 320,
      multiselect: true,
      summaryInline : true
    });


    $('#cliente').rup_combo({
      sourceGroup : [
        {"Invierno" : ["Enero", "Febrero", "Marzo"]},
        {"Primavera" : ["Abril", "Mayo", "Junio"]},
        {"Verano" : [ "Julio", "Agosto", "Septiembre"]},
        {"Otoño" : [ "Octubre", "Noviembre", "Diciembre"]}
      ],
      width: 400,
      height: 300,
      multiselect: true
    });

    $("#meses").rup_accordion({
      animated: "bounceslide",
      active: false,
      autoHeight: false,
      collapsible: true
    });
  }


  return WizardDynamicTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(73),
        __webpack_require__(74),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, WizardDynamicBodyView, WizardDynamicTestView, ComponentExampleCodeView){

  var WizardDynamicView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new WizardDynamicBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.wizard.dynamic.wizardDynamicHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.wizard.dynamic.wizardDynamicJsCodeTemplate
    }));
    $view.Test.show(new WizardDynamicTestView());
  }


  return WizardDynamicView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.wizard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var WizardSimpleBodyView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.components.wizard.simple.wizardSimpleBodyTemplate

  });

  return WizardSimpleBodyView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.wizard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var WizardSimpleTestView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.components.wizard.simple.wizardSimpleTestTemplate,

    onAttach: fncOnAttach
  });

  function fncOnAttach(){
    var $view = this;


    

    // Feedback
	var $feedbackErroresValidaciones = jQuery("#feedbackErroresValidaciones").rup_feedback({
		closeLink: true,
		block:false
	});

	jQuery("#wizardForm").rup_validate({
		feedback: $feedbackErroresValidaciones,
		rules:{
			"username":{required:true},
			"password":{required:true}
		}
	});

	jQuery.validator.addMethod("validacionPropia", function(value, element) {
		return element.value()==="Uda";
	});


	$("#radio_summary_yes").click(function(){
		$("[name=accordion]").attr('disabled',false);
		$("[name=tabs2accordion]").attr('disabled',false);
	});
	$("#radio_summary_no").click(function(){
		$("[name=accordion]").attr('disabled',true);
		$("[name=tabs2accordion]").attr('disabled',true);
	});

	$("#makeWizard").click(function (){
		$("#wizardForm").rup_wizard({
			submitButton: 'saveForm',
			submitFnc : function(){
				//Función que se ejecuta antes de enviar el formulario
				//console.log("Enviando formulario...");
				alert("Enviando formulario...");
			},
			//parseJSON para convertir String en Boolean
			summary: $.parseJSON($('[name=summary]:checked').val()),
			summaryWithAccordion: $.parseJSON($('[name=accordion]:checked').val()),
			summaryTabs2Accordion: $.parseJSON($('[name=tabs2accordion]:checked').val()),
			summaryFnc_PRE: function(){
				//Función adicional previa al generar el resumen (con return false se corta generación)
				//console.log("Generando resumen...");
			},
			summaryFnc_INTER: function(){
				//Función adicional intermedia al generar el resumen (con return false se corta generación)
				//console.log("Comenzando gestión elementos...");
			},
			summaryFnc_POST: function(){
				//Función adicional posterior al generar el resumen (con return false se corta generación)
				//console.log("Resumen generado.");
			},
			stepFnc : {
				//Funciones de cada paso.
				0 : function (){
//						console.log("Ir al paso "+$("#stepDesc0").children("a").text());
				},
				1 : function (){
//						console.log("Ir al paso "+$("#stepDesc1").children("a").text());
				},
				2 : function (){
						var valid = true, validator = jQuery("#wizardForm").validate();

						valid = validator.element("#username") && valid;
						valid = validator.element("#password") && valid;

						return valid;





//						if ($("#wizardForm").rup_wizard("getCurrentStep")==0 && $("#username").val()!=="uda"){
//							alert("El campo 'Usuario' deber contener 'uda'");
//							return false;
//						}
//						console.log("Ir al paso "+$("#stepDesc2").children("a").text());
				},
				3 : function (){
//					console.log("Ir al paso "+$("#stepDesc3").children("a").text());
				}
			}
			, disabled : [1] //Intervalos con string separado con guión (ej. "1-2")
		});
		$("#wizard_options").remove();
	});

	//Pasos
	$("#tabs").rup_tabs({
		tabs : [
			{i18nCaption:"Empleado", layer:"#empleado"},
			{i18nCaption:"Empresa", tabs:[
			    {i18nCaption:"Datos", layer:"#empresa_datos"},
			    {i18nCaption:"Delegaciones", tabs: [
			         {i18nCaption:"Araba", layer:"#empresa_araba"},
			         {i18nCaption:"Bizkaia", layer:"#empresa_bizkaia"},
			         {i18nCaption:"Gipuzkoa", layer:"#empresa_gipuzkoa"}
                ]}
		    ]},
			{i18nCaption:"Datos adicionales", layer:"#otros_datos"}
		]
	});

	$('#provincia').rup_combo({
		source : "comboSimple/remote",
		sourceParam : {label:"desc"+$.rup_utils.capitalizedLang(), value:"code", style:"css"},
		selected: "Combo",
		width: 300
	});

	$.rup_date({
		from: "desde",
		to: "hasta",
		labelMaskId : "intervalo-mask",
		numberOfMonths: 3
	});

	$("#hora_entrada").rup_time({
		labelMaskId : "hora-mask",
		showSecond : true,
		timeFormat: 'hh:mm:ss',
		showButtonPanel: true
	});

	$("#hora_salida").rup_time({
		showSecond : true,
		timeFormat: 'hh:mm:ss',
		showButtonPanel: true
	});

	$('#dias').rup_combo({
		source : ["Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"],
		ordered: false,
		width: 320,
		multiselect: true,
		summaryInline : true
	});


	$('#cliente').rup_combo({
		sourceGroup : [
			{"Invierno" : ["Enero", "Febrero", "Marzo"]},
			{"Primavera" : ["Abril", "Mayo", "Junio"]},
			{"Verano" : [ "Julio", "Agosto", "Septiembre"]},
			{"Otoño" : [ "Octubre", "Noviembre", "Diciembre"]}
		],
		width: 400,
		height: 300,
		multiselect: true
	});

	$("#meses").rup_accordion({
		animated: "bounceslide",
		active: false,
		autoHeight: false,
		collapsible: true
	});
  }


  return WizardSimpleTestView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(2)))

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(76),
        __webpack_require__(77),
        __webpack_require__(3),
        // 'highlight',
        // 'highlight-html',
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.tabs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, WizardSimpleBodyView, WizardSimpleTestView, ComponentExampleCodeView){

  var WizardSimpleView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
      regions:{
        Main: "#componentMainBody",
        Example: "#exampleCode",
        Test: "#componentTest"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Main.show(new WizardSimpleBodyView());
    $view.Example.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.components.wizard.simple.wizardSimpleHtmlCodeTemplate,
      templateJs: App.Templates.demo.app.components.wizard.simple.wizardSimpleJsCodeTemplate
    }));
    $view.Test.show(new WizardSimpleTestView());
  }


  return WizardSimpleView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(81),

        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.dashboard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.message\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()) ], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, DashboardService){

  var DashboardView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.dashboard.dashboardTemplate,
      gridOptions: {
          verticalMargin: 10,

          configure:{
            requiredByUser: false
          },
          buttons:{
            btnConfig:false
          }
      },
      currentDashboard: undefined,
      loadDashboard: fncLoadDashboard,
      loadSelectedDashboard: fncLoadSelectedDashboard,
      addWidget: fncAddWidget,
      newDashboard: fncNewDashboard,
      deleteDashboard: fncDeleteDashboard,
      saveDashboard: fncSaveDashboard,
      collapseAside: fncCollapseAside,
      newWidgetHtmlInline: fncNewWidgetHtmlInline,
      newWidgetTemplateInline: fncNewWidgetTemplateInline,
      newWidgetTemplateXhr: fncNewWidgetTemplateXhr,
      ui:{
        dashboard: "#dashboard",
        templateInline: "#templateInline",
        dashboardList: "#dashboardList",
        dashboardListUl: "#dashboardList ul",
        menuDashboardLink: "#dashboardList ul li a",
        currentDashboardName: "#currentDashboard",
        addWidget: "#addWidget",
        newDashboard: "#newDashboard",
        deleteDashboard: "#deleteDashboard",
        saveDashboard: "#saveDashboard",
        dashboardMenu: ".dashboard-aside",
        currentDashboardLink: "#currentDashboardLink",
        collapsibleAsideMenu: ".dashboard-aside [data-toggle='collapse']",
        fabButton: "#fabButton",
        newDashboardDialog: "#newDashboardDialog",
        addWidgetDialog: "#addWidgetDialog",
        newWidgetHtmlInline: "#newWidgetHtmlInline",
        newWidgetTemplateInline: "#newWidgetTemplateInline",
        newWidgetTemplateXhr: "#newWidgetTemplateXhr"


      },
      events:{
        "click @ui.menuDashboardLink": "loadSelectedDashboard",
        "click @ui.addWidget": "addWidget",
        "click @ui.newDashboard": "newDashboard",
        "click @ui.deleteDashboard": "deleteDashboard",
        "click @ui.saveDashboard": "saveDashboard",
        "click @ui.currentDashboardLink": "collapseAside",
        "click @ui.newWidgetHtmlInline": "newWidgetHtmlInline",
        "click @ui.newWidgetTemplateInline": "newWidgetTemplateInline",
        "click @ui.newWidgetTemplateXhr": "newWidgetTemplateXhr"
      },
      onAttach  : fncOnRender,
      onDomRefresh: fncOnDomRefresh
  });

  function fncOnRender(){
    var $view = this;


  }

  function fncOnDomRefresh(){
    var $view = this;

    // List dashboards
    DashboardService.getAll().then(function(data){

      $.each(data, function(i, dashboard){
          $view.ui.dashboardListUl.append("<li ><a data-dashboard-id='"+dashboard.getId()+"'>"+dashboard.getName()+"</a></li>");
      })

    });

    $view.ui.addWidgetDialog.rup_dialog({
      type: $.rup.dialog.DIV,
  		autoOpen: false,
  		modal: true,
      appendTo:".dashboard-container",
      width:"70%",
      buttons: [{
				text: "Abandonar",
				click: function (event) {
					$view.ui.addWidgetDialog.rup_dialog("close");
          event.preventDefault();
				},
				btnType: $.rup.dialog.LINK
			}
		]
  });


    $view.ui.newDashboardDialog.rup_dialog({
      type: $.rup.dialog.DIV,
  		autoOpen: false,
  		modal: true,
      appendTo:".dashboard-container",
      width:"70%",
      buttons: [{
				text: "Aceptar",
				click: function () {
					debugger;

				}
			},
			{
				text: "Abandonar",
				click: function (event) {
					$view.ui.newDashboardDialog.rup_dialog("close");
          event.preventDefault();
				},
				btnType: $.rup.dialog.LINK
			}
		]
    })



    $view.ui.fabButton.rup_button();

    $view.ui.dashboard.rup_dashboard(this.gridOptions);

    $view.loadDashboard("1");



    //
    // $view.ui.dashboard.rup_dashboard("addWidget",{
    //   type:"template",
    //   widgetOptions:{
    //     buttons:{
    //       btnConfig:false
    //     },
    //     template: "#templateInline"
    //   }
    // });
    //
    //
    // $view.ui.dashboard.rup_dashboard("addWidget",{
    //   type:"template",
    //   widgetOptions:{
    //     configure:{
    //       requiredByUser:false,
    //       template:"#templateConfig"
    //     },
    //     template: "<p>"+
    //       "Template Inline String"+
    //     "</p>"
    //
    //
    //   }
    // });
    //
    // $view.ui.dashboard.rup_dashboard("addWidget",{
    //   type:"xhr",
    //   widgetOptions:{
    //     url: "/demoResponsive/app/dashboard/html/widgetDiv.html",
    //     configure:{
    //       template:"#templateConfig"
    //     }
    //
    //   }
    // });
    //
    // $view.ui.dashboard.rup_dashboard("addWidget",{
    //   type:"template",
    //   widgetOptions:{
    //     template: App.Templates.demo.app.dashboard.templates.widgetInline,
    //     configure:{
    //       template:"#templateConfig"
    //     }
    //   }
    // });

  }

  function fncLoadDashboard(dashboardId){
    var $view = this;
    return DashboardService.get(dashboardId).then(function(dashboard){
      $view.currentDashboard = dashboard;
      $view.ui.currentDashboardName.text(dashboard.getName());
      $view.ui.dashboard.rup_dashboard("removeAll");
      $view.ui.dashboard.rup_dashboard("loadFromArray", JSON.parse(dashboard.getSerializedArray()));
    });
  }

  function fncLoadSelectedDashboard(event){
    var $view = this,  dashboardId = event.currentTarget.getAttribute('data-dashboard-id');


    $view.loadDashboard(dashboardId);
  }


  function fncAddWidget(){
    var $view = this;
    $view.ui.addWidgetDialog.rup_dialog("open");
  }

  function fncNewWidgetHtmlInline(){
    var $view = this;

    $view.ui.dashboard.rup_dashboard("addWidget",{
      type:"template",
      minWidth: 4,
      minHeight: 4,
      widgetOptions:{
        configure:{
          requiredByUser:false,
          template:"#templateConfig"
        },
        template: "<p>"+
          "Este ssses un ejemplo de un widget HTML."+
        "</p>"+
        "<p>"+
          "El contenido se especifica directamente en la propiedad template de la definición del widget. "+
        "</p>"
      }
    });
  }

  function fncNewWidgetTemplateInline(){
    var $view = this;
    $view.ui.dashboard.rup_dashboard("addWidget",{
      type:"template",
      minWidth: 4,
      minHeight: 4,
      widgetOptions:{
        buttons:{
          btnConfig:false
        },
        template: "#templateInline"
      }
    });
  }

  function fncNewWidgetTemplateXhr(){
    var $view = this;
    $view.ui.dashboard.rup_dashboard("addWidget",{
      type:"xhr",
      minWidth: 4,
      minHeight: 4,
      widgetOptions:{
        url: "/demoResponsive/app/dashboard/html/widgetDiv.html",
        configure:{
          template:"#templateConfig"
        }

      }
    });
  }

  function fncNewDashboard(){
    var $view = this;
    $view.ui.newDashboardDialog.rup_dialog("open");
  }

  function fncConfirmDelete (){
    DashboardService.delete($view.currentDashboard);
  }

  function fncConfirmNewDashboard (name){

    var newDashboard = new Dashboard({
      name
    });

    DashboardService.ass($view.currentDashboard);
  }

  function fncDeleteDashboard(){
    var $view = this;

    $.rup_messages("msgConfirm", {
      message: "¿Está seguro que desea eliminar el escritorio actual?",
      title: "Confirmación de borrado",
      OKFunction : fncConfirmDelete
    });
  }

  function fncSaveDashboard(){
    var $view = this;
    var serializedDashboardJson = $view.ui.dashboard.rup_dashboard("serializeAsArray");
    var serializedDashboard = $view.ui.dashboard.rup_dashboard("serialize");
    $view.currentDashboard.setSerializedArray(serializedDashboard);
    $view.currentDashboard.setDataJson(serializedDashboardJson);

    DashboardService.save($view.currentDashboard);
  }

  function fncCollapseAside(){
    var $view = this;

    if ($view.ui.dashboardMenu.hasClass("collapsed")){
      $view.ui.dashboardMenu.removeClass("collapsed");
    }else{
      $.each($(".dashboard-aside [data-toggle='collapse']").map(function(i,elem){ return $($(elem).attr("href"));}), function(i, elem){
        $(elem).collapse("hide");
      });
      $view.ui.dashboardMenu.addClass("collapsed");

    }
  }

  return DashboardView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));



// define(['marionette',
//         'templates',
//         './dashboardBodyView',
//         './dashboardTestView',
//         '../shared/component/componentExampleCodeView',
//         'rup/rup.message','rup/rup.tabs'], function(Marionette, App, DashboardBodyView, DashboardTestView, ComponentExampleCodeView){
//
//   var DashboardView = Marionette.LayoutView.extend({
//       template: App.Templates.demo.app.shared.component.componentLayoutTemplate,
//       regions:{
//         Main: "#componentMainBody",
//         Example: "#exampleCode",
//         Test: "#componentTest"
//       },
//       onRender: fncOnRender
//   });
//
//   function fncOnRender(){
//     var $view = this;
//
//     $view.Main.show(new DashboardBodyView());
//     $view.Example.show(new ComponentExampleCodeView({
//       templateHtml: App.Templates.demo.app.dashboard.dashboardHtmlCodeTemplate,
//       templateJs: App.Templates.demo.app.dashboard.dashboardJsCodeTemplate
//     }));
//     $view.Test.show(new DashboardTestView());
//   }
//
//   return DashboardView;
// });

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
(function (root, factory) {
  if (true) {
      // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if (typeof exports === 'object') {
      // CommonJS
    module.exports = factory(require('jquery'));
  } else {
    // Browser globals (Note: root is window)
    // root.returnExports = factory(root.myModule, root.myOtherModule);
    root.returnExports = factory(jQuery);
  }
}(this, function (jQuery) {


  function Dashboard(json){
    json = json || {};
    this.name = json.nombre?json.nombre:"";
    this.id = json.nombre?json.id:"";
    this.num = json.nombre?json.num:"";
    this.serializedArray = json.serializedArray?json.serializedArray:"";
    this.datajson = json.datajson?json.datajson:"";
    this.default = json.default?json.default:"";
  }

  Dashboard.prototype = {
    getName: function(){
      return this.name;
    },
    getId: function(){
      return this.id;
    },
    setName: function(name){
      this.name=name;
    },
    setId: function(id){
      this.id=id;
    },
    getSerializedArray: function(){
      return this.serializedArray;
    },
    getDataJson: function(){
      return this.datajson;
    },
    getDefault: function(){
      return this.default;
    },
    setSerializedArray: function(serializedArray){
      this.serializedArray = serializedArray;
    },
    setDataJson: function(datajson){
      this.datajson = datajson;
    },
    setDefault: function(argDefault){
      this.default = argDefault;
    }

  }

  return Dashboard;

}));


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;( function(root,factory ) {
 if ( true ) {

   // AMD. Register as an anonymous module.
   !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2),__webpack_require__(80),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.dashboard\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
 } else {

   // Browser globals
   root.returnExports = factory( jQuery );
 }
} (this,  function( $, Dashboard ) {

  var dashboardList = [];

  // Methods

  function getAll(){
    return $.when(
      $.ajax({
        url: '/dashboard/getAll'
      }).pipe(function(data){
        $.each(data, function(i, elem){
            dashboardList.push(new Dashboard(elem));
        })

        return dashboardList;
      })
    );

  }
  function get(dashboardId){
    return $.when(
      $.ajax({
        url: '/dashboard/get/'+dashboardId
      }).pipe(function(data){
        return new Dashboard(data);
      })
    );

  }

  function add(dashboard){
    return $.when(
      $.ajax({
        url:'/dashboard/post',
        method:'post',
        dataType:'json',
        contentType: "application/json",
        data: JSON.stringify({
          id: dashboard.getId(),
          serializedArray: dashboard.getDataJson(),
          nombre:dashboard.getName(),
          default:dashboard.getDefault()
        })

      }).pipe(function(data){
        debugger;
      })
    );
  }

  function save(dashboard){
    return $.when(
      $.ajax({
        url:'/dashboard/put',
        method:'put',
        dataType:'json',
        contentType: "application/json",
        data: JSON.stringify({
          id: dashboard.getId(),
          serializedArray: dashboard.getDataJson(),
          nombre:dashboard.getName(),
          default:dashboard.getDefault()
        })

      }).pipe(function(data){
        debugger;
      })
    );
  }

  function fncDelete(dashboard){
    return $.when(
      $.ajax({
        url:'/dashboard/delete/'+dashboard.getId(),
        method:'delete'


      }).pipe(function(data){
        console.log("deleted");
      })
    );
  }

  function notHelloOrGoodbye(){}; // A private method
  function hello(){}; // A public method because it's returned (see below)
  function goodbye(){}; // A public method because it's returned (see below)

  // Exposed public methods
  return {
      getAll : getAll,
      get: get,
      save: save,
      delete: fncDelete,
      add: add
  }
}));


/***/ }),
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DatatableView; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_marionette__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_marionette___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_marionette__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_templates__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_templates___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_templates__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_jquery__);
throw new Error("Cannot find module \"rup/datatable/rup.datatable\"");









// define(['marionette',
// 	'templates',
// 	'datatables.net-bs'], function(Marionette, App){

var DatatableView = __WEBPACK_IMPORTED_MODULE_0_marionette__["LayoutView"].extend({
	template: __WEBPACK_IMPORTED_MODULE_1_templates__["Templates"].demo.app.datatable.datatableTemplate,
	initialize: fncInitilize,
	onDomRefresh: fncOnDomRefresh

});

function fncInitilize(){





}

function fncOnDomRefresh(){
	// var $view = this;

	// var datatable = new RupDatatable('#example', {});
	//  console.log($('#example').rup_datatable);
	__WEBPACK_IMPORTED_MODULE_2_jquery___default()('#example').rup_datatable();


}



// });


/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_app_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_bt4__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_bt4___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_bt4__);






__WEBPACK_IMPORTED_MODULE_0_app_js__["a" /* RupResponsiveDemoApp */].start();


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
	__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

	var IndexView = Marionette.LayoutView.extend({
		template: App.Templates.demo.app.pages.index.indexTemplate
	});

	return IndexView;

}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var MobileDesktopDescView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.responsiveGrid.mobileDesktop.mobileDesktopDescTemplate,
  });

  return MobileDesktopDescView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var MobileDesktopExampleView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.responsiveGrid.mobileDesktop.mobileDesktopExampleTemplate,
  });

  return MobileDesktopExampleView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(85),
        __webpack_require__(86),
        __webpack_require__(3),
      ], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, MobileDesktopDescView, MobileDesktopExampleView, ComponentExampleCodeView){

  var MobileDesktopView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.rwdGridLayoutTemplate,
      regions:{
        Description: "#description",
        Example: "#rwdExample",
        Code: "#exampleCode"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Description.show(new MobileDesktopDescView());
    $view.Example.show(new MobileDesktopExampleView());
    $view.Code.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.responsiveGrid.mobileDesktop.mobileDesktopExampleTemplate
      // templateJs: App.Templates.demo.app.components.feedback.feedbackJsCodeTemplate
    }));

  }


  return MobileDesktopView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var MobileTabletDesktopDescView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.responsiveGrid.mobileTabletDesktop.mobileTabletDesktopDescTemplate,
  });

  return MobileTabletDesktopDescView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var MobileTabletDesktopExampleView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.responsiveGrid.mobileTabletDesktop.mobileTabletDesktopExampleTemplate,
  });

  return MobileTabletDesktopExampleView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(88),
        __webpack_require__(89),
        __webpack_require__(3),
      ], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, MobileTabletDesktopDescView, MobileTabletDesktopExampleView, ComponentExampleCodeView){

  var MobileTabletDesktopView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.rwdGridLayoutTemplate,
      regions:{
        Description: "#description",
        Example: "#rwdExample",
        Code: "#exampleCode"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Description.show(new MobileTabletDesktopDescView());
    $view.Example.show(new MobileTabletDesktopExampleView());
    $view.Code.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.responsiveGrid.mobileTabletDesktop.mobileTabletDesktopExampleTemplate
      // templateJs: App.Templates.demo.app.components.feedback.feedbackJsCodeTemplate
    }));

  }


  return MobileTabletDesktopView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var StackedHorizontalDescView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.responsiveGrid.stackedHorizontal.stackedHorizontalDescTemplate,
  });

  return StackedHorizontalDescView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var StackedHorizontalDescView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.responsiveGrid.stackedHorizontal.stackedHorizontalExampleTemplate,
  });

  return StackedHorizontalDescView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(91),
        __webpack_require__(92),
        __webpack_require__(3),
      ], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, StackedHorizontalDescView, StackedHorizontalExampleView, ComponentExampleCodeView){

  var RwdView = Marionette.LayoutView.extend({
      template: App.Templates.demo.app.shared.component.rwdGridLayoutTemplate,
      regions:{
        Description: "#description",
        Example: "#rwdExample",
        Code: "#exampleCode"
      },
      onRender: fncOnRender
  });

  function fncOnRender(){
    var $view = this;

    $view.Description.show(new StackedHorizontalDescView());
    $view.Example.show(new StackedHorizontalExampleView());
    $view.Code.show(new ComponentExampleCodeView({
      templateHtml: App.Templates.demo.app.responsiveGrid.stackedHorizontal.stackedHorizontalExampleTemplate
      // templateJs: App.Templates.demo.app.components.feedback.feedbackJsCodeTemplate
    }));

  }


  return RwdView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

    var FooterView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.shared.footer.footerTemplate
    });

    return FooterView;

}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

    var HeaderView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.shared.header.headerTemplate
    });

    return HeaderView;

}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
	__webpack_require__(1),
	!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.base\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
	!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.utils\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
	!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.lang\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

	var HeaderView = Marionette.LayoutView.extend({
		template: App.Templates.demo.app.shared.language.languageTemplate,
		ui:{
			languageSelector: '#x21aResponsiveWar_language'
		},
		onDomRefresh: fncOnDomRefresh
	});

	function fncOnDomRefresh(){
		var $view = this;

		$view.ui.languageSelector.rup_language({languages: jQuery.rup.AVAILABLE_LANGS_ARRAY});
	}

	return HeaderView;

}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
/**
 * @exports MainView
 */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        __webpack_require__(95),
        __webpack_require__(96),
        __webpack_require__(94),
        __webpack_require__(98)
      ], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App, HeaderView, LanguageView, FooterView, MenuView){

    'use strict';

    /**
     * Vista principal.
     *
     * Define el layout de la página y las diferentes regiones en las que se van a cargar las vistas que van a componer la pantalla.
     *
     *
     * @class
     * @augments Backbone.LayoutView
     * @constructor
     * @name MainView
     *
     */
    var MainView = Marionette.LayoutView.extend({/** @lends MainView.prototype */
        el: "body",
        template: App.Templates.demo.app.shared.main.mainTemplate,
        regions:{
            Header:"#header",
            Language: "#language",
            Menu: "#menu",
            BreadCrumb: "#breadCrumb",
            Container:"#container",
            Footer:"#footer"
        },
        onRender: fncOnRender,
        initialize: fncInitialize

    });





    function fncOnRender(){
        var $mainView = this;

        // Header
        $mainView.Header.show(new HeaderView());
        $mainView.Language.show(new LanguageView());
        $mainView.Menu.show(new MenuView());
        $mainView.Footer.show(new FooterView());


    }

    function fncInitialize(){
    }

    return MainView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.menu\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.lang\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.navbar\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

    var MenuView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.shared.menu.menuTemplate,
        redirectNavLink: fncRedirectNavLink,
        ui:{
            // menuElement: "#x21aResponsiveWar_menu",
            // menuMixedElement: "#x21aResponsiveWar_menu"
            languageTool: "#languageDropdown",
            navbar: "#navbarResponsive",
            navLink : "[data-redirect-navLink]"
            // navLinkBt4: "#navLinkBt4",
            // navLinkBt3: "#navLinkBt3",
            // navLinkJQui: "#navLinkJQui"
        },
        events: {
            "click @ui.navLink": "redirectNavLink"
        },
        onAttach : fncOnAttach
    });

    function fncOnAttach(){
      this.ui.languageTool.rup_language({languages: jQuery.rup.AVAILABLE_LANGS_ARRAY});
      this.ui.navbar.rup_navbar();
    }

    function fncRedirectNavLink(event){
      

      var newIndex = $(event.target).attr("data-redirect-navLink");

      window.location.href = _replaceIndex(newIndex);

    }

    function _replaceIndex(newIndex){
      var pathname = window.location.pathname,
          splitPathname = pathname.split('/'),
          index = splitPathname[splitPathname.length-1],
          href = window.location.href,
          splitHref = href.split(index);

      return splitHref[0] + newIndex +(splitHref.length>1?splitHref[splitHref.length-1]:"");

    }

    return MenuView;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(2)))

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1), !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.combo\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

    var StyleGuideView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.styleGuide.bt3.styleGuideTemplate,
        ui:{
          rupButtons: '.rup-button',
          rupDropdown: '#dropdownHtmlListButton',
          rupCombo: '#rupCombo',
          bt3Container: '#bt3Container'
        },
        onDomRefresh: fncOnDomRefresh
    });

    function fncOnDomRefresh(){

      this.ui.rupButtons.rup_button();

      this.ui.rupDropdown.rup_button({
    		dropdown:{
    			dropdownListId:"dropdownHtmlList"
    		}
    	});

      this.ui.bt3Container.load('http://getbootstrap.com/components/ .bs-docs-container .row [role="main"]');
    }

    return StyleGuideView;

}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1), !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.combo\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

    var StyleGuideView = Marionette.LayoutView.extend({
        template: App.Templates.demo.app.styleGuide.bt4.styleGuideTemplate,
        bt4BaseUrl: 'https://v4-alpha.getbootstrap.com/components/',
        btComponents:[
          "alerts",
          "badge",
          "breadcrumb",
          "buttons",
          "button-group",
          "card",
          "carousel",
          "collapse",
          "dropdowns",
          "forms",
          "input-group",
          "jumbotron",
          "list-group",
          "modal",
          "navs",
          "navbar",
          "pagination",
          "popovers",
          "progress",
          "scrollspy",
          "tooltips"

        ],
        ui:{
          bt4examples: '#bt4examples'
        },
        onDomRefresh: fncOnDomRefresh
    });

    function fncOnDomRefresh(){
      var $div, $self = this;

      for(var i=0; i<this.btComponents.length;i++){
        $div = $('<div>').addClass('row') ;
        $div.load(this.bt4BaseUrl + this.btComponents[i] + ' .bd-content', null, function(){
          $self.ui.bt4examples.find('.bd-content').attr("class", "col-md-9 bd-content");
          $self.ui.bt4examples.find('#markdown-toc').remove();
          $self.ui.bt4examples.find('#contents').remove();

        });



        this.ui.bt4examples.append($div);
      }

    }

    return StyleGuideView;

}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
	__webpack_require__(1), !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.button.js\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()),!(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.combo,js\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

	var StyleGuideView = Marionette.LayoutView.extend({
		template: App.Templates.demo.app.styleGuide.styleGuideTemplate,
		ui:{
			rupButtons: '.rup-button',
			rupDropdown: '#dropdownHtmlListButton',
			rupCombo: '#rupCombo'
		},
		onDomRefresh: fncOnDomRefresh
	});

	function fncOnDomRefresh(){

		this.ui.rupButtons.rup_button();

		this.ui.rupDropdown.rup_button({
    		dropdown:{
    			dropdownListId:'dropdownHtmlList'
    		}
    	});

		this.ui.rupCombo.rup_combo({
			loadFromSelect: true
    	});
	}

	return StyleGuideView;

}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),
        __webpack_require__(1),
        !(function webpackMissingModule() { var e = new Error("Cannot find module \"rup/rup.table\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_RESULT__ = function(Marionette, App){

  var TableFilterView = Marionette.LayoutView.extend({
    template: App.Templates.demo.app.table.tableFilterTemplate,
    tableColNames: {},
    tableColModels: {},
    options_table_report: {},
    options_ejie_combo: {},
    options_role_combo: {},
    ui:{
      table: "#table"
    },
    initialize: fncInitilize,
    onDomRefresh: fncOnDomRefresh

  });

  function fncInitilize(){

    this.tableColNames = [
       $.rup.i18n.app.table.id,
       $.rup.i18n.app.table.nombre,
       $.rup.i18n.app.table.apellido1,
       $.rup.i18n.app.table.apellido2,
       $.rup.i18n.app.table.ejie,
       $.rup.i18n.app.table.fechaAlta,
       $.rup.i18n.app.table.fechaBaja,
       $.rup.i18n.app.table.rol
		];

		this.tableColModels = [
			{ name: "id", index: "id", editable:true, width: 80
				, formoptions:{rowpos:1, colpos:1},
        rwdClasses:"hidden-xs hidden-sm hidden-md"
			},
			{ name: "nombre", index: "nombre", editable:true
				, formoptions:{rowpos:2, colpos:1}
			},
			{ name: "apellido1", index: "apellido1", editable:true
				, formoptions:{rowpos:3, colpos:1}
				, classes:'ui-ellipsis'
			},
			{ name: "apellido2", index: "apellido2", editable:true
				, formoptions:{rowpos:4, colpos:1}
			},
			{ name: "ejie", index: "ejie", editable:true, width: 60,
				edittype: "checkbox",
				formatter: "checkbox",
				align: "center",
				editoptions: {
					value:"1:0"
				},
				searchoptions:{
					rupType: "combo",
					source : [
					   {label: "---", value:""},
					   {label: "Si", value:"1"},
					   {label: "No", value:"0"}
					]
				}
				, formoptions:{rowpos:5, colpos:1}
			},
			{ name: "fechaAlta",  index: "fecha_alta", editable:true, width: 120,
				rupType: "date",
				editoptions:{
					labelMaskId : "fecha-mask",
					showButtonPanel : true,
					showOtherMonths : true,
					noWeekend : true
				}
				, formoptions:{rowpos:2, colpos:2}
			},
			{ name: "fechaBaja", index: "fecha_baja", editable:true, width: 120,
				rupType: "date",
        rwdClasses:"hidden-xs hidden-sm hidden-md",
				editoptions:{
					labelMaskId : "fecha-mask",
					showButtonPanel : true,
					showOtherMonths : true,
					noWeekend : true
				}
				, formoptions:{rowpos:3, colpos:2}
			},
			{ name: "rol", index: "rol", editable:true, width: 140,
				rupType: "combo",
        rwdClasses:"hidden-xs hidden-sm hidden-md",
				editoptions: {
					source : [
					   {label: "---", value:""},
					   {label: $.rup.i18n.app["GRID_simple##rol"]["administrador"], value:"administrador"},
					   {label: $.rup.i18n.app["GRID_simple##rol"]["desarrollador"], value:"desarrollador"},
					   {label: $.rup.i18n.app["GRID_simple##rol"]["espectador"], value:"espectador"},
					   {label: $.rup.i18n.app["GRID_simple##rol"]["informador"], value:"informador"},
					   {label: $.rup.i18n.app["GRID_simple##rol"]["manager"], value:"manager"}
					]
				}
				, formoptions:{rowpos:3, colpos:2}
			}
    ];

    this.options_table_report = {
			buttons:[
				{id:"reports", i18nCaption:"Informes", right:true,
					buttons:[
						{ i18nCaption:"CSV", css:"csv",
							url: "../jqGridUsuario/csvReport"
						},
						{ i18nCaption:"XLS", css:"xls",
							url: "../jqGridUsuario/xlsReport"
						},
						{ i18nCaption:"XLXS", css:"xls",
							url: "../jqGridUsuario/xlsxReport"
						},
						{ i18nCaption:"ODS", css:"ods",
							url: "../jqGridUsuario/odsReport"
						},
						{ i18nCaption:"PDF", css:"pdf",
							url: "../jqGridUsuario/pdfReport"
						},
						{ i18nCaption:"PDF_inLine", css:"pdf",
							url: "../jqGridUsuario/pdfReport"
							, isInline:true
						}
					 ]}
			]
		};

    this.options_ejie_combo = {
			source : [
			   {label: "---", value:""},
			   {i18nCaption: "0", value:"0"},
			   {i18nCaption: "1", value:"1"}
			],
			i18nId: "GRID_simple##ejie",
			width: 120
		};

		this.options_role_combo = {
			source : [
			   {label: "---", value:""},
			   {label: $.rup.i18n.app["GRID_simple##rol"]["administrador"], value:"administrador"},
			   {label: $.rup.i18n.app["GRID_simple##rol"]["desarrollador"], value:"desarrollador"},
			   {label: $.rup.i18n.app["GRID_simple##rol"]["espectador"], value:"espectador"},
			   {label: $.rup.i18n.app["GRID_simple##rol"]["informador"], value:"informador"},
			   {label: $.rup.i18n.app["GRID_simple##rol"]["manager"], value:"manager"}
			]
		};


  }

  function fncOnDomRefresh(){
    var $view = this;

     var disable=1;

  	$view.ui.table.rup_table({
  		url: "jqGridUsuario",
  		colNames: this.tableColNames,
  		colModel: this.tableColModels,
          primaryKey:["id"],

          usePlugins:[
  			"formEdit",
          	"feedback",
  			"toolbar",
          	"contextMenu",
          	"filter",
          	"search",
          	"report",
            "responsive"
          ],
          shrinkToFit:true,
          forceFit:true,
          rowNum:10,
          rowList:[10,20,30],
          sortname: 'id',
          core:{
          	operations:{
                  "operacion1": {
                          name: "Operación 1",
                          icon: "fa fa-file-o",
                          enabled: function(){
                               return (disable++ %2)===0;
                          },
                          callback: function(key, options){
                               alert("Operación 1");
                          }
  	              },
  	              "operacion2": {
  	                    name: "Operación 2",
  	                    icon: "fa fa-file-o",
  	                    enabled: function(){
  	                         return true;
  	                    },
  	                    callback: function(key, options){
  	                         alert("Operación 1");
  	                    }
  	              }
            }
          },
          toolbar:{
          	showOperations:{
  	    		operacion2:false
          	}
          },
  		contextMenu:{
  			colNames:["nombre","apellido1","apellido2","ejie","fechaAlta"],
  			items: {
  				"sep1": "---------",
  		        "opContextual1": {name: "Op. contextual 1", icon: "edit", disabled: false, colNames:["fechaAlta","fechaBaja","rol"]},
  		        "opContextual2": {name: "Op. contextual 2", icon: "cut", disabled: true},
  		        "opContextual3" :{name: "Op. contextual 3", icon: "cut", colNames:["nombre","apellido1"], items:{
  		        	"subOpContextual1": {name: "Sub Op. contextual 1", icon: "edit", disabled: false},
  		            "opContextual2": {name: "Sub Op. contextual 2", icon: "cut", disabled: true}
  		        	}
  		        }
  		    },
  			showOperations:{
  				operacion1:false
  				,operacion2: ["nombre","apellido1"]
  		  }
  		},
          formEdit:{
          	detailForm: "#table_detail_div",
          	validate:{
      			rules:{
      				"nombre":{required:true},
      				"apellido1":{required:true},
      				"fechaAlta":{date:true},
      				"fechaBaja":{date:true}
      			}
      		}
          },
          filter:{
          	validate:{
          		rules:{
      				"fechaAlta":{date:true},
      				"fechaBaja":{date:true}
      			}
          	},
          },
          search:{
          	validate:{
          		rules:{
      				"fechaAlta":{date:true},
      				"fechaBaja":{date:true}
      			}
          	}
          },
          report: $view.options_table_report

         // loadOnStartUp:false
  });
  }

  return TableFilterView;

}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Backbone.js 1.3.3

//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Backbone may be freely distributed under the MIT license.
//     For all details and documentation:
//     http://backbonejs.org

(function(factory) {

  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.
  // We use `self` instead of `window` for `WebWorker` support.
  var root = (typeof self == 'object' && self.self === self && self) ||
            (typeof global == 'object' && global.global === global && global);

  // Set up Backbone appropriately for the environment. Start with AMD.
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5), __webpack_require__(2), exports], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, $, exports) {
      // Export global even in AMD case in case this script is loaded with
      // others that may still expect a global Backbone.
      root.Backbone = factory(root, exports, _, $);
    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

  // Next for Node.js or CommonJS. jQuery may not be needed as a module.
  } else if (typeof exports !== 'undefined') {
    var _ = require('underscore'), $;
    try { $ = require('jquery'); } catch (e) {}
    factory(root, exports, _, $);

  // Finally, as a browser global.
  } else {
    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));
  }

})(function(root, Backbone, _, $) {

  // Initial Setup
  // -------------

  // Save the previous value of the `Backbone` variable, so that it can be
  // restored later on, if `noConflict` is used.
  var previousBackbone = root.Backbone;

  // Create a local reference to a common array method we'll want to use later.
  var slice = Array.prototype.slice;

  // Current version of the library. Keep in sync with `package.json`.
  Backbone.VERSION = '1.3.3';

  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns
  // the `$` variable.
  Backbone.$ = $;

  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
  // to its previous owner. Returns a reference to this Backbone object.
  Backbone.noConflict = function() {
    root.Backbone = previousBackbone;
    return this;
  };

  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
  // will fake `"PATCH"`, `"PUT"` and `"DELETE"` requests via the `_method` parameter and
  // set a `X-Http-Method-Override` header.
  Backbone.emulateHTTP = false;

  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
  // `application/json` requests ... this will encode the body as
  // `application/x-www-form-urlencoded` instead and will send the model in a
  // form param named `model`.
  Backbone.emulateJSON = false;

  // Proxy Backbone class methods to Underscore functions, wrapping the model's
  // `attributes` object or collection's `models` array behind the scenes.
  //
  // collection.filter(function(model) { return model.get('age') > 10 });
  // collection.each(this.addView);
  //
  // `Function#apply` can be slow so we use the method's arg count, if we know it.
  var addMethod = function(length, method, attribute) {
    switch (length) {
      case 1: return function() {
        return _[method](this[attribute]);
      };
      case 2: return function(value) {
        return _[method](this[attribute], value);
      };
      case 3: return function(iteratee, context) {
        return _[method](this[attribute], cb(iteratee, this), context);
      };
      case 4: return function(iteratee, defaultVal, context) {
        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);
      };
      default: return function() {
        var args = slice.call(arguments);
        args.unshift(this[attribute]);
        return _[method].apply(_, args);
      };
    }
  };
  var addUnderscoreMethods = function(Class, methods, attribute) {
    _.each(methods, function(length, method) {
      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);
    });
  };

  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.
  var cb = function(iteratee, instance) {
    if (_.isFunction(iteratee)) return iteratee;
    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);
    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };
    return iteratee;
  };
  var modelMatcher = function(attrs) {
    var matcher = _.matches(attrs);
    return function(model) {
      return matcher(model.attributes);
    };
  };

  // Backbone.Events
  // ---------------

  // A module that can be mixed in to *any object* in order to provide it with
  // a custom event channel. You may bind a callback to an event with `on` or
  // remove with `off`; `trigger`-ing an event fires all callbacks in
  // succession.
  //
  //     var object = {};
  //     _.extend(object, Backbone.Events);
  //     object.on('expand', function(){ alert('expanded'); });
  //     object.trigger('expand');
  //
  var Events = Backbone.Events = {};

  // Regular expression used to split event strings.
  var eventSplitter = /\s+/;

  // Iterates over the standard `event, callback` (as well as the fancy multiple
  // space-separated events `"change blur", callback` and jQuery-style event
  // maps `{event: callback}`).
  var eventsApi = function(iteratee, events, name, callback, opts) {
    var i = 0, names;
    if (name && typeof name === 'object') {
      // Handle event maps.
      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;
      for (names = _.keys(name); i < names.length ; i++) {
        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);
      }
    } else if (name && eventSplitter.test(name)) {
      // Handle space-separated event names by delegating them individually.
      for (names = name.split(eventSplitter); i < names.length; i++) {
        events = iteratee(events, names[i], callback, opts);
      }
    } else {
      // Finally, standard events.
      events = iteratee(events, name, callback, opts);
    }
    return events;
  };

  // Bind an event to a `callback` function. Passing `"all"` will bind
  // the callback to all events fired.
  Events.on = function(name, callback, context) {
    return internalOn(this, name, callback, context);
  };

  // Guard the `listening` argument from the public API.
  var internalOn = function(obj, name, callback, context, listening) {
    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {
      context: context,
      ctx: obj,
      listening: listening
    });

    if (listening) {
      var listeners = obj._listeners || (obj._listeners = {});
      listeners[listening.id] = listening;
    }

    return obj;
  };

  // Inversion-of-control versions of `on`. Tell *this* object to listen to
  // an event in another object... keeping track of what it's listening to
  // for easier unbinding later.
  Events.listenTo = function(obj, name, callback) {
    if (!obj) return this;
    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));
    var listeningTo = this._listeningTo || (this._listeningTo = {});
    var listening = listeningTo[id];

    // This object is not listening to any other events on `obj` yet.
    // Setup the necessary references to track the listening callbacks.
    if (!listening) {
      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));
      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};
    }

    // Bind callbacks on obj, and keep track of them on listening.
    internalOn(obj, name, callback, this, listening);
    return this;
  };

  // The reducing API that adds a callback to the `events` object.
  var onApi = function(events, name, callback, options) {
    if (callback) {
      var handlers = events[name] || (events[name] = []);
      var context = options.context, ctx = options.ctx, listening = options.listening;
      if (listening) listening.count++;

      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});
    }
    return events;
  };

  // Remove one or many callbacks. If `context` is null, removes all
  // callbacks with that function. If `callback` is null, removes all
  // callbacks for the event. If `name` is null, removes all bound
  // callbacks for all events.
  Events.off = function(name, callback, context) {
    if (!this._events) return this;
    this._events = eventsApi(offApi, this._events, name, callback, {
      context: context,
      listeners: this._listeners
    });
    return this;
  };

  // Tell this object to stop listening to either specific events ... or
  // to every object it's currently listening to.
  Events.stopListening = function(obj, name, callback) {
    var listeningTo = this._listeningTo;
    if (!listeningTo) return this;

    var ids = obj ? [obj._listenId] : _.keys(listeningTo);

    for (var i = 0; i < ids.length; i++) {
      var listening = listeningTo[ids[i]];

      // If listening doesn't exist, this object is not currently
      // listening to obj. Break out early.
      if (!listening) break;

      listening.obj.off(name, callback, this);
    }

    return this;
  };

  // The reducing API that removes a callback from the `events` object.
  var offApi = function(events, name, callback, options) {
    if (!events) return;

    var i = 0, listening;
    var context = options.context, listeners = options.listeners;

    // Delete all events listeners and "drop" events.
    if (!name && !callback && !context) {
      var ids = _.keys(listeners);
      for (; i < ids.length; i++) {
        listening = listeners[ids[i]];
        delete listeners[listening.id];
        delete listening.listeningTo[listening.objId];
      }
      return;
    }

    var names = name ? [name] : _.keys(events);
    for (; i < names.length; i++) {
      name = names[i];
      var handlers = events[name];

      // Bail out if there are no events stored.
      if (!handlers) break;

      // Replace events if there are any remaining.  Otherwise, clean up.
      var remaining = [];
      for (var j = 0; j < handlers.length; j++) {
        var handler = handlers[j];
        if (
          callback && callback !== handler.callback &&
            callback !== handler.callback._callback ||
              context && context !== handler.context
        ) {
          remaining.push(handler);
        } else {
          listening = handler.listening;
          if (listening && --listening.count === 0) {
            delete listeners[listening.id];
            delete listening.listeningTo[listening.objId];
          }
        }
      }

      // Update tail event if the list has any events.  Otherwise, clean up.
      if (remaining.length) {
        events[name] = remaining;
      } else {
        delete events[name];
      }
    }
    return events;
  };

  // Bind an event to only be triggered a single time. After the first time
  // the callback is invoked, its listener will be removed. If multiple events
  // are passed in using the space-separated syntax, the handler will fire
  // once for each event, not once for a combination of all events.
  Events.once = function(name, callback, context) {
    // Map the event into a `{event: once}` object.
    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));
    if (typeof name === 'string' && context == null) callback = void 0;
    return this.on(events, callback, context);
  };

  // Inversion-of-control versions of `once`.
  Events.listenToOnce = function(obj, name, callback) {
    // Map the event into a `{event: once}` object.
    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));
    return this.listenTo(obj, events);
  };

  // Reduces the event callbacks into a map of `{event: onceWrapper}`.
  // `offer` unbinds the `onceWrapper` after it has been called.
  var onceMap = function(map, name, callback, offer) {
    if (callback) {
      var once = map[name] = _.once(function() {
        offer(name, once);
        callback.apply(this, arguments);
      });
      once._callback = callback;
    }
    return map;
  };

  // Trigger one or many events, firing all bound callbacks. Callbacks are
  // passed the same arguments as `trigger` is, apart from the event name
  // (unless you're listening on `"all"`, which will cause your callback to
  // receive the true name of the event as the first argument).
  Events.trigger = function(name) {
    if (!this._events) return this;

    var length = Math.max(0, arguments.length - 1);
    var args = Array(length);
    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];

    eventsApi(triggerApi, this._events, name, void 0, args);
    return this;
  };

  // Handles triggering the appropriate event callbacks.
  var triggerApi = function(objEvents, name, callback, args) {
    if (objEvents) {
      var events = objEvents[name];
      var allEvents = objEvents.all;
      if (events && allEvents) allEvents = allEvents.slice();
      if (events) triggerEvents(events, args);
      if (allEvents) triggerEvents(allEvents, [name].concat(args));
    }
    return objEvents;
  };

  // A difficult-to-believe, but optimized internal dispatch function for
  // triggering events. Tries to keep the usual cases speedy (most internal
  // Backbone events have 3 arguments).
  var triggerEvents = function(events, args) {
    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];
    switch (args.length) {
      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;
      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;
      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;
      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;
      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;
    }
  };

  // Aliases for backwards compatibility.
  Events.bind   = Events.on;
  Events.unbind = Events.off;

  // Allow the `Backbone` object to serve as a global event bus, for folks who
  // want global "pubsub" in a convenient place.
  _.extend(Backbone, Events);

  // Backbone.Model
  // --------------

  // Backbone **Models** are the basic data object in the framework --
  // frequently representing a row in a table in a database on your server.
  // A discrete chunk of data and a bunch of useful, related methods for
  // performing computations and transformations on that data.

  // Create a new model with the specified attributes. A client id (`cid`)
  // is automatically generated and assigned for you.
  var Model = Backbone.Model = function(attributes, options) {
    var attrs = attributes || {};
    options || (options = {});
    this.cid = _.uniqueId(this.cidPrefix);
    this.attributes = {};
    if (options.collection) this.collection = options.collection;
    if (options.parse) attrs = this.parse(attrs, options) || {};
    var defaults = _.result(this, 'defaults');
    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);
    this.set(attrs, options);
    this.changed = {};
    this.initialize.apply(this, arguments);
  };

  // Attach all inheritable methods to the Model prototype.
  _.extend(Model.prototype, Events, {

    // A hash of attributes whose current and previous value differ.
    changed: null,

    // The value returned during the last failed validation.
    validationError: null,

    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
    // CouchDB users may want to set this to `"_id"`.
    idAttribute: 'id',

    // The prefix is used to create the client id which is used to identify models locally.
    // You may want to override this if you're experiencing name clashes with model ids.
    cidPrefix: 'c',

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Return a copy of the model's `attributes` object.
    toJSON: function(options) {
      return _.clone(this.attributes);
    },

    // Proxy `Backbone.sync` by default -- but override this if you need
    // custom syncing semantics for *this* particular model.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Get the value of an attribute.
    get: function(attr) {
      return this.attributes[attr];
    },

    // Get the HTML-escaped value of an attribute.
    escape: function(attr) {
      return _.escape(this.get(attr));
    },

    // Returns `true` if the attribute contains a value that is not null
    // or undefined.
    has: function(attr) {
      return this.get(attr) != null;
    },

    // Special-cased proxy to underscore's `_.matches` method.
    matches: function(attrs) {
      return !!_.iteratee(attrs, this)(this.attributes);
    },

    // Set a hash of model attributes on the object, firing `"change"`. This is
    // the core primitive operation of a model, updating the data and notifying
    // anyone who needs to know about the change in state. The heart of the beast.
    set: function(key, val, options) {
      if (key == null) return this;

      // Handle both `"key", value` and `{key: value}` -style arguments.
      var attrs;
      if (typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options || (options = {});

      // Run validation.
      if (!this._validate(attrs, options)) return false;

      // Extract attributes and options.
      var unset      = options.unset;
      var silent     = options.silent;
      var changes    = [];
      var changing   = this._changing;
      this._changing = true;

      if (!changing) {
        this._previousAttributes = _.clone(this.attributes);
        this.changed = {};
      }

      var current = this.attributes;
      var changed = this.changed;
      var prev    = this._previousAttributes;

      // For each `set` attribute, update or delete the current value.
      for (var attr in attrs) {
        val = attrs[attr];
        if (!_.isEqual(current[attr], val)) changes.push(attr);
        if (!_.isEqual(prev[attr], val)) {
          changed[attr] = val;
        } else {
          delete changed[attr];
        }
        unset ? delete current[attr] : current[attr] = val;
      }

      // Update the `id`.
      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);

      // Trigger all relevant attribute changes.
      if (!silent) {
        if (changes.length) this._pending = options;
        for (var i = 0; i < changes.length; i++) {
          this.trigger('change:' + changes[i], this, current[changes[i]], options);
        }
      }

      // You might be wondering why there's a `while` loop here. Changes can
      // be recursively nested within `"change"` events.
      if (changing) return this;
      if (!silent) {
        while (this._pending) {
          options = this._pending;
          this._pending = false;
          this.trigger('change', this, options);
        }
      }
      this._pending = false;
      this._changing = false;
      return this;
    },

    // Remove an attribute from the model, firing `"change"`. `unset` is a noop
    // if the attribute doesn't exist.
    unset: function(attr, options) {
      return this.set(attr, void 0, _.extend({}, options, {unset: true}));
    },

    // Clear all attributes on the model, firing `"change"`.
    clear: function(options) {
      var attrs = {};
      for (var key in this.attributes) attrs[key] = void 0;
      return this.set(attrs, _.extend({}, options, {unset: true}));
    },

    // Determine if the model has changed since the last `"change"` event.
    // If you specify an attribute name, determine if that attribute has changed.
    hasChanged: function(attr) {
      if (attr == null) return !_.isEmpty(this.changed);
      return _.has(this.changed, attr);
    },

    // Return an object containing all the attributes that have changed, or
    // false if there are no changed attributes. Useful for determining what
    // parts of a view need to be updated and/or what attributes need to be
    // persisted to the server. Unset attributes will be set to undefined.
    // You can also pass an attributes object to diff against the model,
    // determining if there *would be* a change.
    changedAttributes: function(diff) {
      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
      var old = this._changing ? this._previousAttributes : this.attributes;
      var changed = {};
      for (var attr in diff) {
        var val = diff[attr];
        if (_.isEqual(old[attr], val)) continue;
        changed[attr] = val;
      }
      return _.size(changed) ? changed : false;
    },

    // Get the previous value of an attribute, recorded at the time the last
    // `"change"` event was fired.
    previous: function(attr) {
      if (attr == null || !this._previousAttributes) return null;
      return this._previousAttributes[attr];
    },

    // Get all of the attributes of the model at the time of the previous
    // `"change"` event.
    previousAttributes: function() {
      return _.clone(this._previousAttributes);
    },

    // Fetch the model from the server, merging the response with the model's
    // local attributes. Any changed attributes will trigger a "change" event.
    fetch: function(options) {
      options = _.extend({parse: true}, options);
      var model = this;
      var success = options.success;
      options.success = function(resp) {
        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
        if (!model.set(serverAttrs, options)) return false;
        if (success) success.call(options.context, model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Set a hash of model attributes, and sync the model to the server.
    // If the server returns an attributes hash that differs, the model's
    // state will be `set` again.
    save: function(key, val, options) {
      // Handle both `"key", value` and `{key: value}` -style arguments.
      var attrs;
      if (key == null || typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options = _.extend({validate: true, parse: true}, options);
      var wait = options.wait;

      // If we're not waiting and attributes exist, save acts as
      // `set(attr).save(null, opts)` with validation. Otherwise, check if
      // the model will be valid when the attributes, if any, are set.
      if (attrs && !wait) {
        if (!this.set(attrs, options)) return false;
      } else if (!this._validate(attrs, options)) {
        return false;
      }

      // After a successful server-side save, the client is (optionally)
      // updated with the server-side state.
      var model = this;
      var success = options.success;
      var attributes = this.attributes;
      options.success = function(resp) {
        // Ensure attributes are restored during synchronous saves.
        model.attributes = attributes;
        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);
        if (serverAttrs && !model.set(serverAttrs, options)) return false;
        if (success) success.call(options.context, model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);

      // Set temporary attributes if `{wait: true}` to properly find new ids.
      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);

      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');
      if (method === 'patch' && !options.attrs) options.attrs = attrs;
      var xhr = this.sync(method, this, options);

      // Restore attributes.
      this.attributes = attributes;

      return xhr;
    },

    // Destroy this model on the server if it was already persisted.
    // Optimistically removes the model from its collection, if it has one.
    // If `wait: true` is passed, waits for the server to respond before removal.
    destroy: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;
      var wait = options.wait;

      var destroy = function() {
        model.stopListening();
        model.trigger('destroy', model, model.collection, options);
      };

      options.success = function(resp) {
        if (wait) destroy();
        if (success) success.call(options.context, model, resp, options);
        if (!model.isNew()) model.trigger('sync', model, resp, options);
      };

      var xhr = false;
      if (this.isNew()) {
        _.defer(options.success);
      } else {
        wrapError(this, options);
        xhr = this.sync('delete', this, options);
      }
      if (!wait) destroy();
      return xhr;
    },

    // Default URL for the model's representation on the server -- if you're
    // using Backbone's restful methods, override this to change the endpoint
    // that will be called.
    url: function() {
      var base =
        _.result(this, 'urlRoot') ||
        _.result(this.collection, 'url') ||
        urlError();
      if (this.isNew()) return base;
      var id = this.get(this.idAttribute);
      return base.replace(/[^\/]$/, '$&/') + encodeURIComponent(id);
    },

    // **parse** converts a response into the hash of attributes to be `set` on
    // the model. The default implementation is just to pass the response along.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new model with identical attributes to this one.
    clone: function() {
      return new this.constructor(this.attributes);
    },

    // A model is new if it has never been saved to the server, and lacks an id.
    isNew: function() {
      return !this.has(this.idAttribute);
    },

    // Check if the model is currently in a valid state.
    isValid: function(options) {
      return this._validate({}, _.extend({}, options, {validate: true}));
    },

    // Run validation against the next complete set of model attributes,
    // returning `true` if all is well. Otherwise, fire an `"invalid"` event.
    _validate: function(attrs, options) {
      if (!options.validate || !this.validate) return true;
      attrs = _.extend({}, this.attributes, attrs);
      var error = this.validationError = this.validate(attrs, options) || null;
      if (!error) return true;
      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));
      return false;
    }

  });

  // Underscore methods that we want to implement on the Model, mapped to the
  // number of arguments they take.
  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,
      omit: 0, chain: 1, isEmpty: 1};

  // Mix in each Underscore method as a proxy to `Model#attributes`.
  addUnderscoreMethods(Model, modelMethods, 'attributes');

  // Backbone.Collection
  // -------------------

  // If models tend to represent a single row of data, a Backbone Collection is
  // more analogous to a table full of data ... or a small slice or page of that
  // table, or a collection of rows that belong together for a particular reason
  // -- all of the messages in this particular folder, all of the documents
  // belonging to this particular author, and so on. Collections maintain
  // indexes of their models, both in order, and for lookup by `id`.

  // Create a new **Collection**, perhaps to contain a specific type of `model`.
  // If a `comparator` is specified, the Collection will maintain
  // its models in sort order, as they're added and removed.
  var Collection = Backbone.Collection = function(models, options) {
    options || (options = {});
    if (options.model) this.model = options.model;
    if (options.comparator !== void 0) this.comparator = options.comparator;
    this._reset();
    this.initialize.apply(this, arguments);
    if (models) this.reset(models, _.extend({silent: true}, options));
  };

  // Default options for `Collection#set`.
  var setOptions = {add: true, remove: true, merge: true};
  var addOptions = {add: true, remove: false};

  // Splices `insert` into `array` at index `at`.
  var splice = function(array, insert, at) {
    at = Math.min(Math.max(at, 0), array.length);
    var tail = Array(array.length - at);
    var length = insert.length;
    var i;
    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];
    for (i = 0; i < length; i++) array[i + at] = insert[i];
    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];
  };

  // Define the Collection's inheritable methods.
  _.extend(Collection.prototype, Events, {

    // The default model for a collection is just a **Backbone.Model**.
    // This should be overridden in most cases.
    model: Model,

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // The JSON representation of a Collection is an array of the
    // models' attributes.
    toJSON: function(options) {
      return this.map(function(model) { return model.toJSON(options); });
    },

    // Proxy `Backbone.sync` by default.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Add a model, or list of models to the set. `models` may be Backbone
    // Models or raw JavaScript objects to be converted to Models, or any
    // combination of the two.
    add: function(models, options) {
      return this.set(models, _.extend({merge: false}, options, addOptions));
    },

    // Remove a model, or a list of models from the set.
    remove: function(models, options) {
      options = _.extend({}, options);
      var singular = !_.isArray(models);
      models = singular ? [models] : models.slice();
      var removed = this._removeModels(models, options);
      if (!options.silent && removed.length) {
        options.changes = {added: [], merged: [], removed: removed};
        this.trigger('update', this, options);
      }
      return singular ? removed[0] : removed;
    },

    // Update a collection by `set`-ing a new list of models, adding new ones,
    // removing models that are no longer present, and merging models that
    // already exist in the collection, as necessary. Similar to **Model#set**,
    // the core operation for updating the data contained by the collection.
    set: function(models, options) {
      if (models == null) return;

      options = _.extend({}, setOptions, options);
      if (options.parse && !this._isModel(models)) {
        models = this.parse(models, options) || [];
      }

      var singular = !_.isArray(models);
      models = singular ? [models] : models.slice();

      var at = options.at;
      if (at != null) at = +at;
      if (at > this.length) at = this.length;
      if (at < 0) at += this.length + 1;

      var set = [];
      var toAdd = [];
      var toMerge = [];
      var toRemove = [];
      var modelMap = {};

      var add = options.add;
      var merge = options.merge;
      var remove = options.remove;

      var sort = false;
      var sortable = this.comparator && at == null && options.sort !== false;
      var sortAttr = _.isString(this.comparator) ? this.comparator : null;

      // Turn bare objects into model references, and prevent invalid models
      // from being added.
      var model, i;
      for (i = 0; i < models.length; i++) {
        model = models[i];

        // If a duplicate is found, prevent it from being added and
        // optionally merge it into the existing model.
        var existing = this.get(model);
        if (existing) {
          if (merge && model !== existing) {
            var attrs = this._isModel(model) ? model.attributes : model;
            if (options.parse) attrs = existing.parse(attrs, options);
            existing.set(attrs, options);
            toMerge.push(existing);
            if (sortable && !sort) sort = existing.hasChanged(sortAttr);
          }
          if (!modelMap[existing.cid]) {
            modelMap[existing.cid] = true;
            set.push(existing);
          }
          models[i] = existing;

        // If this is a new, valid model, push it to the `toAdd` list.
        } else if (add) {
          model = models[i] = this._prepareModel(model, options);
          if (model) {
            toAdd.push(model);
            this._addReference(model, options);
            modelMap[model.cid] = true;
            set.push(model);
          }
        }
      }

      // Remove stale models.
      if (remove) {
        for (i = 0; i < this.length; i++) {
          model = this.models[i];
          if (!modelMap[model.cid]) toRemove.push(model);
        }
        if (toRemove.length) this._removeModels(toRemove, options);
      }

      // See if sorting is needed, update `length` and splice in new models.
      var orderChanged = false;
      var replace = !sortable && add && remove;
      if (set.length && replace) {
        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {
          return m !== set[index];
        });
        this.models.length = 0;
        splice(this.models, set, 0);
        this.length = this.models.length;
      } else if (toAdd.length) {
        if (sortable) sort = true;
        splice(this.models, toAdd, at == null ? this.length : at);
        this.length = this.models.length;
      }

      // Silently sort the collection if appropriate.
      if (sort) this.sort({silent: true});

      // Unless silenced, it's time to fire all appropriate add/sort/update events.
      if (!options.silent) {
        for (i = 0; i < toAdd.length; i++) {
          if (at != null) options.index = at + i;
          model = toAdd[i];
          model.trigger('add', model, this, options);
        }
        if (sort || orderChanged) this.trigger('sort', this, options);
        if (toAdd.length || toRemove.length || toMerge.length) {
          options.changes = {
            added: toAdd,
            removed: toRemove,
            merged: toMerge
          };
          this.trigger('update', this, options);
        }
      }

      // Return the added (or merged) model (or models).
      return singular ? models[0] : models;
    },

    // When you have more items than you want to add or remove individually,
    // you can reset the entire set with a new list of models, without firing
    // any granular `add` or `remove` events. Fires `reset` when finished.
    // Useful for bulk operations and optimizations.
    reset: function(models, options) {
      options = options ? _.clone(options) : {};
      for (var i = 0; i < this.models.length; i++) {
        this._removeReference(this.models[i], options);
      }
      options.previousModels = this.models;
      this._reset();
      models = this.add(models, _.extend({silent: true}, options));
      if (!options.silent) this.trigger('reset', this, options);
      return models;
    },

    // Add a model to the end of the collection.
    push: function(model, options) {
      return this.add(model, _.extend({at: this.length}, options));
    },

    // Remove a model from the end of the collection.
    pop: function(options) {
      var model = this.at(this.length - 1);
      return this.remove(model, options);
    },

    // Add a model to the beginning of the collection.
    unshift: function(model, options) {
      return this.add(model, _.extend({at: 0}, options));
    },

    // Remove a model from the beginning of the collection.
    shift: function(options) {
      var model = this.at(0);
      return this.remove(model, options);
    },

    // Slice out a sub-array of models from the collection.
    slice: function() {
      return slice.apply(this.models, arguments);
    },

    // Get a model from the set by id, cid, model object with id or cid
    // properties, or an attributes object that is transformed through modelId.
    get: function(obj) {
      if (obj == null) return void 0;
      return this._byId[obj] ||
        this._byId[this.modelId(obj.attributes || obj)] ||
        obj.cid && this._byId[obj.cid];
    },

    // Returns `true` if the model is in the collection.
    has: function(obj) {
      return this.get(obj) != null;
    },

    // Get the model at the given index.
    at: function(index) {
      if (index < 0) index += this.length;
      return this.models[index];
    },

    // Return models with matching attributes. Useful for simple cases of
    // `filter`.
    where: function(attrs, first) {
      return this[first ? 'find' : 'filter'](attrs);
    },

    // Return the first model with matching attributes. Useful for simple cases
    // of `find`.
    findWhere: function(attrs) {
      return this.where(attrs, true);
    },

    // Force the collection to re-sort itself. You don't need to call this under
    // normal circumstances, as the set will maintain sort order as each item
    // is added.
    sort: function(options) {
      var comparator = this.comparator;
      if (!comparator) throw new Error('Cannot sort a set without a comparator');
      options || (options = {});

      var length = comparator.length;
      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);

      // Run sort based on type of `comparator`.
      if (length === 1 || _.isString(comparator)) {
        this.models = this.sortBy(comparator);
      } else {
        this.models.sort(comparator);
      }
      if (!options.silent) this.trigger('sort', this, options);
      return this;
    },

    // Pluck an attribute from each model in the collection.
    pluck: function(attr) {
      return this.map(attr + '');
    },

    // Fetch the default set of models for this collection, resetting the
    // collection when they arrive. If `reset: true` is passed, the response
    // data will be passed through the `reset` method instead of `set`.
    fetch: function(options) {
      options = _.extend({parse: true}, options);
      var success = options.success;
      var collection = this;
      options.success = function(resp) {
        var method = options.reset ? 'reset' : 'set';
        collection[method](resp, options);
        if (success) success.call(options.context, collection, resp, options);
        collection.trigger('sync', collection, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Create a new instance of a model in this collection. Add the model to the
    // collection immediately, unless `wait: true` is passed, in which case we
    // wait for the server to agree.
    create: function(model, options) {
      options = options ? _.clone(options) : {};
      var wait = options.wait;
      model = this._prepareModel(model, options);
      if (!model) return false;
      if (!wait) this.add(model, options);
      var collection = this;
      var success = options.success;
      options.success = function(m, resp, callbackOpts) {
        if (wait) collection.add(m, callbackOpts);
        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);
      };
      model.save(null, options);
      return model;
    },

    // **parse** converts a response into a list of models to be added to the
    // collection. The default implementation is just to pass it through.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new collection with an identical list of models as this one.
    clone: function() {
      return new this.constructor(this.models, {
        model: this.model,
        comparator: this.comparator
      });
    },

    // Define how to uniquely identify models in the collection.
    modelId: function(attrs) {
      return attrs[this.model.prototype.idAttribute || 'id'];
    },

    // Private method to reset all internal state. Called when the collection
    // is first initialized or reset.
    _reset: function() {
      this.length = 0;
      this.models = [];
      this._byId  = {};
    },

    // Prepare a hash of attributes (or other model) to be added to this
    // collection.
    _prepareModel: function(attrs, options) {
      if (this._isModel(attrs)) {
        if (!attrs.collection) attrs.collection = this;
        return attrs;
      }
      options = options ? _.clone(options) : {};
      options.collection = this;
      var model = new this.model(attrs, options);
      if (!model.validationError) return model;
      this.trigger('invalid', this, model.validationError, options);
      return false;
    },

    // Internal method called by both remove and set.
    _removeModels: function(models, options) {
      var removed = [];
      for (var i = 0; i < models.length; i++) {
        var model = this.get(models[i]);
        if (!model) continue;

        var index = this.indexOf(model);
        this.models.splice(index, 1);
        this.length--;

        // Remove references before triggering 'remove' event to prevent an
        // infinite loop. #3693
        delete this._byId[model.cid];
        var id = this.modelId(model.attributes);
        if (id != null) delete this._byId[id];

        if (!options.silent) {
          options.index = index;
          model.trigger('remove', model, this, options);
        }

        removed.push(model);
        this._removeReference(model, options);
      }
      return removed;
    },

    // Method for checking whether an object should be considered a model for
    // the purposes of adding to the collection.
    _isModel: function(model) {
      return model instanceof Model;
    },

    // Internal method to create a model's ties to a collection.
    _addReference: function(model, options) {
      this._byId[model.cid] = model;
      var id = this.modelId(model.attributes);
      if (id != null) this._byId[id] = model;
      model.on('all', this._onModelEvent, this);
    },

    // Internal method to sever a model's ties to a collection.
    _removeReference: function(model, options) {
      delete this._byId[model.cid];
      var id = this.modelId(model.attributes);
      if (id != null) delete this._byId[id];
      if (this === model.collection) delete model.collection;
      model.off('all', this._onModelEvent, this);
    },

    // Internal method called every time a model in the set fires an event.
    // Sets need to update their indexes when models change ids. All other
    // events simply proxy through. "add" and "remove" events that originate
    // in other collections are ignored.
    _onModelEvent: function(event, model, collection, options) {
      if (model) {
        if ((event === 'add' || event === 'remove') && collection !== this) return;
        if (event === 'destroy') this.remove(model, options);
        if (event === 'change') {
          var prevId = this.modelId(model.previousAttributes());
          var id = this.modelId(model.attributes);
          if (prevId !== id) {
            if (prevId != null) delete this._byId[prevId];
            if (id != null) this._byId[id] = model;
          }
        }
      }
      this.trigger.apply(this, arguments);
    }

  });

  // Underscore methods that we want to implement on the Collection.
  // 90% of the core usefulness of Backbone Collections is actually implemented
  // right here:
  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,
      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,
      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,
      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,
      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,
      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,
      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,
      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};

  // Mix in each Underscore method as a proxy to `Collection#models`.
  addUnderscoreMethods(Collection, collectionMethods, 'models');

  // Backbone.View
  // -------------

  // Backbone Views are almost more convention than they are actual code. A View
  // is simply a JavaScript object that represents a logical chunk of UI in the
  // DOM. This might be a single item, an entire list, a sidebar or panel, or
  // even the surrounding frame which wraps your whole app. Defining a chunk of
  // UI as a **View** allows you to define your DOM events declaratively, without
  // having to worry about render order ... and makes it easy for the view to
  // react to specific changes in the state of your models.

  // Creating a Backbone.View creates its initial element outside of the DOM,
  // if an existing element is not provided...
  var View = Backbone.View = function(options) {
    this.cid = _.uniqueId('view');
    _.extend(this, _.pick(options, viewOptions));
    this._ensureElement();
    this.initialize.apply(this, arguments);
  };

  // Cached regex to split keys for `delegate`.
  var delegateEventSplitter = /^(\S+)\s*(.*)$/;

  // List of view options to be set as properties.
  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];

  // Set up all inheritable **Backbone.View** properties and methods.
  _.extend(View.prototype, Events, {

    // The default `tagName` of a View's element is `"div"`.
    tagName: 'div',

    // jQuery delegate for element lookup, scoped to DOM elements within the
    // current view. This should be preferred to global lookups where possible.
    $: function(selector) {
      return this.$el.find(selector);
    },

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // **render** is the core function that your view should override, in order
    // to populate its element (`this.el`), with the appropriate HTML. The
    // convention is for **render** to always return `this`.
    render: function() {
      return this;
    },

    // Remove this view by taking the element out of the DOM, and removing any
    // applicable Backbone.Events listeners.
    remove: function() {
      this._removeElement();
      this.stopListening();
      return this;
    },

    // Remove this view's element from the document and all event listeners
    // attached to it. Exposed for subclasses using an alternative DOM
    // manipulation API.
    _removeElement: function() {
      this.$el.remove();
    },

    // Change the view's element (`this.el` property) and re-delegate the
    // view's events on the new element.
    setElement: function(element) {
      this.undelegateEvents();
      this._setElement(element);
      this.delegateEvents();
      return this;
    },

    // Creates the `this.el` and `this.$el` references for this view using the
    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery
    // context or an element. Subclasses can override this to utilize an
    // alternative DOM manipulation API and are only required to set the
    // `this.el` property.
    _setElement: function(el) {
      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);
      this.el = this.$el[0];
    },

    // Set callbacks, where `this.events` is a hash of
    //
    // *{"event selector": "callback"}*
    //
    //     {
    //       'mousedown .title':  'edit',
    //       'click .button':     'save',
    //       'click .open':       function(e) { ... }
    //     }
    //
    // pairs. Callbacks will be bound to the view, with `this` set properly.
    // Uses event delegation for efficiency.
    // Omitting the selector binds the event to `this.el`.
    delegateEvents: function(events) {
      events || (events = _.result(this, 'events'));
      if (!events) return this;
      this.undelegateEvents();
      for (var key in events) {
        var method = events[key];
        if (!_.isFunction(method)) method = this[method];
        if (!method) continue;
        var match = key.match(delegateEventSplitter);
        this.delegate(match[1], match[2], _.bind(method, this));
      }
      return this;
    },

    // Add a single event listener to the view's element (or a child element
    // using `selector`). This only works for delegate-able events: not `focus`,
    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.
    delegate: function(eventName, selector, listener) {
      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);
      return this;
    },

    // Clears all callbacks previously bound to the view by `delegateEvents`.
    // You usually don't need to use this, but may wish to if you have multiple
    // Backbone views attached to the same DOM element.
    undelegateEvents: function() {
      if (this.$el) this.$el.off('.delegateEvents' + this.cid);
      return this;
    },

    // A finer-grained `undelegateEvents` for removing a single delegated event.
    // `selector` and `listener` are both optional.
    undelegate: function(eventName, selector, listener) {
      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);
      return this;
    },

    // Produces a DOM element to be assigned to your view. Exposed for
    // subclasses using an alternative DOM manipulation API.
    _createElement: function(tagName) {
      return document.createElement(tagName);
    },

    // Ensure that the View has a DOM element to render into.
    // If `this.el` is a string, pass it through `$()`, take the first
    // matching element, and re-assign it to `el`. Otherwise, create
    // an element from the `id`, `className` and `tagName` properties.
    _ensureElement: function() {
      if (!this.el) {
        var attrs = _.extend({}, _.result(this, 'attributes'));
        if (this.id) attrs.id = _.result(this, 'id');
        if (this.className) attrs['class'] = _.result(this, 'className');
        this.setElement(this._createElement(_.result(this, 'tagName')));
        this._setAttributes(attrs);
      } else {
        this.setElement(_.result(this, 'el'));
      }
    },

    // Set attributes from a hash on this view's element.  Exposed for
    // subclasses using an alternative DOM manipulation API.
    _setAttributes: function(attributes) {
      this.$el.attr(attributes);
    }

  });

  // Backbone.sync
  // -------------

  // Override this function to change the manner in which Backbone persists
  // models to the server. You will be passed the type of request, and the
  // model in question. By default, makes a RESTful Ajax request
  // to the model's `url()`. Some possible customizations could be:
  //
  // * Use `setTimeout` to batch rapid-fire updates into a single request.
  // * Send up the models as XML instead of JSON.
  // * Persist models via WebSockets instead of Ajax.
  //
  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
  // as `POST`, with a `_method` parameter containing the true HTTP method,
  // as well as all requests with the body as `application/x-www-form-urlencoded`
  // instead of `application/json` with the model in a param named `model`.
  // Useful when interfacing with server-side languages like **PHP** that make
  // it difficult to read the body of `PUT` requests.
  Backbone.sync = function(method, model, options) {
    var type = methodMap[method];

    // Default options, unless specified.
    _.defaults(options || (options = {}), {
      emulateHTTP: Backbone.emulateHTTP,
      emulateJSON: Backbone.emulateJSON
    });

    // Default JSON-request options.
    var params = {type: type, dataType: 'json'};

    // Ensure that we have a URL.
    if (!options.url) {
      params.url = _.result(model, 'url') || urlError();
    }

    // Ensure that we have the appropriate request data.
    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {
      params.contentType = 'application/json';
      params.data = JSON.stringify(options.attrs || model.toJSON(options));
    }

    // For older servers, emulate JSON by encoding the request into an HTML-form.
    if (options.emulateJSON) {
      params.contentType = 'application/x-www-form-urlencoded';
      params.data = params.data ? {model: params.data} : {};
    }

    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
    // And an `X-HTTP-Method-Override` header.
    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {
      params.type = 'POST';
      if (options.emulateJSON) params.data._method = type;
      var beforeSend = options.beforeSend;
      options.beforeSend = function(xhr) {
        xhr.setRequestHeader('X-HTTP-Method-Override', type);
        if (beforeSend) return beforeSend.apply(this, arguments);
      };
    }

    // Don't process data on a non-GET request.
    if (params.type !== 'GET' && !options.emulateJSON) {
      params.processData = false;
    }

    // Pass along `textStatus` and `errorThrown` from jQuery.
    var error = options.error;
    options.error = function(xhr, textStatus, errorThrown) {
      options.textStatus = textStatus;
      options.errorThrown = errorThrown;
      if (error) error.call(options.context, xhr, textStatus, errorThrown);
    };

    // Make the request, allowing the user to override any Ajax options.
    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));
    model.trigger('request', model, xhr, options);
    return xhr;
  };

  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
  var methodMap = {
    'create': 'POST',
    'update': 'PUT',
    'patch': 'PATCH',
    'delete': 'DELETE',
    'read': 'GET'
  };

  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.
  // Override this if you'd like to use a different library.
  Backbone.ajax = function() {
    return Backbone.$.ajax.apply(Backbone.$, arguments);
  };

  // Backbone.Router
  // ---------------

  // Routers map faux-URLs to actions, and fire events when routes are
  // matched. Creating a new one sets its `routes` hash, if not set statically.
  var Router = Backbone.Router = function(options) {
    options || (options = {});
    if (options.routes) this.routes = options.routes;
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };

  // Cached regular expressions for matching named param parts and splatted
  // parts of route strings.
  var optionalParam = /\((.*?)\)/g;
  var namedParam    = /(\(\?)?:\w+/g;
  var splatParam    = /\*\w+/g;
  var escapeRegExp  = /[\-{}\[\]+?.,\\\^$|#\s]/g;

  // Set up all inheritable **Backbone.Router** properties and methods.
  _.extend(Router.prototype, Events, {

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Manually bind a single named route to a callback. For example:
    //
    //     this.route('search/:query/p:num', 'search', function(query, num) {
    //       ...
    //     });
    //
    route: function(route, name, callback) {
      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
      if (_.isFunction(name)) {
        callback = name;
        name = '';
      }
      if (!callback) callback = this[name];
      var router = this;
      Backbone.history.route(route, function(fragment) {
        var args = router._extractParameters(route, fragment);
        if (router.execute(callback, args, name) !== false) {
          router.trigger.apply(router, ['route:' + name].concat(args));
          router.trigger('route', name, args);
          Backbone.history.trigger('route', router, name, args);
        }
      });
      return this;
    },

    // Execute a route handler with the provided parameters.  This is an
    // excellent place to do pre-route setup or post-route cleanup.
    execute: function(callback, args, name) {
      if (callback) callback.apply(this, args);
    },

    // Simple proxy to `Backbone.history` to save a fragment into the history.
    navigate: function(fragment, options) {
      Backbone.history.navigate(fragment, options);
      return this;
    },

    // Bind all defined routes to `Backbone.history`. We have to reverse the
    // order of the routes here to support behavior where the most general
    // routes can be defined at the bottom of the route map.
    _bindRoutes: function() {
      if (!this.routes) return;
      this.routes = _.result(this, 'routes');
      var route, routes = _.keys(this.routes);
      while ((route = routes.pop()) != null) {
        this.route(route, this.routes[route]);
      }
    },

    // Convert a route string into a regular expression, suitable for matching
    // against the current location hash.
    _routeToRegExp: function(route) {
      route = route.replace(escapeRegExp, '\\$&')
                   .replace(optionalParam, '(?:$1)?')
                   .replace(namedParam, function(match, optional) {
                     return optional ? match : '([^/?]+)';
                   })
                   .replace(splatParam, '([^?]*?)');
      return new RegExp('^' + route + '(?:\\?([\\s\\S]*))?$');
    },

    // Given a route, and a URL fragment that it matches, return the array of
    // extracted decoded parameters. Empty or unmatched parameters will be
    // treated as `null` to normalize cross-browser behavior.
    _extractParameters: function(route, fragment) {
      var params = route.exec(fragment).slice(1);
      return _.map(params, function(param, i) {
        // Don't decode the search params.
        if (i === params.length - 1) return param || null;
        return param ? decodeURIComponent(param) : null;
      });
    }

  });

  // Backbone.History
  // ----------------

  // Handles cross-browser history management, based on either
  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or
  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)
  // and URL fragments. If the browser supports neither (old IE, natch),
  // falls back to polling.
  var History = Backbone.History = function() {
    this.handlers = [];
    this.checkUrl = _.bind(this.checkUrl, this);

    // Ensure that `History` can be used outside of the browser.
    if (typeof window !== 'undefined') {
      this.location = window.location;
      this.history = window.history;
    }
  };

  // Cached regex for stripping a leading hash/slash and trailing space.
  var routeStripper = /^[#\/]|\s+$/g;

  // Cached regex for stripping leading and trailing slashes.
  var rootStripper = /^\/+|\/+$/g;

  // Cached regex for stripping urls of hash.
  var pathStripper = /#.*$/;

  // Has the history handling already been started?
  History.started = false;

  // Set up all inheritable **Backbone.History** properties and methods.
  _.extend(History.prototype, Events, {

    // The default interval to poll for hash changes, if necessary, is
    // twenty times a second.
    interval: 50,

    // Are we at the app root?
    atRoot: function() {
      var path = this.location.pathname.replace(/[^\/]$/, '$&/');
      return path === this.root && !this.getSearch();
    },

    // Does the pathname match the root?
    matchRoot: function() {
      var path = this.decodeFragment(this.location.pathname);
      var rootPath = path.slice(0, this.root.length - 1) + '/';
      return rootPath === this.root;
    },

    // Unicode characters in `location.pathname` are percent encoded so they're
    // decoded for comparison. `%25` should not be decoded since it may be part
    // of an encoded parameter.
    decodeFragment: function(fragment) {
      return decodeURI(fragment.replace(/%25/g, '%2525'));
    },

    // In IE6, the hash fragment and search params are incorrect if the
    // fragment contains `?`.
    getSearch: function() {
      var match = this.location.href.replace(/#.*/, '').match(/\?.+/);
      return match ? match[0] : '';
    },

    // Gets the true hash value. Cannot use location.hash directly due to bug
    // in Firefox where location.hash will always be decoded.
    getHash: function(window) {
      var match = (window || this).location.href.match(/#(.*)$/);
      return match ? match[1] : '';
    },

    // Get the pathname and search params, without the root.
    getPath: function() {
      var path = this.decodeFragment(
        this.location.pathname + this.getSearch()
      ).slice(this.root.length - 1);
      return path.charAt(0) === '/' ? path.slice(1) : path;
    },

    // Get the cross-browser normalized URL fragment from the path or hash.
    getFragment: function(fragment) {
      if (fragment == null) {
        if (this._usePushState || !this._wantsHashChange) {
          fragment = this.getPath();
        } else {
          fragment = this.getHash();
        }
      }
      return fragment.replace(routeStripper, '');
    },

    // Start the hash change handling, returning `true` if the current URL matches
    // an existing route, and `false` otherwise.
    start: function(options) {
      if (History.started) throw new Error('Backbone.history has already been started');
      History.started = true;

      // Figure out the initial configuration. Do we need an iframe?
      // Is pushState desired ... is it available?
      this.options          = _.extend({root: '/'}, this.options, options);
      this.root             = this.options.root;
      this._wantsHashChange = this.options.hashChange !== false;
      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);
      this._useHashChange   = this._wantsHashChange && this._hasHashChange;
      this._wantsPushState  = !!this.options.pushState;
      this._hasPushState    = !!(this.history && this.history.pushState);
      this._usePushState    = this._wantsPushState && this._hasPushState;
      this.fragment         = this.getFragment();

      // Normalize root to always include a leading and trailing slash.
      this.root = ('/' + this.root + '/').replace(rootStripper, '/');

      // Transition from hashChange to pushState or vice versa if both are
      // requested.
      if (this._wantsHashChange && this._wantsPushState) {

        // If we've started off with a route from a `pushState`-enabled
        // browser, but we're currently in a browser that doesn't support it...
        if (!this._hasPushState && !this.atRoot()) {
          var rootPath = this.root.slice(0, -1) || '/';
          this.location.replace(rootPath + '#' + this.getPath());
          // Return immediately as browser will do redirect to new url
          return true;

        // Or if we've started out with a hash-based route, but we're currently
        // in a browser where it could be `pushState`-based instead...
        } else if (this._hasPushState && this.atRoot()) {
          this.navigate(this.getHash(), {replace: true});
        }

      }

      // Proxy an iframe to handle location events if the browser doesn't
      // support the `hashchange` event, HTML5 history, or the user wants
      // `hashChange` but not `pushState`.
      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
        this.iframe = document.createElement('iframe');
        this.iframe.src = 'javascript:0';
        this.iframe.style.display = 'none';
        this.iframe.tabIndex = -1;
        var body = document.body;
        // Using `appendChild` will throw on IE < 9 if the document is not ready.
        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;
        iWindow.document.open();
        iWindow.document.close();
        iWindow.location.hash = '#' + this.fragment;
      }

      // Add a cross-platform `addEventListener` shim for older browsers.
      var addEventListener = window.addEventListener || function(eventName, listener) {
        return attachEvent('on' + eventName, listener);
      };

      // Depending on whether we're using pushState or hashes, and whether
      // 'onhashchange' is supported, determine how we check the URL state.
      if (this._usePushState) {
        addEventListener('popstate', this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        addEventListener('hashchange', this.checkUrl, false);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
      }

      if (!this.options.silent) return this.loadUrl();
    },

    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
    // but possibly useful for unit testing Routers.
    stop: function() {
      // Add a cross-platform `removeEventListener` shim for older browsers.
      var removeEventListener = window.removeEventListener || function(eventName, listener) {
        return detachEvent('on' + eventName, listener);
      };

      // Remove window listeners.
      if (this._usePushState) {
        removeEventListener('popstate', this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        removeEventListener('hashchange', this.checkUrl, false);
      }

      // Clean up the iframe if necessary.
      if (this.iframe) {
        document.body.removeChild(this.iframe);
        this.iframe = null;
      }

      // Some environments will throw when clearing an undefined interval.
      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);
      History.started = false;
    },

    // Add a route to be tested when the fragment changes. Routes added later
    // may override previous routes.
    route: function(route, callback) {
      this.handlers.unshift({route: route, callback: callback});
    },

    // Checks the current URL to see if it has changed, and if it has,
    // calls `loadUrl`, normalizing across the hidden iframe.
    checkUrl: function(e) {
      var current = this.getFragment();

      // If the user pressed the back button, the iframe's hash will have
      // changed and we should use that for comparison.
      if (current === this.fragment && this.iframe) {
        current = this.getHash(this.iframe.contentWindow);
      }

      if (current === this.fragment) return false;
      if (this.iframe) this.navigate(current);
      this.loadUrl();
    },

    // Attempt to load the current URL fragment. If a route succeeds with a
    // match, returns `true`. If no defined routes matches the fragment,
    // returns `false`.
    loadUrl: function(fragment) {
      // If the root doesn't match, no routes can match either.
      if (!this.matchRoot()) return false;
      fragment = this.fragment = this.getFragment(fragment);
      return _.some(this.handlers, function(handler) {
        if (handler.route.test(fragment)) {
          handler.callback(fragment);
          return true;
        }
      });
    },

    // Save a fragment into the hash history, or replace the URL state if the
    // 'replace' option is passed. You are responsible for properly URL-encoding
    // the fragment in advance.
    //
    // The options object can contain `trigger: true` if you wish to have the
    // route callback be fired (not usually desirable), or `replace: true`, if
    // you wish to modify the current URL without adding an entry to the history.
    navigate: function(fragment, options) {
      if (!History.started) return false;
      if (!options || options === true) options = {trigger: !!options};

      // Normalize the fragment.
      fragment = this.getFragment(fragment || '');

      // Don't include a trailing slash on the root.
      var rootPath = this.root;
      if (fragment === '' || fragment.charAt(0) === '?') {
        rootPath = rootPath.slice(0, -1) || '/';
      }
      var url = rootPath + fragment;

      // Strip the hash and decode for matching.
      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));

      if (this.fragment === fragment) return;
      this.fragment = fragment;

      // If pushState is available, we use it to set the fragment as a real URL.
      if (this._usePushState) {
        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);

      // If hash changes haven't been explicitly disabled, update the hash
      // fragment to store history.
      } else if (this._wantsHashChange) {
        this._updateHash(this.location, fragment, options.replace);
        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {
          var iWindow = this.iframe.contentWindow;

          // Opening and closing the iframe tricks IE7 and earlier to push a
          // history entry on hash-tag change.  When replace is true, we don't
          // want this.
          if (!options.replace) {
            iWindow.document.open();
            iWindow.document.close();
          }

          this._updateHash(iWindow.location, fragment, options.replace);
        }

      // If you've told us that you explicitly don't want fallback hashchange-
      // based history, then `navigate` becomes a page refresh.
      } else {
        return this.location.assign(url);
      }
      if (options.trigger) return this.loadUrl(fragment);
    },

    // Update the hash location, either replacing the current entry, or adding
    // a new one to the browser history.
    _updateHash: function(location, fragment, replace) {
      if (replace) {
        var href = location.href.replace(/(javascript:|#).*$/, '');
        location.replace(href + '#' + fragment);
      } else {
        // Some browsers require that `hash` contains a leading #.
        location.hash = '#' + fragment;
      }
    }

  });

  // Create the default Backbone.history.
  Backbone.history = new History;

  // Helpers
  // -------

  // Helper function to correctly set up the prototype chain for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var extend = function(protoProps, staticProps) {
    var parent = this;
    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call the parent constructor.
    if (protoProps && _.has(protoProps, 'constructor')) {
      child = protoProps.constructor;
    } else {
      child = function(){ return parent.apply(this, arguments); };
    }

    // Add static properties to the constructor function, if supplied.
    _.extend(child, parent, staticProps);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent`'s constructor function and add the prototype properties.
    child.prototype = _.create(parent.prototype, protoProps);
    child.prototype.constructor = child;

    // Set a convenience property in case the parent's prototype is needed
    // later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Set up inheritance for the model, collection, router, view and history.
  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;

  // Throw an error when a URL is needed, and none is supplied.
  var urlError = function() {
    throw new Error('A "url" property or function must be specified');
  };

  // Wrap an optional error callback with a fallback error event.
  var wrapError = function(model, options) {
    var error = options.error;
    options.error = function(resp) {
      if (error) error.call(options.context, model, resp, options);
      model.trigger('error', model, resp, options);
    };
  };

  return Backbone;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(108)))

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 * jQuery File Upload Plugin
 * https://github.com/blueimp/jQuery-File-Upload
 *
 * Copyright 2010, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/MIT
 */

/* jshint nomen:false */
/* global define, require, window, document, location, Blob, FormData */

;(function (factory) {
    'use strict';
    if (true) {
        // Register as an anonymous AMD module:
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
            __webpack_require__(2),
            __webpack_require__(107)
        ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else if (typeof exports === 'object') {
        // Node/CommonJS:
        factory(
            require('jquery'),
            require('./vendor/jquery.ui.widget')
        );
    } else {
        // Browser globals:
        factory(window.jQuery);
    }
}(function ($) {
    'use strict';

    // Detect file input support, based on
    // http://viljamis.com/blog/2012/file-upload-support-on-mobile/
    $.support.fileInput = !(new RegExp(
        // Handle devices which give false positives for the feature detection:
        '(Android (1\\.[0156]|2\\.[01]))' +
            '|(Windows Phone (OS 7|8\\.0))|(XBLWP)|(ZuneWP)|(WPDesktop)' +
            '|(w(eb)?OSBrowser)|(webOS)' +
            '|(Kindle/(1\\.0|2\\.[05]|3\\.0))'
    ).test(window.navigator.userAgent) ||
        // Feature detection for all other devices:
        $('<input type="file">').prop('disabled'));

    // The FileReader API is not actually used, but works as feature detection,
    // as some Safari versions (5?) support XHR file uploads via the FormData API,
    // but not non-multipart XHR file uploads.
    // window.XMLHttpRequestUpload is not available on IE10, so we check for
    // window.ProgressEvent instead to detect XHR2 file upload capability:
    $.support.xhrFileUpload = !!(window.ProgressEvent && window.FileReader);
    $.support.xhrFormDataFileUpload = !!window.FormData;

    // Detect support for Blob slicing (required for chunked uploads):
    $.support.blobSlice = window.Blob && (Blob.prototype.slice ||
        Blob.prototype.webkitSlice || Blob.prototype.mozSlice);

    // Helper function to create drag handlers for dragover/dragenter/dragleave:
    function getDragHandler(type) {
        var isDragOver = type === 'dragover';
        return function (e) {
            e.dataTransfer = e.originalEvent && e.originalEvent.dataTransfer;
            var dataTransfer = e.dataTransfer;
            if (dataTransfer && $.inArray('Files', dataTransfer.types) !== -1 &&
                    this._trigger(
                        type,
                        $.Event(type, {delegatedEvent: e})
                    ) !== false) {
                e.preventDefault();
                if (isDragOver) {
                    dataTransfer.dropEffect = 'copy';
                }
            }
        };
    }

    // The fileupload widget listens for change events on file input fields defined
    // via fileInput setting and paste or drop events of the given dropZone.
    // In addition to the default jQuery Widget methods, the fileupload widget
    // exposes the "add" and "send" methods, to add or directly send files using
    // the fileupload API.
    // By default, files added via file input selection, paste, drag & drop or
    // "add" method are uploaded immediately, but it is possible to override
    // the "add" callback option to queue file uploads.
    $.widget('blueimp.fileupload', {

        options: {
            // The drop target element(s), by the default the complete document.
            // Set to null to disable drag & drop support:
            dropZone: $(document),
            // The paste target element(s), by the default undefined.
            // Set to a DOM node or jQuery object to enable file pasting:
            pasteZone: undefined,
            // The file input field(s), that are listened to for change events.
            // If undefined, it is set to the file input fields inside
            // of the widget element on plugin initialization.
            // Set to null to disable the change listener.
            fileInput: undefined,
            // By default, the file input field is replaced with a clone after
            // each input field change event. This is required for iframe transport
            // queues and allows change events to be fired for the same file
            // selection, but can be disabled by setting the following option to false:
            replaceFileInput: true,
            // The parameter name for the file form data (the request argument name).
            // If undefined or empty, the name property of the file input field is
            // used, or "files[]" if the file input name property is also empty,
            // can be a string or an array of strings:
            paramName: undefined,
            // By default, each file of a selection is uploaded using an individual
            // request for XHR type uploads. Set to false to upload file
            // selections in one request each:
            singleFileUploads: true,
            // To limit the number of files uploaded with one XHR request,
            // set the following option to an integer greater than 0:
            limitMultiFileUploads: undefined,
            // The following option limits the number of files uploaded with one
            // XHR request to keep the request size under or equal to the defined
            // limit in bytes:
            limitMultiFileUploadSize: undefined,
            // Multipart file uploads add a number of bytes to each uploaded file,
            // therefore the following option adds an overhead for each file used
            // in the limitMultiFileUploadSize configuration:
            limitMultiFileUploadSizeOverhead: 512,
            // Set the following option to true to issue all file upload requests
            // in a sequential order:
            sequentialUploads: false,
            // To limit the number of concurrent uploads,
            // set the following option to an integer greater than 0:
            limitConcurrentUploads: undefined,
            // Set the following option to true to force iframe transport uploads:
            forceIframeTransport: false,
            // Set the following option to the location of a redirect url on the
            // origin server, for cross-domain iframe transport uploads:
            redirect: undefined,
            // The parameter name for the redirect url, sent as part of the form
            // data and set to 'redirect' if this option is empty:
            redirectParamName: undefined,
            // Set the following option to the location of a postMessage window,
            // to enable postMessage transport uploads:
            postMessage: undefined,
            // By default, XHR file uploads are sent as multipart/form-data.
            // The iframe transport is always using multipart/form-data.
            // Set to false to enable non-multipart XHR uploads:
            multipart: true,
            // To upload large files in smaller chunks, set the following option
            // to a preferred maximum chunk size. If set to 0, null or undefined,
            // or the browser does not support the required Blob API, files will
            // be uploaded as a whole.
            maxChunkSize: undefined,
            // When a non-multipart upload or a chunked multipart upload has been
            // aborted, this option can be used to resume the upload by setting
            // it to the size of the already uploaded bytes. This option is most
            // useful when modifying the options object inside of the "add" or
            // "send" callbacks, as the options are cloned for each file upload.
            uploadedBytes: undefined,
            // By default, failed (abort or error) file uploads are removed from the
            // global progress calculation. Set the following option to false to
            // prevent recalculating the global progress data:
            recalculateProgress: true,
            // Interval in milliseconds to calculate and trigger progress events:
            progressInterval: 100,
            // Interval in milliseconds to calculate progress bitrate:
            bitrateInterval: 500,
            // By default, uploads are started automatically when adding files:
            autoUpload: true,

            // Error and info messages:
            messages: {
                uploadedBytes: 'Uploaded bytes exceed file size'
            },

            // Translation function, gets the message key to be translated
            // and an object with context specific data as arguments:
            i18n: function (message, context) {
                message = this.messages[message] || message.toString();
                if (context) {
                    $.each(context, function (key, value) {
                        message = message.replace('{' + key + '}', value);
                    });
                }
                return message;
            },

            // Additional form data to be sent along with the file uploads can be set
            // using this option, which accepts an array of objects with name and
            // value properties, a function returning such an array, a FormData
            // object (for XHR file uploads), or a simple object.
            // The form of the first fileInput is given as parameter to the function:
            formData: function (form) {
                return form.serializeArray();
            },

            // The add callback is invoked as soon as files are added to the fileupload
            // widget (via file input selection, drag & drop, paste or add API call).
            // If the singleFileUploads option is enabled, this callback will be
            // called once for each file in the selection for XHR file uploads, else
            // once for each file selection.
            //
            // The upload starts when the submit method is invoked on the data parameter.
            // The data object contains a files property holding the added files
            // and allows you to override plugin options as well as define ajax settings.
            //
            // Listeners for this callback can also be bound the following way:
            // .bind('fileuploadadd', func);
            //
            // data.submit() returns a Promise object and allows to attach additional
            // handlers using jQuery's Deferred callbacks:
            // data.submit().done(func).fail(func).always(func);
            add: function (e, data) {
                if (e.isDefaultPrevented()) {
                    return false;
                }
                if (data.autoUpload || (data.autoUpload !== false &&
                        $(this).fileupload('option', 'autoUpload'))) {
                    data.process().done(function () {
                        data.submit();
                    });
                }
            },

            // Other callbacks:

            // Callback for the submit event of each file upload:
            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);

            // Callback for the start of each file upload request:
            // send: function (e, data) {}, // .bind('fileuploadsend', func);

            // Callback for successful uploads:
            // done: function (e, data) {}, // .bind('fileuploaddone', func);

            // Callback for failed (abort or error) uploads:
            // fail: function (e, data) {}, // .bind('fileuploadfail', func);

            // Callback for completed (success, abort or error) requests:
            // always: function (e, data) {}, // .bind('fileuploadalways', func);

            // Callback for upload progress events:
            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);

            // Callback for global upload progress events:
            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);

            // Callback for uploads start, equivalent to the global ajaxStart event:
            // start: function (e) {}, // .bind('fileuploadstart', func);

            // Callback for uploads stop, equivalent to the global ajaxStop event:
            // stop: function (e) {}, // .bind('fileuploadstop', func);

            // Callback for change events of the fileInput(s):
            // change: function (e, data) {}, // .bind('fileuploadchange', func);

            // Callback for paste events to the pasteZone(s):
            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);

            // Callback for drop events of the dropZone(s):
            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);

            // Callback for dragover events of the dropZone(s):
            // dragover: function (e) {}, // .bind('fileuploaddragover', func);

            // Callback for the start of each chunk upload request:
            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);

            // Callback for successful chunk uploads:
            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);

            // Callback for failed (abort or error) chunk uploads:
            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);

            // Callback for completed (success, abort or error) chunk upload requests:
            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);

            // The plugin options are used as settings object for the ajax calls.
            // The following are jQuery ajax settings required for the file uploads:
            processData: false,
            contentType: false,
            cache: false,
            timeout: 0
        },

        // A list of options that require reinitializing event listeners and/or
        // special initialization code:
        _specialOptions: [
            'fileInput',
            'dropZone',
            'pasteZone',
            'multipart',
            'forceIframeTransport'
        ],

        _blobSlice: $.support.blobSlice && function () {
            var slice = this.slice || this.webkitSlice || this.mozSlice;
            return slice.apply(this, arguments);
        },

        _BitrateTimer: function () {
            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());
            this.loaded = 0;
            this.bitrate = 0;
            this.getBitrate = function (now, loaded, interval) {
                var timeDiff = now - this.timestamp;
                if (!this.bitrate || !interval || timeDiff > interval) {
                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;
                    this.loaded = loaded;
                    this.timestamp = now;
                }
                return this.bitrate;
            };
        },

        _isXHRUpload: function (options) {
            return !options.forceIframeTransport &&
                ((!options.multipart && $.support.xhrFileUpload) ||
                $.support.xhrFormDataFileUpload);
        },

        _getFormData: function (options) {
            var formData;
            if ($.type(options.formData) === 'function') {
                return options.formData(options.form);
            }
            if ($.isArray(options.formData)) {
                return options.formData;
            }
            if ($.type(options.formData) === 'object') {
                formData = [];
                $.each(options.formData, function (name, value) {
                    formData.push({name: name, value: value});
                });
                return formData;
            }
            return [];
        },

        _getTotal: function (files) {
            var total = 0;
            $.each(files, function (index, file) {
                total += file.size || 1;
            });
            return total;
        },

        _initProgressObject: function (obj) {
            var progress = {
                loaded: 0,
                total: 0,
                bitrate: 0
            };
            if (obj._progress) {
                $.extend(obj._progress, progress);
            } else {
                obj._progress = progress;
            }
        },

        _initResponseObject: function (obj) {
            var prop;
            if (obj._response) {
                for (prop in obj._response) {
                    if (obj._response.hasOwnProperty(prop)) {
                        delete obj._response[prop];
                    }
                }
            } else {
                obj._response = {};
            }
        },

        _onProgress: function (e, data) {
            if (e.lengthComputable) {
                var now = ((Date.now) ? Date.now() : (new Date()).getTime()),
                    loaded;
                if (data._time && data.progressInterval &&
                        (now - data._time < data.progressInterval) &&
                        e.loaded !== e.total) {
                    return;
                }
                data._time = now;
                loaded = Math.floor(
                    e.loaded / e.total * (data.chunkSize || data._progress.total)
                ) + (data.uploadedBytes || 0);
                // Add the difference from the previously loaded state
                // to the global loaded counter:
                this._progress.loaded += (loaded - data._progress.loaded);
                this._progress.bitrate = this._bitrateTimer.getBitrate(
                    now,
                    this._progress.loaded,
                    data.bitrateInterval
                );
                data._progress.loaded = data.loaded = loaded;
                data._progress.bitrate = data.bitrate = data._bitrateTimer.getBitrate(
                    now,
                    loaded,
                    data.bitrateInterval
                );
                // Trigger a custom progress event with a total data property set
                // to the file size(s) of the current upload and a loaded data
                // property calculated accordingly:
                this._trigger(
                    'progress',
                    $.Event('progress', {delegatedEvent: e}),
                    data
                );
                // Trigger a global progress event for all current file uploads,
                // including ajax calls queued for sequential file uploads:
                this._trigger(
                    'progressall',
                    $.Event('progressall', {delegatedEvent: e}),
                    this._progress
                );
            }
        },

        _initProgressListener: function (options) {
            var that = this,
                xhr = options.xhr ? options.xhr() : $.ajaxSettings.xhr();
            // Accesss to the native XHR object is required to add event listeners
            // for the upload progress event:
            if (xhr.upload) {
                $(xhr.upload).bind('progress', function (e) {
                    var oe = e.originalEvent;
                    // Make sure the progress event properties get copied over:
                    e.lengthComputable = oe.lengthComputable;
                    e.loaded = oe.loaded;
                    e.total = oe.total;
                    that._onProgress(e, options);
                });
                options.xhr = function () {
                    return xhr;
                };
            }
        },

        _isInstanceOf: function (type, obj) {
            // Cross-frame instanceof check
            return Object.prototype.toString.call(obj) === '[object ' + type + ']';
        },

        _initXHRData: function (options) {
            var that = this,
                formData,
                file = options.files[0],
                // Ignore non-multipart setting if not supported:
                multipart = options.multipart || !$.support.xhrFileUpload,
                paramName = $.type(options.paramName) === 'array' ?
                    options.paramName[0] : options.paramName;
            options.headers = $.extend({}, options.headers);
            if (options.contentRange) {
                options.headers['Content-Range'] = options.contentRange;
            }
            if (!multipart || options.blob || !this._isInstanceOf('File', file)) {
                options.headers['Content-Disposition'] = 'attachment; filename="' +
                    encodeURI(file.name) + '"';
            }
            if (!multipart) {
                options.contentType = file.type || 'application/octet-stream';
                options.data = options.blob || file;
            } else if ($.support.xhrFormDataFileUpload) {
                if (options.postMessage) {
                    // window.postMessage does not allow sending FormData
                    // objects, so we just add the File/Blob objects to
                    // the formData array and let the postMessage window
                    // create the FormData object out of this array:
                    formData = this._getFormData(options);
                    if (options.blob) {
                        formData.push({
                            name: paramName,
                            value: options.blob
                        });
                    } else {
                        $.each(options.files, function (index, file) {
                            formData.push({
                                name: ($.type(options.paramName) === 'array' &&
                                    options.paramName[index]) || paramName,
                                value: file
                            });
                        });
                    }
                } else {
                    if (that._isInstanceOf('FormData', options.formData)) {
                        formData = options.formData;
                    } else {
                        formData = new FormData();
                        $.each(this._getFormData(options), function (index, field) {
                            formData.append(field.name, field.value);
                        });
                    }
                    if (options.blob) {
                        formData.append(paramName, options.blob, file.name);
                    } else {
                        $.each(options.files, function (index, file) {
                            // This check allows the tests to run with
                            // dummy objects:
                            if (that._isInstanceOf('File', file) ||
                                    that._isInstanceOf('Blob', file)) {
                                formData.append(
                                    ($.type(options.paramName) === 'array' &&
                                        options.paramName[index]) || paramName,
                                    file,
                                    file.uploadName || file.name
                                );
                            }
                        });
                    }
                }
                options.data = formData;
            }
            // Blob reference is not needed anymore, free memory:
            options.blob = null;
        },

        _initIframeSettings: function (options) {
            var targetHost = $('<a></a>').prop('href', options.url).prop('host');
            // Setting the dataType to iframe enables the iframe transport:
            options.dataType = 'iframe ' + (options.dataType || '');
            // The iframe transport accepts a serialized array as form data:
            options.formData = this._getFormData(options);
            // Add redirect url to form data on cross-domain uploads:
            if (options.redirect && targetHost && targetHost !== location.host) {
                options.formData.push({
                    name: options.redirectParamName || 'redirect',
                    value: options.redirect
                });
            }
        },

        _initDataSettings: function (options) {
            if (this._isXHRUpload(options)) {
                if (!this._chunkedUpload(options, true)) {
                    if (!options.data) {
                        this._initXHRData(options);
                    }
                    this._initProgressListener(options);
                }
                if (options.postMessage) {
                    // Setting the dataType to postmessage enables the
                    // postMessage transport:
                    options.dataType = 'postmessage ' + (options.dataType || '');
                }
            } else {
                this._initIframeSettings(options);
            }
        },

        _getParamName: function (options) {
            var fileInput = $(options.fileInput),
                paramName = options.paramName;
            if (!paramName) {
                paramName = [];
                fileInput.each(function () {
                    var input = $(this),
                        name = input.prop('name') || 'files[]',
                        i = (input.prop('files') || [1]).length;
                    while (i) {
                        paramName.push(name);
                        i -= 1;
                    }
                });
                if (!paramName.length) {
                    paramName = [fileInput.prop('name') || 'files[]'];
                }
            } else if (!$.isArray(paramName)) {
                paramName = [paramName];
            }
            return paramName;
        },

        _initFormSettings: function (options) {
            // Retrieve missing options from the input field and the
            // associated form, if available:
            if (!options.form || !options.form.length) {
                options.form = $(options.fileInput.prop('form'));
                // If the given file input doesn't have an associated form,
                // use the default widget file input's form:
                if (!options.form.length) {
                    options.form = $(this.options.fileInput.prop('form'));
                }
            }
            options.paramName = this._getParamName(options);
            if (!options.url) {
                options.url = options.form.prop('action') || location.href;
            }
            // The HTTP request method must be "POST" or "PUT":
            options.type = (options.type ||
                ($.type(options.form.prop('method')) === 'string' &&
                    options.form.prop('method')) || ''
                ).toUpperCase();
            if (options.type !== 'POST' && options.type !== 'PUT' &&
                    options.type !== 'PATCH') {
                options.type = 'POST';
            }
            if (!options.formAcceptCharset) {
                options.formAcceptCharset = options.form.attr('accept-charset');
            }
        },

        _getAJAXSettings: function (data) {
            var options = $.extend({}, this.options, data);
            this._initFormSettings(options);
            this._initDataSettings(options);
            return options;
        },

        // jQuery 1.6 doesn't provide .state(),
        // while jQuery 1.8+ removed .isRejected() and .isResolved():
        _getDeferredState: function (deferred) {
            if (deferred.state) {
                return deferred.state();
            }
            if (deferred.isResolved()) {
                return 'resolved';
            }
            if (deferred.isRejected()) {
                return 'rejected';
            }
            return 'pending';
        },

        // Maps jqXHR callbacks to the equivalent
        // methods of the given Promise object:
        _enhancePromise: function (promise) {
            promise.success = promise.done;
            promise.error = promise.fail;
            promise.complete = promise.always;
            return promise;
        },

        // Creates and returns a Promise object enhanced with
        // the jqXHR methods abort, success, error and complete:
        _getXHRPromise: function (resolveOrReject, context, args) {
            var dfd = $.Deferred(),
                promise = dfd.promise();
            context = context || this.options.context || promise;
            if (resolveOrReject === true) {
                dfd.resolveWith(context, args);
            } else if (resolveOrReject === false) {
                dfd.rejectWith(context, args);
            }
            promise.abort = dfd.promise;
            return this._enhancePromise(promise);
        },

        // Adds convenience methods to the data callback argument:
        _addConvenienceMethods: function (e, data) {
            var that = this,
                getPromise = function (args) {
                    return $.Deferred().resolveWith(that, args).promise();
                };
            data.process = function (resolveFunc, rejectFunc) {
                if (resolveFunc || rejectFunc) {
                    data._processQueue = this._processQueue =
                        (this._processQueue || getPromise([this])).then(
                            function () {
                                if (data.errorThrown) {
                                    return $.Deferred()
                                        .rejectWith(that, [data]).promise();
                                }
                                return getPromise(arguments);
                            }
                        ).then(resolveFunc, rejectFunc);
                }
                return this._processQueue || getPromise([this]);
            };
            data.submit = function () {
                if (this.state() !== 'pending') {
                    data.jqXHR = this.jqXHR =
                        (that._trigger(
                            'submit',
                            $.Event('submit', {delegatedEvent: e}),
                            this
                        ) !== false) && that._onSend(e, this);
                }
                return this.jqXHR || that._getXHRPromise();
            };
            data.abort = function () {
                if (this.jqXHR) {
                    return this.jqXHR.abort();
                }
                this.errorThrown = 'abort';
                that._trigger('fail', null, this);
                return that._getXHRPromise(false);
            };
            data.state = function () {
                if (this.jqXHR) {
                    return that._getDeferredState(this.jqXHR);
                }
                if (this._processQueue) {
                    return that._getDeferredState(this._processQueue);
                }
            };
            data.processing = function () {
                return !this.jqXHR && this._processQueue && that
                    ._getDeferredState(this._processQueue) === 'pending';
            };
            data.progress = function () {
                return this._progress;
            };
            data.response = function () {
                return this._response;
            };
        },

        // Parses the Range header from the server response
        // and returns the uploaded bytes:
        _getUploadedBytes: function (jqXHR) {
            var range = jqXHR.getResponseHeader('Range'),
                parts = range && range.split('-'),
                upperBytesPos = parts && parts.length > 1 &&
                    parseInt(parts[1], 10);
            return upperBytesPos && upperBytesPos + 1;
        },

        // Uploads a file in multiple, sequential requests
        // by splitting the file up in multiple blob chunks.
        // If the second parameter is true, only tests if the file
        // should be uploaded in chunks, but does not invoke any
        // upload requests:
        _chunkedUpload: function (options, testOnly) {
            options.uploadedBytes = options.uploadedBytes || 0;
            var that = this,
                file = options.files[0],
                fs = file.size,
                ub = options.uploadedBytes,
                mcs = options.maxChunkSize || fs,
                slice = this._blobSlice,
                dfd = $.Deferred(),
                promise = dfd.promise(),
                jqXHR,
                upload;
            if (!(this._isXHRUpload(options) && slice && (ub || mcs < fs)) ||
                    options.data) {
                return false;
            }
            if (testOnly) {
                return true;
            }
            if (ub >= fs) {
                file.error = options.i18n('uploadedBytes');
                return this._getXHRPromise(
                    false,
                    options.context,
                    [null, 'error', file.error]
                );
            }
            // The chunk upload method:
            upload = function () {
                // Clone the options object for each chunk upload:
                var o = $.extend({}, options),
                    currentLoaded = o._progress.loaded;
                o.blob = slice.call(
                    file,
                    ub,
                    ub + mcs,
                    file.type
                );
                // Store the current chunk size, as the blob itself
                // will be dereferenced after data processing:
                o.chunkSize = o.blob.size;
                // Expose the chunk bytes position range:
                o.contentRange = 'bytes ' + ub + '-' +
                    (ub + o.chunkSize - 1) + '/' + fs;
                // Process the upload data (the blob and potential form data):
                that._initXHRData(o);
                // Add progress listeners for this chunk upload:
                that._initProgressListener(o);
                jqXHR = ((that._trigger('chunksend', null, o) !== false && $.ajax(o)) ||
                        that._getXHRPromise(false, o.context))
                    .done(function (result, textStatus, jqXHR) {
                        ub = that._getUploadedBytes(jqXHR) ||
                            (ub + o.chunkSize);
                        // Create a progress event if no final progress event
                        // with loaded equaling total has been triggered
                        // for this chunk:
                        if (currentLoaded + o.chunkSize - o._progress.loaded) {
                            that._onProgress($.Event('progress', {
                                lengthComputable: true,
                                loaded: ub - o.uploadedBytes,
                                total: ub - o.uploadedBytes
                            }), o);
                        }
                        options.uploadedBytes = o.uploadedBytes = ub;
                        o.result = result;
                        o.textStatus = textStatus;
                        o.jqXHR = jqXHR;
                        that._trigger('chunkdone', null, o);
                        that._trigger('chunkalways', null, o);
                        if (ub < fs) {
                            // File upload not yet complete,
                            // continue with the next chunk:
                            upload();
                        } else {
                            dfd.resolveWith(
                                o.context,
                                [result, textStatus, jqXHR]
                            );
                        }
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        o.jqXHR = jqXHR;
                        o.textStatus = textStatus;
                        o.errorThrown = errorThrown;
                        that._trigger('chunkfail', null, o);
                        that._trigger('chunkalways', null, o);
                        dfd.rejectWith(
                            o.context,
                            [jqXHR, textStatus, errorThrown]
                        );
                    });
            };
            this._enhancePromise(promise);
            promise.abort = function () {
                return jqXHR.abort();
            };
            upload();
            return promise;
        },

        _beforeSend: function (e, data) {
            if (this._active === 0) {
                // the start callback is triggered when an upload starts
                // and no other uploads are currently running,
                // equivalent to the global ajaxStart event:
                this._trigger('start');
                // Set timer for global bitrate progress calculation:
                this._bitrateTimer = new this._BitrateTimer();
                // Reset the global progress values:
                this._progress.loaded = this._progress.total = 0;
                this._progress.bitrate = 0;
            }
            // Make sure the container objects for the .response() and
            // .progress() methods on the data object are available
            // and reset to their initial state:
            this._initResponseObject(data);
            this._initProgressObject(data);
            data._progress.loaded = data.loaded = data.uploadedBytes || 0;
            data._progress.total = data.total = this._getTotal(data.files) || 1;
            data._progress.bitrate = data.bitrate = 0;
            this._active += 1;
            // Initialize the global progress values:
            this._progress.loaded += data.loaded;
            this._progress.total += data.total;
        },

        _onDone: function (result, textStatus, jqXHR, options) {
            var total = options._progress.total,
                response = options._response;
            if (options._progress.loaded < total) {
                // Create a progress event if no final progress event
                // with loaded equaling total has been triggered:
                this._onProgress($.Event('progress', {
                    lengthComputable: true,
                    loaded: total,
                    total: total
                }), options);
            }
            response.result = options.result = result;
            response.textStatus = options.textStatus = textStatus;
            response.jqXHR = options.jqXHR = jqXHR;
            this._trigger('done', null, options);
        },

        _onFail: function (jqXHR, textStatus, errorThrown, options) {
            var response = options._response;
            if (options.recalculateProgress) {
                // Remove the failed (error or abort) file upload from
                // the global progress calculation:
                this._progress.loaded -= options._progress.loaded;
                this._progress.total -= options._progress.total;
            }
            response.jqXHR = options.jqXHR = jqXHR;
            response.textStatus = options.textStatus = textStatus;
            response.errorThrown = options.errorThrown = errorThrown;
            this._trigger('fail', null, options);
        },

        _onAlways: function (jqXHRorResult, textStatus, jqXHRorError, options) {
            // jqXHRorResult, textStatus and jqXHRorError are added to the
            // options object via done and fail callbacks
            this._trigger('always', null, options);
        },

        _onSend: function (e, data) {
            if (!data.submit) {
                this._addConvenienceMethods(e, data);
            }
            var that = this,
                jqXHR,
                aborted,
                slot,
                pipe,
                options = that._getAJAXSettings(data),
                send = function () {
                    that._sending += 1;
                    // Set timer for bitrate progress calculation:
                    options._bitrateTimer = new that._BitrateTimer();
                    jqXHR = jqXHR || (
                        ((aborted || that._trigger(
                            'send',
                            $.Event('send', {delegatedEvent: e}),
                            options
                        ) === false) &&
                        that._getXHRPromise(false, options.context, aborted)) ||
                        that._chunkedUpload(options) || $.ajax(options)
                    ).done(function (result, textStatus, jqXHR) {
                        that._onDone(result, textStatus, jqXHR, options);
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        that._onFail(jqXHR, textStatus, errorThrown, options);
                    }).always(function (jqXHRorResult, textStatus, jqXHRorError) {
                        that._onAlways(
                            jqXHRorResult,
                            textStatus,
                            jqXHRorError,
                            options
                        );
                        that._sending -= 1;
                        that._active -= 1;
                        if (options.limitConcurrentUploads &&
                                options.limitConcurrentUploads > that._sending) {
                            // Start the next queued upload,
                            // that has not been aborted:
                            var nextSlot = that._slots.shift();
                            while (nextSlot) {
                                if (that._getDeferredState(nextSlot) === 'pending') {
                                    nextSlot.resolve();
                                    break;
                                }
                                nextSlot = that._slots.shift();
                            }
                        }
                        if (that._active === 0) {
                            // The stop callback is triggered when all uploads have
                            // been completed, equivalent to the global ajaxStop event:
                            that._trigger('stop');
                        }
                    });
                    return jqXHR;
                };
            this._beforeSend(e, options);
            if (this.options.sequentialUploads ||
                    (this.options.limitConcurrentUploads &&
                    this.options.limitConcurrentUploads <= this._sending)) {
                if (this.options.limitConcurrentUploads > 1) {
                    slot = $.Deferred();
                    this._slots.push(slot);
                    pipe = slot.then(send);
                } else {
                    this._sequence = this._sequence.then(send, send);
                    pipe = this._sequence;
                }
                // Return the piped Promise object, enhanced with an abort method,
                // which is delegated to the jqXHR object of the current upload,
                // and jqXHR callbacks mapped to the equivalent Promise methods:
                pipe.abort = function () {
                    aborted = [undefined, 'abort', 'abort'];
                    if (!jqXHR) {
                        if (slot) {
                            slot.rejectWith(options.context, aborted);
                        }
                        return send();
                    }
                    return jqXHR.abort();
                };
                return this._enhancePromise(pipe);
            }
            return send();
        },

        _onAdd: function (e, data) {
            var that = this,
                result = true,
                options = $.extend({}, this.options, data),
                files = data.files,
                filesLength = files.length,
                limit = options.limitMultiFileUploads,
                limitSize = options.limitMultiFileUploadSize,
                overhead = options.limitMultiFileUploadSizeOverhead,
                batchSize = 0,
                paramName = this._getParamName(options),
                paramNameSet,
                paramNameSlice,
                fileSet,
                i,
                j = 0;
            if (!filesLength) {
                return false;
            }
            if (limitSize && files[0].size === undefined) {
                limitSize = undefined;
            }
            if (!(options.singleFileUploads || limit || limitSize) ||
                    !this._isXHRUpload(options)) {
                fileSet = [files];
                paramNameSet = [paramName];
            } else if (!(options.singleFileUploads || limitSize) && limit) {
                fileSet = [];
                paramNameSet = [];
                for (i = 0; i < filesLength; i += limit) {
                    fileSet.push(files.slice(i, i + limit));
                    paramNameSlice = paramName.slice(i, i + limit);
                    if (!paramNameSlice.length) {
                        paramNameSlice = paramName;
                    }
                    paramNameSet.push(paramNameSlice);
                }
            } else if (!options.singleFileUploads && limitSize) {
                fileSet = [];
                paramNameSet = [];
                for (i = 0; i < filesLength; i = i + 1) {
                    batchSize += files[i].size + overhead;
                    if (i + 1 === filesLength ||
                            ((batchSize + files[i + 1].size + overhead) > limitSize) ||
                            (limit && i + 1 - j >= limit)) {
                        fileSet.push(files.slice(j, i + 1));
                        paramNameSlice = paramName.slice(j, i + 1);
                        if (!paramNameSlice.length) {
                            paramNameSlice = paramName;
                        }
                        paramNameSet.push(paramNameSlice);
                        j = i + 1;
                        batchSize = 0;
                    }
                }
            } else {
                paramNameSet = paramName;
            }
            data.originalFiles = files;
            $.each(fileSet || files, function (index, element) {
                var newData = $.extend({}, data);
                newData.files = fileSet ? element : [element];
                newData.paramName = paramNameSet[index];
                that._initResponseObject(newData);
                that._initProgressObject(newData);
                that._addConvenienceMethods(e, newData);
                result = that._trigger(
                    'add',
                    $.Event('add', {delegatedEvent: e}),
                    newData
                );
                return result;
            });
            return result;
        },

        _replaceFileInput: function (data) {
            var input = data.fileInput,
                inputClone = input.clone(true),
                restoreFocus = input.is(document.activeElement);
            // Add a reference for the new cloned file input to the data argument:
            data.fileInputClone = inputClone;
            $('<form></form>').append(inputClone)[0].reset();
            // Detaching allows to insert the fileInput on another form
            // without loosing the file input value:
            input.after(inputClone).detach();
            // If the fileInput had focus before it was detached,
            // restore focus to the inputClone.
            if (restoreFocus) {
                inputClone.focus();
            }
            // Avoid memory leaks with the detached file input:
            $.cleanData(input.unbind('remove'));
            // Replace the original file input element in the fileInput
            // elements set with the clone, which has been copied including
            // event handlers:
            this.options.fileInput = this.options.fileInput.map(function (i, el) {
                if (el === input[0]) {
                    return inputClone[0];
                }
                return el;
            });
            // If the widget has been initialized on the file input itself,
            // override this.element with the file input clone:
            if (input[0] === this.element[0]) {
                this.element = inputClone;
            }
        },

        _handleFileTreeEntry: function (entry, path) {
            var that = this,
                dfd = $.Deferred(),
                errorHandler = function (e) {
                    if (e && !e.entry) {
                        e.entry = entry;
                    }
                    // Since $.when returns immediately if one
                    // Deferred is rejected, we use resolve instead.
                    // This allows valid files and invalid items
                    // to be returned together in one set:
                    dfd.resolve([e]);
                },
                successHandler = function (entries) {
                    that._handleFileTreeEntries(
                        entries,
                        path + entry.name + '/'
                    ).done(function (files) {
                        dfd.resolve(files);
                    }).fail(errorHandler);
                },
                readEntries = function () {
                    dirReader.readEntries(function (results) {
                        if (!results.length) {
                            successHandler(entries);
                        } else {
                            entries = entries.concat(results);
                            readEntries();
                        }
                    }, errorHandler);
                },
                dirReader, entries = [];
            path = path || '';
            if (entry.isFile) {
                if (entry._file) {
                    // Workaround for Chrome bug #149735
                    entry._file.relativePath = path;
                    dfd.resolve(entry._file);
                } else {
                    entry.file(function (file) {
                        file.relativePath = path;
                        dfd.resolve(file);
                    }, errorHandler);
                }
            } else if (entry.isDirectory) {
                dirReader = entry.createReader();
                readEntries();
            } else {
                // Return an empy list for file system items
                // other than files or directories:
                dfd.resolve([]);
            }
            return dfd.promise();
        },

        _handleFileTreeEntries: function (entries, path) {
            var that = this;
            return $.when.apply(
                $,
                $.map(entries, function (entry) {
                    return that._handleFileTreeEntry(entry, path);
                })
            ).then(function () {
                return Array.prototype.concat.apply(
                    [],
                    arguments
                );
            });
        },

        _getDroppedFiles: function (dataTransfer) {
            dataTransfer = dataTransfer || {};
            var items = dataTransfer.items;
            if (items && items.length && (items[0].webkitGetAsEntry ||
                    items[0].getAsEntry)) {
                return this._handleFileTreeEntries(
                    $.map(items, function (item) {
                        var entry;
                        if (item.webkitGetAsEntry) {
                            entry = item.webkitGetAsEntry();
                            if (entry) {
                                // Workaround for Chrome bug #149735:
                                entry._file = item.getAsFile();
                            }
                            return entry;
                        }
                        return item.getAsEntry();
                    })
                );
            }
            return $.Deferred().resolve(
                $.makeArray(dataTransfer.files)
            ).promise();
        },

        _getSingleFileInputFiles: function (fileInput) {
            fileInput = $(fileInput);
            var entries = fileInput.prop('webkitEntries') ||
                    fileInput.prop('entries'),
                files,
                value;
            if (entries && entries.length) {
                return this._handleFileTreeEntries(entries);
            }
            files = $.makeArray(fileInput.prop('files'));
            if (!files.length) {
                value = fileInput.prop('value');
                if (!value) {
                    return $.Deferred().resolve([]).promise();
                }
                // If the files property is not available, the browser does not
                // support the File API and we add a pseudo File object with
                // the input value as name with path information removed:
                files = [{name: value.replace(/^.*\\/, '')}];
            } else if (files[0].name === undefined && files[0].fileName) {
                // File normalization for Safari 4 and Firefox 3:
                $.each(files, function (index, file) {
                    file.name = file.fileName;
                    file.size = file.fileSize;
                });
            }
            return $.Deferred().resolve(files).promise();
        },

        _getFileInputFiles: function (fileInput) {
            if (!(fileInput instanceof $) || fileInput.length === 1) {
                return this._getSingleFileInputFiles(fileInput);
            }
            return $.when.apply(
                $,
                $.map(fileInput, this._getSingleFileInputFiles)
            ).then(function () {
                return Array.prototype.concat.apply(
                    [],
                    arguments
                );
            });
        },

        _onChange: function (e) {
            var that = this,
                data = {
                    fileInput: $(e.target),
                    form: $(e.target.form)
                };
            this._getFileInputFiles(data.fileInput).always(function (files) {
                data.files = files;
                if (that.options.replaceFileInput) {
                    that._replaceFileInput(data);
                }
                if (that._trigger(
                        'change',
                        $.Event('change', {delegatedEvent: e}),
                        data
                    ) !== false) {
                    that._onAdd(e, data);
                }
            });
        },

        _onPaste: function (e) {
            var items = e.originalEvent && e.originalEvent.clipboardData &&
                    e.originalEvent.clipboardData.items,
                data = {files: []};
            if (items && items.length) {
                $.each(items, function (index, item) {
                    var file = item.getAsFile && item.getAsFile();
                    if (file) {
                        data.files.push(file);
                    }
                });
                if (this._trigger(
                        'paste',
                        $.Event('paste', {delegatedEvent: e}),
                        data
                    ) !== false) {
                    this._onAdd(e, data);
                }
            }
        },

        _onDrop: function (e) {
            e.dataTransfer = e.originalEvent && e.originalEvent.dataTransfer;
            var that = this,
                dataTransfer = e.dataTransfer,
                data = {};
            if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {
                e.preventDefault();
                this._getDroppedFiles(dataTransfer).always(function (files) {
                    data.files = files;
                    if (that._trigger(
                            'drop',
                            $.Event('drop', {delegatedEvent: e}),
                            data
                        ) !== false) {
                        that._onAdd(e, data);
                    }
                });
            }
        },

        _onDragOver: getDragHandler('dragover'),

        _onDragEnter: getDragHandler('dragenter'),

        _onDragLeave: getDragHandler('dragleave'),

        _initEventHandlers: function () {
            if (this._isXHRUpload(this.options)) {
                this._on(this.options.dropZone, {
                    dragover: this._onDragOver,
                    drop: this._onDrop,
                    // event.preventDefault() on dragenter is required for IE10+:
                    dragenter: this._onDragEnter,
                    // dragleave is not required, but added for completeness:
                    dragleave: this._onDragLeave
                });
                this._on(this.options.pasteZone, {
                    paste: this._onPaste
                });
            }
            if ($.support.fileInput) {
                this._on(this.options.fileInput, {
                    change: this._onChange
                });
            }
        },

        _destroyEventHandlers: function () {
            this._off(this.options.dropZone, 'dragenter dragleave dragover drop');
            this._off(this.options.pasteZone, 'paste');
            this._off(this.options.fileInput, 'change');
        },

        _setOption: function (key, value) {
            var reinit = $.inArray(key, this._specialOptions) !== -1;
            if (reinit) {
                this._destroyEventHandlers();
            }
            this._super(key, value);
            if (reinit) {
                this._initSpecialOptions();
                this._initEventHandlers();
            }
        },

        _initSpecialOptions: function () {
            var options = this.options;
            if (options.fileInput === undefined) {
                options.fileInput = this.element.is('input[type="file"]') ?
                        this.element : this.element.find('input[type="file"]');
            } else if (!(options.fileInput instanceof $)) {
                options.fileInput = $(options.fileInput);
            }
            if (!(options.dropZone instanceof $)) {
                options.dropZone = $(options.dropZone);
            }
            if (!(options.pasteZone instanceof $)) {
                options.pasteZone = $(options.pasteZone);
            }
        },

        _getRegExp: function (str) {
            var parts = str.split('/'),
                modifiers = parts.pop();
            parts.shift();
            return new RegExp(parts.join('/'), modifiers);
        },

        _isRegExpOption: function (key, value) {
            return key !== 'url' && $.type(value) === 'string' &&
                /^\/.*\/[igm]{0,3}$/.test(value);
        },

        _initDataAttributes: function () {
            var that = this,
                options = this.options,
                data = this.element.data();
            // Initialize options set via HTML5 data-attributes:
            $.each(
                this.element[0].attributes,
                function (index, attr) {
                    var key = attr.name.toLowerCase(),
                        value;
                    if (/^data-/.test(key)) {
                        // Convert hyphen-ated key to camelCase:
                        key = key.slice(5).replace(/-[a-z]/g, function (str) {
                            return str.charAt(1).toUpperCase();
                        });
                        value = data[key];
                        if (that._isRegExpOption(key, value)) {
                            value = that._getRegExp(value);
                        }
                        options[key] = value;
                    }
                }
            );
        },

        _create: function () {
            this._initDataAttributes();
            this._initSpecialOptions();
            this._slots = [];
            this._sequence = this._getXHRPromise(true);
            this._sending = this._active = 0;
            this._initProgressObject(this);
            this._initEventHandlers();
        },

        // This method is exposed to the widget API and allows to query
        // the number of active uploads:
        active: function () {
            return this._active;
        },

        // This method is exposed to the widget API and allows to query
        // the widget upload progress.
        // It returns an object with loaded, total and bitrate properties
        // for the running uploads:
        progress: function () {
            return this._progress;
        },

        // This method is exposed to the widget API and allows adding files
        // using the fileupload API. The data parameter accepts an object which
        // must have a files property and can contain additional options:
        // .fileupload('add', {files: filesList});
        add: function (data) {
            var that = this;
            if (!data || this.options.disabled) {
                return;
            }
            if (data.fileInput && !data.files) {
                this._getFileInputFiles(data.fileInput).always(function (files) {
                    data.files = files;
                    that._onAdd(null, data);
                });
            } else {
                data.files = $.makeArray(data.files);
                this._onAdd(null, data);
            }
        },

        // This method is exposed to the widget API and allows sending files
        // using the fileupload API. The data parameter accepts an object which
        // must have a files or fileInput property and can contain additional options:
        // .fileupload('send', {files: filesList});
        // The method returns a Promise object for the file upload call.
        send: function (data) {
            if (data && !this.options.disabled) {
                if (data.fileInput && !data.files) {
                    var that = this,
                        dfd = $.Deferred(),
                        promise = dfd.promise(),
                        jqXHR,
                        aborted;
                    promise.abort = function () {
                        aborted = true;
                        if (jqXHR) {
                            return jqXHR.abort();
                        }
                        dfd.reject(null, 'abort', 'abort');
                        return promise;
                    };
                    this._getFileInputFiles(data.fileInput).always(
                        function (files) {
                            if (aborted) {
                                return;
                            }
                            if (!files.length) {
                                dfd.reject();
                                return;
                            }
                            data.files = files;
                            jqXHR = that._onSend(null, data);
                            jqXHR.then(
                                function (result, textStatus, jqXHR) {
                                    dfd.resolve(result, textStatus, jqXHR);
                                },
                                function (jqXHR, textStatus, errorThrown) {
                                    dfd.reject(jqXHR, textStatus, errorThrown);
                                }
                            );
                        }
                    );
                    return this._enhancePromise(promise);
                }
                data.files = $.makeArray(data.files);
                if (data.files.length) {
                    return this._onSend(null, data);
                }
            }
            return this._getXHRPromise(false, data && data.context);
        }

    });

}));


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

/*!

 handlebars v4.0.5

Copyright (C) 2011-2015 by Yehuda Katz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

@license
*/
(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Handlebars"] = factory();
	else
		root["Handlebars"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _handlebarsRuntime = __webpack_require__(2);

	var _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);

	// Compiler imports

	var _handlebarsCompilerAst = __webpack_require__(21);

	var _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);

	var _handlebarsCompilerBase = __webpack_require__(22);

	var _handlebarsCompilerCompiler = __webpack_require__(27);

	var _handlebarsCompilerJavascriptCompiler = __webpack_require__(28);

	var _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);

	var _handlebarsCompilerVisitor = __webpack_require__(25);

	var _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);

	var _handlebarsNoConflict = __webpack_require__(20);

	var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

	var _create = _handlebarsRuntime2['default'].create;
	function create() {
	  var hb = _create();

	  hb.compile = function (input, options) {
	    return _handlebarsCompilerCompiler.compile(input, options, hb);
	  };
	  hb.precompile = function (input, options) {
	    return _handlebarsCompilerCompiler.precompile(input, options, hb);
	  };

	  hb.AST = _handlebarsCompilerAst2['default'];
	  hb.Compiler = _handlebarsCompilerCompiler.Compiler;
	  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];
	  hb.Parser = _handlebarsCompilerBase.parser;
	  hb.parse = _handlebarsCompilerBase.parse;

	  return hb;
	}

	var inst = create();
	inst.create = create;

	_handlebarsNoConflict2['default'](inst);

	inst.Visitor = _handlebarsCompilerVisitor2['default'];

	inst['default'] = inst;

	exports['default'] = inst;
	module.exports = exports['default'];

/***/ },
/* 1 */
/***/ function(module, exports) {

	"use strict";

	exports["default"] = function (obj) {
	  return obj && obj.__esModule ? obj : {
	    "default": obj
	  };
	};

	exports.__esModule = true;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _handlebarsBase = __webpack_require__(4);

	var base = _interopRequireWildcard(_handlebarsBase);

	// Each of these augment the Handlebars object. No need to setup here.
	// (This is done to easily share code between commonjs and browse envs)

	var _handlebarsSafeString = __webpack_require__(18);

	var _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);

	var _handlebarsException = __webpack_require__(6);

	var _handlebarsException2 = _interopRequireDefault(_handlebarsException);

	var _handlebarsUtils = __webpack_require__(5);

	var Utils = _interopRequireWildcard(_handlebarsUtils);

	var _handlebarsRuntime = __webpack_require__(19);

	var runtime = _interopRequireWildcard(_handlebarsRuntime);

	var _handlebarsNoConflict = __webpack_require__(20);

	var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

	// For compatibility and usage outside of module systems, make the Handlebars object a namespace
	function create() {
	  var hb = new base.HandlebarsEnvironment();

	  Utils.extend(hb, base);
	  hb.SafeString = _handlebarsSafeString2['default'];
	  hb.Exception = _handlebarsException2['default'];
	  hb.Utils = Utils;
	  hb.escapeExpression = Utils.escapeExpression;

	  hb.VM = runtime;
	  hb.template = function (spec) {
	    return runtime.template(spec, hb);
	  };

	  return hb;
	}

	var inst = create();
	inst.create = create;

	_handlebarsNoConflict2['default'](inst);

	inst['default'] = inst;

	exports['default'] = inst;
	module.exports = exports['default'];

/***/ },
/* 3 */
/***/ function(module, exports) {

	"use strict";

	exports["default"] = function (obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  } else {
	    var newObj = {};

	    if (obj != null) {
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
	      }
	    }

	    newObj["default"] = obj;
	    return newObj;
	  }
	};

	exports.__esModule = true;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.HandlebarsEnvironment = HandlebarsEnvironment;

	var _utils = __webpack_require__(5);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _helpers = __webpack_require__(7);

	var _decorators = __webpack_require__(15);

	var _logger = __webpack_require__(17);

	var _logger2 = _interopRequireDefault(_logger);

	var VERSION = '4.0.5';
	exports.VERSION = VERSION;
	var COMPILER_REVISION = 7;

	exports.COMPILER_REVISION = COMPILER_REVISION;
	var REVISION_CHANGES = {
	  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
	  2: '== 1.0.0-rc.3',
	  3: '== 1.0.0-rc.4',
	  4: '== 1.x.x',
	  5: '== 2.0.0-alpha.x',
	  6: '>= 2.0.0-beta.1',
	  7: '>= 4.0.0'
	};

	exports.REVISION_CHANGES = REVISION_CHANGES;
	var objectType = '[object Object]';

	function HandlebarsEnvironment(helpers, partials, decorators) {
	  this.helpers = helpers || {};
	  this.partials = partials || {};
	  this.decorators = decorators || {};

	  _helpers.registerDefaultHelpers(this);
	  _decorators.registerDefaultDecorators(this);
	}

	HandlebarsEnvironment.prototype = {
	  constructor: HandlebarsEnvironment,

	  logger: _logger2['default'],
	  log: _logger2['default'].log,

	  registerHelper: function registerHelper(name, fn) {
	    if (_utils.toString.call(name) === objectType) {
	      if (fn) {
	        throw new _exception2['default']('Arg not supported with multiple helpers');
	      }
	      _utils.extend(this.helpers, name);
	    } else {
	      this.helpers[name] = fn;
	    }
	  },
	  unregisterHelper: function unregisterHelper(name) {
	    delete this.helpers[name];
	  },

	  registerPartial: function registerPartial(name, partial) {
	    if (_utils.toString.call(name) === objectType) {
	      _utils.extend(this.partials, name);
	    } else {
	      if (typeof partial === 'undefined') {
	        throw new _exception2['default']('Attempting to register a partial called "' + name + '" as undefined');
	      }
	      this.partials[name] = partial;
	    }
	  },
	  unregisterPartial: function unregisterPartial(name) {
	    delete this.partials[name];
	  },

	  registerDecorator: function registerDecorator(name, fn) {
	    if (_utils.toString.call(name) === objectType) {
	      if (fn) {
	        throw new _exception2['default']('Arg not supported with multiple decorators');
	      }
	      _utils.extend(this.decorators, name);
	    } else {
	      this.decorators[name] = fn;
	    }
	  },
	  unregisterDecorator: function unregisterDecorator(name) {
	    delete this.decorators[name];
	  }
	};

	var log = _logger2['default'].log;

	exports.log = log;
	exports.createFrame = _utils.createFrame;
	exports.logger = _logger2['default'];

/***/ },
/* 5 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.extend = extend;
	exports.indexOf = indexOf;
	exports.escapeExpression = escapeExpression;
	exports.isEmpty = isEmpty;
	exports.createFrame = createFrame;
	exports.blockParams = blockParams;
	exports.appendContextPath = appendContextPath;
	var escape = {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;',
	  "'": '&#x27;',
	  '`': '&#x60;',
	  '=': '&#x3D;'
	};

	var badChars = /[&<>"'`=]/g,
	    possible = /[&<>"'`=]/;

	function escapeChar(chr) {
	  return escape[chr];
	}

	function extend(obj /* , ...source */) {
	  for (var i = 1; i < arguments.length; i++) {
	    for (var key in arguments[i]) {
	      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
	        obj[key] = arguments[i][key];
	      }
	    }
	  }

	  return obj;
	}

	var toString = Object.prototype.toString;

	exports.toString = toString;
	// Sourced from lodash
	// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
	/* eslint-disable func-style */
	var isFunction = function isFunction(value) {
	  return typeof value === 'function';
	};
	// fallback for older versions of Chrome and Safari
	/* istanbul ignore next */
	if (isFunction(/x/)) {
	  exports.isFunction = isFunction = function (value) {
	    return typeof value === 'function' && toString.call(value) === '[object Function]';
	  };
	}
	exports.isFunction = isFunction;

	/* eslint-enable func-style */

	/* istanbul ignore next */
	var isArray = Array.isArray || function (value) {
	  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;
	};

	exports.isArray = isArray;
	// Older IE versions do not directly support indexOf so we must implement our own, sadly.

	function indexOf(array, value) {
	  for (var i = 0, len = array.length; i < len; i++) {
	    if (array[i] === value) {
	      return i;
	    }
	  }
	  return -1;
	}

	function escapeExpression(string) {
	  if (typeof string !== 'string') {
	    // don't escape SafeStrings, since they're already safe
	    if (string && string.toHTML) {
	      return string.toHTML();
	    } else if (string == null) {
	      return '';
	    } else if (!string) {
	      return string + '';
	    }

	    // Force a string conversion as this will be done by the append regardless and
	    // the regex test will do this transparently behind the scenes, causing issues if
	    // an object's to string has escaped characters in it.
	    string = '' + string;
	  }

	  if (!possible.test(string)) {
	    return string;
	  }
	  return string.replace(badChars, escapeChar);
	}

	function isEmpty(value) {
	  if (!value && value !== 0) {
	    return true;
	  } else if (isArray(value) && value.length === 0) {
	    return true;
	  } else {
	    return false;
	  }
	}

	function createFrame(object) {
	  var frame = extend({}, object);
	  frame._parent = object;
	  return frame;
	}

	function blockParams(params, ids) {
	  params.path = ids;
	  return params;
	}

	function appendContextPath(contextPath, id) {
	  return (contextPath ? contextPath + '.' : '') + id;
	}

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

	function Exception(message, node) {
	  var loc = node && node.loc,
	      line = undefined,
	      column = undefined;
	  if (loc) {
	    line = loc.start.line;
	    column = loc.start.column;

	    message += ' - ' + line + ':' + column;
	  }

	  var tmp = Error.prototype.constructor.call(this, message);

	  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
	  for (var idx = 0; idx < errorProps.length; idx++) {
	    this[errorProps[idx]] = tmp[errorProps[idx]];
	  }

	  /* istanbul ignore else */
	  if (Error.captureStackTrace) {
	    Error.captureStackTrace(this, Exception);
	  }

	  if (loc) {
	    this.lineNumber = line;
	    this.column = column;
	  }
	}

	Exception.prototype = new Error();

	exports['default'] = Exception;
	module.exports = exports['default'];

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.registerDefaultHelpers = registerDefaultHelpers;

	var _helpersBlockHelperMissing = __webpack_require__(8);

	var _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);

	var _helpersEach = __webpack_require__(9);

	var _helpersEach2 = _interopRequireDefault(_helpersEach);

	var _helpersHelperMissing = __webpack_require__(10);

	var _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);

	var _helpersIf = __webpack_require__(11);

	var _helpersIf2 = _interopRequireDefault(_helpersIf);

	var _helpersLog = __webpack_require__(12);

	var _helpersLog2 = _interopRequireDefault(_helpersLog);

	var _helpersLookup = __webpack_require__(13);

	var _helpersLookup2 = _interopRequireDefault(_helpersLookup);

	var _helpersWith = __webpack_require__(14);

	var _helpersWith2 = _interopRequireDefault(_helpersWith);

	function registerDefaultHelpers(instance) {
	  _helpersBlockHelperMissing2['default'](instance);
	  _helpersEach2['default'](instance);
	  _helpersHelperMissing2['default'](instance);
	  _helpersIf2['default'](instance);
	  _helpersLog2['default'](instance);
	  _helpersLookup2['default'](instance);
	  _helpersWith2['default'](instance);
	}

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerHelper('blockHelperMissing', function (context, options) {
	    var inverse = options.inverse,
	        fn = options.fn;

	    if (context === true) {
	      return fn(this);
	    } else if (context === false || context == null) {
	      return inverse(this);
	    } else if (_utils.isArray(context)) {
	      if (context.length > 0) {
	        if (options.ids) {
	          options.ids = [options.name];
	        }

	        return instance.helpers.each(context, options);
	      } else {
	        return inverse(this);
	      }
	    } else {
	      if (options.data && options.ids) {
	        var data = _utils.createFrame(options.data);
	        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);
	        options = { data: data };
	      }

	      return fn(context, options);
	    }
	  });
	};

	module.exports = exports['default'];

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('each', function (context, options) {
	    if (!options) {
	      throw new _exception2['default']('Must pass iterator to #each');
	    }

	    var fn = options.fn,
	        inverse = options.inverse,
	        i = 0,
	        ret = '',
	        data = undefined,
	        contextPath = undefined;

	    if (options.data && options.ids) {
	      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
	    }

	    if (_utils.isFunction(context)) {
	      context = context.call(this);
	    }

	    if (options.data) {
	      data = _utils.createFrame(options.data);
	    }

	    function execIteration(field, index, last) {
	      if (data) {
	        data.key = field;
	        data.index = index;
	        data.first = index === 0;
	        data.last = !!last;

	        if (contextPath) {
	          data.contextPath = contextPath + field;
	        }
	      }

	      ret = ret + fn(context[field], {
	        data: data,
	        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])
	      });
	    }

	    if (context && typeof context === 'object') {
	      if (_utils.isArray(context)) {
	        for (var j = context.length; i < j; i++) {
	          if (i in context) {
	            execIteration(i, i, i === context.length - 1);
	          }
	        }
	      } else {
	        var priorKey = undefined;

	        for (var key in context) {
	          if (context.hasOwnProperty(key)) {
	            // We're running the iterations one step out of sync so we can detect
	            // the last iteration without have to scan the object twice and create
	            // an itermediate keys array.
	            if (priorKey !== undefined) {
	              execIteration(priorKey, i - 1);
	            }
	            priorKey = key;
	            i++;
	          }
	        }
	        if (priorKey !== undefined) {
	          execIteration(priorKey, i - 1, true);
	        }
	      }
	    }

	    if (i === 0) {
	      ret = inverse(this);
	    }

	    return ret;
	  });
	};

	module.exports = exports['default'];

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('helperMissing', function () /* [args, ]options */{
	    if (arguments.length === 1) {
	      // A missing field in a {{foo}} construct.
	      return undefined;
	    } else {
	      // Someone is actually trying to call something, blow up.
	      throw new _exception2['default']('Missing helper: "' + arguments[arguments.length - 1].name + '"');
	    }
	  });
	};

	module.exports = exports['default'];

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerHelper('if', function (conditional, options) {
	    if (_utils.isFunction(conditional)) {
	      conditional = conditional.call(this);
	    }

	    // Default behavior is to render the positive path if the value is truthy and not empty.
	    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
	    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
	    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {
	      return options.inverse(this);
	    } else {
	      return options.fn(this);
	    }
	  });

	  instance.registerHelper('unless', function (conditional, options) {
	    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });
	  });
	};

	module.exports = exports['default'];

/***/ },
/* 12 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	exports['default'] = function (instance) {
	  instance.registerHelper('log', function () /* message, options */{
	    var args = [undefined],
	        options = arguments[arguments.length - 1];
	    for (var i = 0; i < arguments.length - 1; i++) {
	      args.push(arguments[i]);
	    }

	    var level = 1;
	    if (options.hash.level != null) {
	      level = options.hash.level;
	    } else if (options.data && options.data.level != null) {
	      level = options.data.level;
	    }
	    args[0] = level;

	    instance.log.apply(instance, args);
	  });
	};

	module.exports = exports['default'];

/***/ },
/* 13 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	exports['default'] = function (instance) {
	  instance.registerHelper('lookup', function (obj, field) {
	    return obj && obj[field];
	  });
	};

	module.exports = exports['default'];

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerHelper('with', function (context, options) {
	    if (_utils.isFunction(context)) {
	      context = context.call(this);
	    }

	    var fn = options.fn;

	    if (!_utils.isEmpty(context)) {
	      var data = options.data;
	      if (options.data && options.ids) {
	        data = _utils.createFrame(options.data);
	        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);
	      }

	      return fn(context, {
	        data: data,
	        blockParams: _utils.blockParams([context], [data && data.contextPath])
	      });
	    } else {
	      return options.inverse(this);
	    }
	  });
	};

	module.exports = exports['default'];

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.registerDefaultDecorators = registerDefaultDecorators;

	var _decoratorsInline = __webpack_require__(16);

	var _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);

	function registerDefaultDecorators(instance) {
	  _decoratorsInline2['default'](instance);
	}

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	exports['default'] = function (instance) {
	  instance.registerDecorator('inline', function (fn, props, container, options) {
	    var ret = fn;
	    if (!props.partials) {
	      props.partials = {};
	      ret = function (context, options) {
	        // Create a new partials stack frame prior to exec.
	        var original = container.partials;
	        container.partials = _utils.extend({}, original, props.partials);
	        var ret = fn(context, options);
	        container.partials = original;
	        return ret;
	      };
	    }

	    props.partials[options.args[0]] = options.fn;

	    return ret;
	  });
	};

	module.exports = exports['default'];

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var logger = {
	  methodMap: ['debug', 'info', 'warn', 'error'],
	  level: 'info',

	  // Maps a given level value to the `methodMap` indexes above.
	  lookupLevel: function lookupLevel(level) {
	    if (typeof level === 'string') {
	      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());
	      if (levelMap >= 0) {
	        level = levelMap;
	      } else {
	        level = parseInt(level, 10);
	      }
	    }

	    return level;
	  },

	  // Can be overridden in the host environment
	  log: function log(level) {
	    level = logger.lookupLevel(level);

	    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {
	      var method = logger.methodMap[level];
	      if (!console[method]) {
	        // eslint-disable-line no-console
	        method = 'log';
	      }

	      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        message[_key - 1] = arguments[_key];
	      }

	      console[method].apply(console, message); // eslint-disable-line no-console
	    }
	  }
	};

	exports['default'] = logger;
	module.exports = exports['default'];

/***/ },
/* 18 */
/***/ function(module, exports) {

	// Build out our basic SafeString type
	'use strict';

	exports.__esModule = true;
	function SafeString(string) {
	  this.string = string;
	}

	SafeString.prototype.toString = SafeString.prototype.toHTML = function () {
	  return '' + this.string;
	};

	exports['default'] = SafeString;
	module.exports = exports['default'];

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.checkRevision = checkRevision;
	exports.template = template;
	exports.wrapProgram = wrapProgram;
	exports.resolvePartial = resolvePartial;
	exports.invokePartial = invokePartial;
	exports.noop = noop;

	var _utils = __webpack_require__(5);

	var Utils = _interopRequireWildcard(_utils);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _base = __webpack_require__(4);

	function checkRevision(compilerInfo) {
	  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
	      currentRevision = _base.COMPILER_REVISION;

	  if (compilerRevision !== currentRevision) {
	    if (compilerRevision < currentRevision) {
	      var runtimeVersions = _base.REVISION_CHANGES[currentRevision],
	          compilerVersions = _base.REVISION_CHANGES[compilerRevision];
	      throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');
	    } else {
	      // Use the embedded version info since the runtime doesn't know about this revision yet
	      throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');
	    }
	  }
	}

	function template(templateSpec, env) {
	  /* istanbul ignore next */
	  if (!env) {
	    throw new _exception2['default']('No environment passed to template');
	  }
	  if (!templateSpec || !templateSpec.main) {
	    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);
	  }

	  templateSpec.main.decorator = templateSpec.main_d;

	  // Note: Using env.VM references rather than local var references throughout this section to allow
	  // for external users to override these as psuedo-supported APIs.
	  env.VM.checkRevision(templateSpec.compiler);

	  function invokePartialWrapper(partial, context, options) {
	    if (options.hash) {
	      context = Utils.extend({}, context, options.hash);
	      if (options.ids) {
	        options.ids[0] = true;
	      }
	    }

	    partial = env.VM.resolvePartial.call(this, partial, context, options);
	    var result = env.VM.invokePartial.call(this, partial, context, options);

	    if (result == null && env.compile) {
	      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
	      result = options.partials[options.name](context, options);
	    }
	    if (result != null) {
	      if (options.indent) {
	        var lines = result.split('\n');
	        for (var i = 0, l = lines.length; i < l; i++) {
	          if (!lines[i] && i + 1 === l) {
	            break;
	          }

	          lines[i] = options.indent + lines[i];
	        }
	        result = lines.join('\n');
	      }
	      return result;
	    } else {
	      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');
	    }
	  }

	  // Just add water
	  var container = {
	    strict: function strict(obj, name) {
	      if (!(name in obj)) {
	        throw new _exception2['default']('"' + name + '" not defined in ' + obj);
	      }
	      return obj[name];
	    },
	    lookup: function lookup(depths, name) {
	      var len = depths.length;
	      for (var i = 0; i < len; i++) {
	        if (depths[i] && depths[i][name] != null) {
	          return depths[i][name];
	        }
	      }
	    },
	    lambda: function lambda(current, context) {
	      return typeof current === 'function' ? current.call(context) : current;
	    },

	    escapeExpression: Utils.escapeExpression,
	    invokePartial: invokePartialWrapper,

	    fn: function fn(i) {
	      var ret = templateSpec[i];
	      ret.decorator = templateSpec[i + '_d'];
	      return ret;
	    },

	    programs: [],
	    program: function program(i, data, declaredBlockParams, blockParams, depths) {
	      var programWrapper = this.programs[i],
	          fn = this.fn(i);
	      if (data || depths || blockParams || declaredBlockParams) {
	        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);
	      } else if (!programWrapper) {
	        programWrapper = this.programs[i] = wrapProgram(this, i, fn);
	      }
	      return programWrapper;
	    },

	    data: function data(value, depth) {
	      while (value && depth--) {
	        value = value._parent;
	      }
	      return value;
	    },
	    merge: function merge(param, common) {
	      var obj = param || common;

	      if (param && common && param !== common) {
	        obj = Utils.extend({}, common, param);
	      }

	      return obj;
	    },

	    noop: env.VM.noop,
	    compilerInfo: templateSpec.compiler
	  };

	  function ret(context) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var data = options.data;

	    ret._setup(options);
	    if (!options.partial && templateSpec.useData) {
	      data = initData(context, data);
	    }
	    var depths = undefined,
	        blockParams = templateSpec.useBlockParams ? [] : undefined;
	    if (templateSpec.useDepths) {
	      if (options.depths) {
	        depths = context !== options.depths[0] ? [context].concat(options.depths) : options.depths;
	      } else {
	        depths = [context];
	      }
	    }

	    function main(context /*, options*/) {
	      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);
	    }
	    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);
	    return main(context, options);
	  }
	  ret.isTop = true;

	  ret._setup = function (options) {
	    if (!options.partial) {
	      container.helpers = container.merge(options.helpers, env.helpers);

	      if (templateSpec.usePartial) {
	        container.partials = container.merge(options.partials, env.partials);
	      }
	      if (templateSpec.usePartial || templateSpec.useDecorators) {
	        container.decorators = container.merge(options.decorators, env.decorators);
	      }
	    } else {
	      container.helpers = options.helpers;
	      container.partials = options.partials;
	      container.decorators = options.decorators;
	    }
	  };

	  ret._child = function (i, data, blockParams, depths) {
	    if (templateSpec.useBlockParams && !blockParams) {
	      throw new _exception2['default']('must pass block params');
	    }
	    if (templateSpec.useDepths && !depths) {
	      throw new _exception2['default']('must pass parent depths');
	    }

	    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);
	  };
	  return ret;
	}

	function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {
	  function prog(context) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var currentDepths = depths;
	    if (depths && context !== depths[0]) {
	      currentDepths = [context].concat(depths);
	    }

	    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);
	  }

	  prog = executeDecorators(fn, prog, container, depths, data, blockParams);

	  prog.program = i;
	  prog.depth = depths ? depths.length : 0;
	  prog.blockParams = declaredBlockParams || 0;
	  return prog;
	}

	function resolvePartial(partial, context, options) {
	  if (!partial) {
	    if (options.name === '@partial-block') {
	      partial = options.data['partial-block'];
	    } else {
	      partial = options.partials[options.name];
	    }
	  } else if (!partial.call && !options.name) {
	    // This is a dynamic partial that returned a string
	    options.name = partial;
	    partial = options.partials[partial];
	  }
	  return partial;
	}

	function invokePartial(partial, context, options) {
	  options.partial = true;
	  if (options.ids) {
	    options.data.contextPath = options.ids[0] || options.data.contextPath;
	  }

	  var partialBlock = undefined;
	  if (options.fn && options.fn !== noop) {
	    options.data = _base.createFrame(options.data);
	    partialBlock = options.data['partial-block'] = options.fn;

	    if (partialBlock.partials) {
	      options.partials = Utils.extend({}, options.partials, partialBlock.partials);
	    }
	  }

	  if (partial === undefined && partialBlock) {
	    partial = partialBlock;
	  }

	  if (partial === undefined) {
	    throw new _exception2['default']('The partial ' + options.name + ' could not be found');
	  } else if (partial instanceof Function) {
	    return partial(context, options);
	  }
	}

	function noop() {
	  return '';
	}

	function initData(context, data) {
	  if (!data || !('root' in data)) {
	    data = data ? _base.createFrame(data) : {};
	    data.root = context;
	  }
	  return data;
	}

	function executeDecorators(fn, prog, container, depths, data, blockParams) {
	  if (fn.decorator) {
	    var props = {};
	    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);
	    Utils.extend(prog, props);
	  }
	  return prog;
	}

/***/ },
/* 20 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/* global window */
	'use strict';

	exports.__esModule = true;

	exports['default'] = function (Handlebars) {
	  /* istanbul ignore next */
	  var root = typeof global !== 'undefined' ? global : window,
	      $Handlebars = root.Handlebars;
	  /* istanbul ignore next */
	  Handlebars.noConflict = function () {
	    if (root.Handlebars === Handlebars) {
	      root.Handlebars = $Handlebars;
	    }
	    return Handlebars;
	  };
	};

	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 21 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var AST = {
	  // Public API used to evaluate derived attributes regarding AST nodes
	  helpers: {
	    // a mustache is definitely a helper if:
	    // * it is an eligible helper, and
	    // * it has at least one parameter or hash segment
	    helperExpression: function helperExpression(node) {
	      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);
	    },

	    scopedId: function scopedId(path) {
	      return (/^\.|this\b/.test(path.original)
	      );
	    },

	    // an ID is simple if it only has one part, and that part is not
	    // `..` or `this`.
	    simpleId: function simpleId(path) {
	      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;
	    }
	  }
	};

	// Must be exported as an object rather than the root of the module as the jison lexer
	// must modify the object to operate properly.
	exports['default'] = AST;
	module.exports = exports['default'];

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	var _interopRequireWildcard = __webpack_require__(3)['default'];

	exports.__esModule = true;
	exports.parse = parse;

	var _parser = __webpack_require__(23);

	var _parser2 = _interopRequireDefault(_parser);

	var _whitespaceControl = __webpack_require__(24);

	var _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);

	var _helpers = __webpack_require__(26);

	var Helpers = _interopRequireWildcard(_helpers);

	var _utils = __webpack_require__(5);

	exports.parser = _parser2['default'];

	var yy = {};
	_utils.extend(yy, Helpers);

	function parse(input, options) {
	  // Just return if an already-compiled AST was passed in.
	  if (input.type === 'Program') {
	    return input;
	  }

	  _parser2['default'].yy = yy;

	  // Altering the shared object here, but this is ok as parser is a sync operation
	  yy.locInfo = function (locInfo) {
	    return new yy.SourceLocation(options && options.srcName, locInfo);
	  };

	  var strip = new _whitespaceControl2['default'](options);
	  return strip.accept(_parser2['default'].parse(input));
	}

/***/ },
/* 23 */
/***/ function(module, exports) {

	/* istanbul ignore next */
	/* Jison generated parser */
	"use strict";

	var handlebars = (function () {
	    var parser = { trace: function trace() {},
	        yy: {},
	        symbols_: { "error": 2, "root": 3, "program": 4, "EOF": 5, "program_repetition0": 6, "statement": 7, "mustache": 8, "block": 9, "rawBlock": 10, "partial": 11, "partialBlock": 12, "content": 13, "COMMENT": 14, "CONTENT": 15, "openRawBlock": 16, "rawBlock_repetition_plus0": 17, "END_RAW_BLOCK": 18, "OPEN_RAW_BLOCK": 19, "helperName": 20, "openRawBlock_repetition0": 21, "openRawBlock_option0": 22, "CLOSE_RAW_BLOCK": 23, "openBlock": 24, "block_option0": 25, "closeBlock": 26, "openInverse": 27, "block_option1": 28, "OPEN_BLOCK": 29, "openBlock_repetition0": 30, "openBlock_option0": 31, "openBlock_option1": 32, "CLOSE": 33, "OPEN_INVERSE": 34, "openInverse_repetition0": 35, "openInverse_option0": 36, "openInverse_option1": 37, "openInverseChain": 38, "OPEN_INVERSE_CHAIN": 39, "openInverseChain_repetition0": 40, "openInverseChain_option0": 41, "openInverseChain_option1": 42, "inverseAndProgram": 43, "INVERSE": 44, "inverseChain": 45, "inverseChain_option0": 46, "OPEN_ENDBLOCK": 47, "OPEN": 48, "mustache_repetition0": 49, "mustache_option0": 50, "OPEN_UNESCAPED": 51, "mustache_repetition1": 52, "mustache_option1": 53, "CLOSE_UNESCAPED": 54, "OPEN_PARTIAL": 55, "partialName": 56, "partial_repetition0": 57, "partial_option0": 58, "openPartialBlock": 59, "OPEN_PARTIAL_BLOCK": 60, "openPartialBlock_repetition0": 61, "openPartialBlock_option0": 62, "param": 63, "sexpr": 64, "OPEN_SEXPR": 65, "sexpr_repetition0": 66, "sexpr_option0": 67, "CLOSE_SEXPR": 68, "hash": 69, "hash_repetition_plus0": 70, "hashSegment": 71, "ID": 72, "EQUALS": 73, "blockParams": 74, "OPEN_BLOCK_PARAMS": 75, "blockParams_repetition_plus0": 76, "CLOSE_BLOCK_PARAMS": 77, "path": 78, "dataName": 79, "STRING": 80, "NUMBER": 81, "BOOLEAN": 82, "UNDEFINED": 83, "NULL": 84, "DATA": 85, "pathSegments": 86, "SEP": 87, "$accept": 0, "$end": 1 },
	        terminals_: { 2: "error", 5: "EOF", 14: "COMMENT", 15: "CONTENT", 18: "END_RAW_BLOCK", 19: "OPEN_RAW_BLOCK", 23: "CLOSE_RAW_BLOCK", 29: "OPEN_BLOCK", 33: "CLOSE", 34: "OPEN_INVERSE", 39: "OPEN_INVERSE_CHAIN", 44: "INVERSE", 47: "OPEN_ENDBLOCK", 48: "OPEN", 51: "OPEN_UNESCAPED", 54: "CLOSE_UNESCAPED", 55: "OPEN_PARTIAL", 60: "OPEN_PARTIAL_BLOCK", 65: "OPEN_SEXPR", 68: "CLOSE_SEXPR", 72: "ID", 73: "EQUALS", 75: "OPEN_BLOCK_PARAMS", 77: "CLOSE_BLOCK_PARAMS", 80: "STRING", 81: "NUMBER", 82: "BOOLEAN", 83: "UNDEFINED", 84: "NULL", 85: "DATA", 87: "SEP" },
	        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 1], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],
	        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$
	        /**/) {

	            var $0 = $$.length - 1;
	            switch (yystate) {
	                case 1:
	                    return $$[$0 - 1];
	                    break;
	                case 2:
	                    this.$ = yy.prepareProgram($$[$0]);
	                    break;
	                case 3:
	                    this.$ = $$[$0];
	                    break;
	                case 4:
	                    this.$ = $$[$0];
	                    break;
	                case 5:
	                    this.$ = $$[$0];
	                    break;
	                case 6:
	                    this.$ = $$[$0];
	                    break;
	                case 7:
	                    this.$ = $$[$0];
	                    break;
	                case 8:
	                    this.$ = $$[$0];
	                    break;
	                case 9:
	                    this.$ = {
	                        type: 'CommentStatement',
	                        value: yy.stripComment($$[$0]),
	                        strip: yy.stripFlags($$[$0], $$[$0]),
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 10:
	                    this.$ = {
	                        type: 'ContentStatement',
	                        original: $$[$0],
	                        value: $$[$0],
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 11:
	                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
	                    break;
	                case 12:
	                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };
	                    break;
	                case 13:
	                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);
	                    break;
	                case 14:
	                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);
	                    break;
	                case 15:
	                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 16:
	                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 17:
	                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 18:
	                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };
	                    break;
	                case 19:
	                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),
	                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);
	                    program.chained = true;

	                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };

	                    break;
	                case 20:
	                    this.$ = $$[$0];
	                    break;
	                case 21:
	                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };
	                    break;
	                case 22:
	                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
	                    break;
	                case 23:
	                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
	                    break;
	                case 24:
	                    this.$ = {
	                        type: 'PartialStatement',
	                        name: $$[$0 - 3],
	                        params: $$[$0 - 2],
	                        hash: $$[$0 - 1],
	                        indent: '',
	                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 25:
	                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
	                    break;
	                case 26:
	                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };
	                    break;
	                case 27:
	                    this.$ = $$[$0];
	                    break;
	                case 28:
	                    this.$ = $$[$0];
	                    break;
	                case 29:
	                    this.$ = {
	                        type: 'SubExpression',
	                        path: $$[$0 - 3],
	                        params: $$[$0 - 2],
	                        hash: $$[$0 - 1],
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 30:
	                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 31:
	                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 32:
	                    this.$ = yy.id($$[$0 - 1]);
	                    break;
	                case 33:
	                    this.$ = $$[$0];
	                    break;
	                case 34:
	                    this.$ = $$[$0];
	                    break;
	                case 35:
	                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 36:
	                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };
	                    break;
	                case 37:
	                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };
	                    break;
	                case 38:
	                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };
	                    break;
	                case 39:
	                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };
	                    break;
	                case 40:
	                    this.$ = $$[$0];
	                    break;
	                case 41:
	                    this.$ = $$[$0];
	                    break;
	                case 42:
	                    this.$ = yy.preparePath(true, $$[$0], this._$);
	                    break;
	                case 43:
	                    this.$ = yy.preparePath(false, $$[$0], this._$);
	                    break;
	                case 44:
	                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];
	                    break;
	                case 45:
	                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];
	                    break;
	                case 46:
	                    this.$ = [];
	                    break;
	                case 47:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 48:
	                    this.$ = [$$[$0]];
	                    break;
	                case 49:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 50:
	                    this.$ = [];
	                    break;
	                case 51:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 58:
	                    this.$ = [];
	                    break;
	                case 59:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 64:
	                    this.$ = [];
	                    break;
	                case 65:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 70:
	                    this.$ = [];
	                    break;
	                case 71:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 78:
	                    this.$ = [];
	                    break;
	                case 79:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 82:
	                    this.$ = [];
	                    break;
	                case 83:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 86:
	                    this.$ = [];
	                    break;
	                case 87:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 90:
	                    this.$ = [];
	                    break;
	                case 91:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 94:
	                    this.$ = [];
	                    break;
	                case 95:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 98:
	                    this.$ = [$$[$0]];
	                    break;
	                case 99:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 100:
	                    this.$ = [$$[$0]];
	                    break;
	                case 101:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	            }
	        },
	        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 13: 40, 15: [1, 20], 17: 39 }, { 20: 42, 56: 41, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 45, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 48, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 42, 56: 49, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 50, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 51] }, { 72: [1, 35], 86: 52 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 53, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 54, 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 55, 47: [2, 54] }, { 28: 60, 43: 61, 44: [1, 59], 47: [2, 56] }, { 13: 63, 15: [1, 20], 18: [1, 62] }, { 15: [2, 48], 18: [2, 48] }, { 33: [2, 86], 57: 64, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 65, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 66, 47: [1, 67] }, { 30: 68, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 69, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 70, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 71, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 75, 33: [2, 80], 50: 72, 63: 73, 64: 76, 65: [1, 44], 69: 74, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 80] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 51] }, { 20: 75, 53: 81, 54: [2, 84], 63: 82, 64: 76, 65: [1, 44], 69: 83, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 84, 47: [1, 67] }, { 47: [2, 55] }, { 4: 85, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 86, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 87, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 88, 47: [1, 67] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 75, 33: [2, 88], 58: 89, 63: 90, 64: 76, 65: [1, 44], 69: 91, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 92, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 93, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 31: 94, 33: [2, 60], 63: 95, 64: 76, 65: [1, 44], 69: 96, 70: 77, 71: 78, 72: [1, 79], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 66], 36: 97, 63: 98, 64: 76, 65: [1, 44], 69: 99, 70: 77, 71: 78, 72: [1, 79], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 22: 100, 23: [2, 52], 63: 101, 64: 76, 65: [1, 44], 69: 102, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 92], 62: 103, 63: 104, 64: 76, 65: [1, 44], 69: 105, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 106] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 107, 72: [1, 108], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 109], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 110] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 112, 46: 111, 47: [2, 76] }, { 33: [2, 70], 40: 113, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 114] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 75, 63: 116, 64: 76, 65: [1, 44], 67: 115, 68: [2, 96], 69: 117, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 118] }, { 32: 119, 33: [2, 62], 74: 120, 75: [1, 121] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 122, 74: 123, 75: [1, 121] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 124] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 125] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 109] }, { 20: 75, 63: 126, 64: 76, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 75, 33: [2, 72], 41: 127, 63: 128, 64: 76, 65: [1, 44], 69: 129, 70: 77, 71: 78, 72: [1, 79], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 130] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 131] }, { 33: [2, 63] }, { 72: [1, 133], 76: 132 }, { 33: [1, 134] }, { 33: [2, 69] }, { 15: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 135, 74: 136, 75: [1, 121] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 138], 77: [1, 137] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 139] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],
	        defaultActions: { 4: [2, 1], 55: [2, 55], 57: [2, 20], 61: [2, 57], 74: [2, 81], 83: [2, 85], 87: [2, 18], 91: [2, 89], 102: [2, 53], 105: [2, 93], 111: [2, 19], 112: [2, 77], 117: [2, 97], 120: [2, 63], 123: [2, 69], 124: [2, 12], 136: [2, 75], 137: [2, 32] },
	        parseError: function parseError(str, hash) {
	            throw new Error(str);
	        },
	        parse: function parse(input) {
	            var self = this,
	                stack = [0],
	                vstack = [null],
	                lstack = [],
	                table = this.table,
	                yytext = "",
	                yylineno = 0,
	                yyleng = 0,
	                recovering = 0,
	                TERROR = 2,
	                EOF = 1;
	            this.lexer.setInput(input);
	            this.lexer.yy = this.yy;
	            this.yy.lexer = this.lexer;
	            this.yy.parser = this;
	            if (typeof this.lexer.yylloc == "undefined") this.lexer.yylloc = {};
	            var yyloc = this.lexer.yylloc;
	            lstack.push(yyloc);
	            var ranges = this.lexer.options && this.lexer.options.ranges;
	            if (typeof this.yy.parseError === "function") this.parseError = this.yy.parseError;
	            function popStack(n) {
	                stack.length = stack.length - 2 * n;
	                vstack.length = vstack.length - n;
	                lstack.length = lstack.length - n;
	            }
	            function lex() {
	                var token;
	                token = self.lexer.lex() || 1;
	                if (typeof token !== "number") {
	                    token = self.symbols_[token] || token;
	                }
	                return token;
	            }
	            var symbol,
	                preErrorSymbol,
	                state,
	                action,
	                a,
	                r,
	                yyval = {},
	                p,
	                len,
	                newState,
	                expected;
	            while (true) {
	                state = stack[stack.length - 1];
	                if (this.defaultActions[state]) {
	                    action = this.defaultActions[state];
	                } else {
	                    if (symbol === null || typeof symbol == "undefined") {
	                        symbol = lex();
	                    }
	                    action = table[state] && table[state][symbol];
	                }
	                if (typeof action === "undefined" || !action.length || !action[0]) {
	                    var errStr = "";
	                    if (!recovering) {
	                        expected = [];
	                        for (p in table[state]) if (this.terminals_[p] && p > 2) {
	                            expected.push("'" + this.terminals_[p] + "'");
	                        }
	                        if (this.lexer.showPosition) {
	                            errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
	                        } else {
	                            errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1 ? "end of input" : "'" + (this.terminals_[symbol] || symbol) + "'");
	                        }
	                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });
	                    }
	                }
	                if (action[0] instanceof Array && action.length > 1) {
	                    throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
	                }
	                switch (action[0]) {
	                    case 1:
	                        stack.push(symbol);
	                        vstack.push(this.lexer.yytext);
	                        lstack.push(this.lexer.yylloc);
	                        stack.push(action[1]);
	                        symbol = null;
	                        if (!preErrorSymbol) {
	                            yyleng = this.lexer.yyleng;
	                            yytext = this.lexer.yytext;
	                            yylineno = this.lexer.yylineno;
	                            yyloc = this.lexer.yylloc;
	                            if (recovering > 0) recovering--;
	                        } else {
	                            symbol = preErrorSymbol;
	                            preErrorSymbol = null;
	                        }
	                        break;
	                    case 2:
	                        len = this.productions_[action[1]][1];
	                        yyval.$ = vstack[vstack.length - len];
	                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };
	                        if (ranges) {
	                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
	                        }
	                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
	                        if (typeof r !== "undefined") {
	                            return r;
	                        }
	                        if (len) {
	                            stack = stack.slice(0, -1 * len * 2);
	                            vstack = vstack.slice(0, -1 * len);
	                            lstack = lstack.slice(0, -1 * len);
	                        }
	                        stack.push(this.productions_[action[1]][0]);
	                        vstack.push(yyval.$);
	                        lstack.push(yyval._$);
	                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
	                        stack.push(newState);
	                        break;
	                    case 3:
	                        return true;
	                }
	            }
	            return true;
	        }
	    };
	    /* Jison generated lexer */
	    var lexer = (function () {
	        var lexer = { EOF: 1,
	            parseError: function parseError(str, hash) {
	                if (this.yy.parser) {
	                    this.yy.parser.parseError(str, hash);
	                } else {
	                    throw new Error(str);
	                }
	            },
	            setInput: function setInput(input) {
	                this._input = input;
	                this._more = this._less = this.done = false;
	                this.yylineno = this.yyleng = 0;
	                this.yytext = this.matched = this.match = '';
	                this.conditionStack = ['INITIAL'];
	                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };
	                if (this.options.ranges) this.yylloc.range = [0, 0];
	                this.offset = 0;
	                return this;
	            },
	            input: function input() {
	                var ch = this._input[0];
	                this.yytext += ch;
	                this.yyleng++;
	                this.offset++;
	                this.match += ch;
	                this.matched += ch;
	                var lines = ch.match(/(?:\r\n?|\n).*/g);
	                if (lines) {
	                    this.yylineno++;
	                    this.yylloc.last_line++;
	                } else {
	                    this.yylloc.last_column++;
	                }
	                if (this.options.ranges) this.yylloc.range[1]++;

	                this._input = this._input.slice(1);
	                return ch;
	            },
	            unput: function unput(ch) {
	                var len = ch.length;
	                var lines = ch.split(/(?:\r\n?|\n)/g);

	                this._input = ch + this._input;
	                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
	                //this.yyleng -= len;
	                this.offset -= len;
	                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
	                this.match = this.match.substr(0, this.match.length - 1);
	                this.matched = this.matched.substr(0, this.matched.length - 1);

	                if (lines.length - 1) this.yylineno -= lines.length - 1;
	                var r = this.yylloc.range;

	                this.yylloc = { first_line: this.yylloc.first_line,
	                    last_line: this.yylineno + 1,
	                    first_column: this.yylloc.first_column,
	                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len
	                };

	                if (this.options.ranges) {
	                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
	                }
	                return this;
	            },
	            more: function more() {
	                this._more = true;
	                return this;
	            },
	            less: function less(n) {
	                this.unput(this.match.slice(n));
	            },
	            pastInput: function pastInput() {
	                var past = this.matched.substr(0, this.matched.length - this.match.length);
	                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
	            },
	            upcomingInput: function upcomingInput() {
	                var next = this.match;
	                if (next.length < 20) {
	                    next += this._input.substr(0, 20 - next.length);
	                }
	                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
	            },
	            showPosition: function showPosition() {
	                var pre = this.pastInput();
	                var c = new Array(pre.length + 1).join("-");
	                return pre + this.upcomingInput() + "\n" + c + "^";
	            },
	            next: function next() {
	                if (this.done) {
	                    return this.EOF;
	                }
	                if (!this._input) this.done = true;

	                var token, match, tempMatch, index, col, lines;
	                if (!this._more) {
	                    this.yytext = '';
	                    this.match = '';
	                }
	                var rules = this._currentRules();
	                for (var i = 0; i < rules.length; i++) {
	                    tempMatch = this._input.match(this.rules[rules[i]]);
	                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
	                        match = tempMatch;
	                        index = i;
	                        if (!this.options.flex) break;
	                    }
	                }
	                if (match) {
	                    lines = match[0].match(/(?:\r\n?|\n).*/g);
	                    if (lines) this.yylineno += lines.length;
	                    this.yylloc = { first_line: this.yylloc.last_line,
	                        last_line: this.yylineno + 1,
	                        first_column: this.yylloc.last_column,
	                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length };
	                    this.yytext += match[0];
	                    this.match += match[0];
	                    this.matches = match;
	                    this.yyleng = this.yytext.length;
	                    if (this.options.ranges) {
	                        this.yylloc.range = [this.offset, this.offset += this.yyleng];
	                    }
	                    this._more = false;
	                    this._input = this._input.slice(match[0].length);
	                    this.matched += match[0];
	                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);
	                    if (this.done && this._input) this.done = false;
	                    if (token) return token;else return;
	                }
	                if (this._input === "") {
	                    return this.EOF;
	                } else {
	                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), { text: "", token: null, line: this.yylineno });
	                }
	            },
	            lex: function lex() {
	                var r = this.next();
	                if (typeof r !== 'undefined') {
	                    return r;
	                } else {
	                    return this.lex();
	                }
	            },
	            begin: function begin(condition) {
	                this.conditionStack.push(condition);
	            },
	            popState: function popState() {
	                return this.conditionStack.pop();
	            },
	            _currentRules: function _currentRules() {
	                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
	            },
	            topState: function topState() {
	                return this.conditionStack[this.conditionStack.length - 2];
	            },
	            pushState: function begin(condition) {
	                this.begin(condition);
	            } };
	        lexer.options = {};
	        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START
	        /**/) {

	            function strip(start, end) {
	                return yy_.yytext = yy_.yytext.substr(start, yy_.yyleng - end);
	            }

	            var YYSTATE = YY_START;
	            switch ($avoiding_name_collisions) {
	                case 0:
	                    if (yy_.yytext.slice(-2) === "\\\\") {
	                        strip(0, 1);
	                        this.begin("mu");
	                    } else if (yy_.yytext.slice(-1) === "\\") {
	                        strip(0, 1);
	                        this.begin("emu");
	                    } else {
	                        this.begin("mu");
	                    }
	                    if (yy_.yytext) return 15;

	                    break;
	                case 1:
	                    return 15;
	                    break;
	                case 2:
	                    this.popState();
	                    return 15;

	                    break;
	                case 3:
	                    this.begin('raw');return 15;
	                    break;
	                case 4:
	                    this.popState();
	                    // Should be using `this.topState()` below, but it currently
	                    // returns the second top instead of the first top. Opened an
	                    // issue about it at https://github.com/zaach/jison/issues/291
	                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {
	                        return 15;
	                    } else {
	                        yy_.yytext = yy_.yytext.substr(5, yy_.yyleng - 9);
	                        return 'END_RAW_BLOCK';
	                    }

	                    break;
	                case 5:
	                    return 15;
	                    break;
	                case 6:
	                    this.popState();
	                    return 14;

	                    break;
	                case 7:
	                    return 65;
	                    break;
	                case 8:
	                    return 68;
	                    break;
	                case 9:
	                    return 19;
	                    break;
	                case 10:
	                    this.popState();
	                    this.begin('raw');
	                    return 23;

	                    break;
	                case 11:
	                    return 55;
	                    break;
	                case 12:
	                    return 60;
	                    break;
	                case 13:
	                    return 29;
	                    break;
	                case 14:
	                    return 47;
	                    break;
	                case 15:
	                    this.popState();return 44;
	                    break;
	                case 16:
	                    this.popState();return 44;
	                    break;
	                case 17:
	                    return 34;
	                    break;
	                case 18:
	                    return 39;
	                    break;
	                case 19:
	                    return 51;
	                    break;
	                case 20:
	                    return 48;
	                    break;
	                case 21:
	                    this.unput(yy_.yytext);
	                    this.popState();
	                    this.begin('com');

	                    break;
	                case 22:
	                    this.popState();
	                    return 14;

	                    break;
	                case 23:
	                    return 48;
	                    break;
	                case 24:
	                    return 73;
	                    break;
	                case 25:
	                    return 72;
	                    break;
	                case 26:
	                    return 72;
	                    break;
	                case 27:
	                    return 87;
	                    break;
	                case 28:
	                    // ignore whitespace
	                    break;
	                case 29:
	                    this.popState();return 54;
	                    break;
	                case 30:
	                    this.popState();return 33;
	                    break;
	                case 31:
	                    yy_.yytext = strip(1, 2).replace(/\\"/g, '"');return 80;
	                    break;
	                case 32:
	                    yy_.yytext = strip(1, 2).replace(/\\'/g, "'");return 80;
	                    break;
	                case 33:
	                    return 85;
	                    break;
	                case 34:
	                    return 82;
	                    break;
	                case 35:
	                    return 82;
	                    break;
	                case 36:
	                    return 83;
	                    break;
	                case 37:
	                    return 84;
	                    break;
	                case 38:
	                    return 81;
	                    break;
	                case 39:
	                    return 75;
	                    break;
	                case 40:
	                    return 77;
	                    break;
	                case 41:
	                    return 72;
	                    break;
	                case 42:
	                    yy_.yytext = yy_.yytext.replace(/\\([\\\]])/g, '$1');return 72;
	                    break;
	                case 43:
	                    return 'INVALID';
	                    break;
	                case 44:
	                    return 5;
	                    break;
	            }
	        };
	        lexer.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{(?=[^\/]))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]*?(?=(\{\{\{\{)))/, /^(?:[\s\S]*?--(~)?\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#>)/, /^(?:\{\{(~)?#\*?)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{(~)?!--)/, /^(?:\{\{(~)?![\s\S]*?\}\})/, /^(?:\{\{(~)?\*?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)|])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:undefined(?=([~}\s)])))/, /^(?:null(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:as\s+\|)/, /^(?:\|)/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/, /^(?:\[(\\\]|[^\]])*\])/, /^(?:.)/, /^(?:$)/];
	        lexer.conditions = { "mu": { "rules": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "inclusive": false }, "emu": { "rules": [2], "inclusive": false }, "com": { "rules": [6], "inclusive": false }, "raw": { "rules": [3, 4, 5], "inclusive": false }, "INITIAL": { "rules": [0, 1, 44], "inclusive": true } };
	        return lexer;
	    })();
	    parser.lexer = lexer;
	    function Parser() {
	        this.yy = {};
	    }Parser.prototype = parser;parser.Parser = Parser;
	    return new Parser();
	})();exports.__esModule = true;
	exports['default'] = handlebars;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _visitor = __webpack_require__(25);

	var _visitor2 = _interopRequireDefault(_visitor);

	function WhitespaceControl() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  this.options = options;
	}
	WhitespaceControl.prototype = new _visitor2['default']();

	WhitespaceControl.prototype.Program = function (program) {
	  var doStandalone = !this.options.ignoreStandalone;

	  var isRoot = !this.isRootSeen;
	  this.isRootSeen = true;

	  var body = program.body;
	  for (var i = 0, l = body.length; i < l; i++) {
	    var current = body[i],
	        strip = this.accept(current);

	    if (!strip) {
	      continue;
	    }

	    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),
	        _isNextWhitespace = isNextWhitespace(body, i, isRoot),
	        openStandalone = strip.openStandalone && _isPrevWhitespace,
	        closeStandalone = strip.closeStandalone && _isNextWhitespace,
	        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;

	    if (strip.close) {
	      omitRight(body, i, true);
	    }
	    if (strip.open) {
	      omitLeft(body, i, true);
	    }

	    if (doStandalone && inlineStandalone) {
	      omitRight(body, i);

	      if (omitLeft(body, i)) {
	        // If we are on a standalone node, save the indent info for partials
	        if (current.type === 'PartialStatement') {
	          // Pull out the whitespace from the final line
	          current.indent = /([ \t]+$)/.exec(body[i - 1].original)[1];
	        }
	      }
	    }
	    if (doStandalone && openStandalone) {
	      omitRight((current.program || current.inverse).body);

	      // Strip out the previous content node if it's whitespace only
	      omitLeft(body, i);
	    }
	    if (doStandalone && closeStandalone) {
	      // Always strip the next node
	      omitRight(body, i);

	      omitLeft((current.inverse || current.program).body);
	    }
	  }

	  return program;
	};

	WhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {
	  this.accept(block.program);
	  this.accept(block.inverse);

	  // Find the inverse program that is involed with whitespace stripping.
	  var program = block.program || block.inverse,
	      inverse = block.program && block.inverse,
	      firstInverse = inverse,
	      lastInverse = inverse;

	  if (inverse && inverse.chained) {
	    firstInverse = inverse.body[0].program;

	    // Walk the inverse chain to find the last inverse that is actually in the chain.
	    while (lastInverse.chained) {
	      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;
	    }
	  }

	  var strip = {
	    open: block.openStrip.open,
	    close: block.closeStrip.close,

	    // Determine the standalone candiacy. Basically flag our content as being possibly standalone
	    // so our parent can determine if we actually are standalone
	    openStandalone: isNextWhitespace(program.body),
	    closeStandalone: isPrevWhitespace((firstInverse || program).body)
	  };

	  if (block.openStrip.close) {
	    omitRight(program.body, null, true);
	  }

	  if (inverse) {
	    var inverseStrip = block.inverseStrip;

	    if (inverseStrip.open) {
	      omitLeft(program.body, null, true);
	    }

	    if (inverseStrip.close) {
	      omitRight(firstInverse.body, null, true);
	    }
	    if (block.closeStrip.open) {
	      omitLeft(lastInverse.body, null, true);
	    }

	    // Find standalone else statments
	    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {
	      omitLeft(program.body);
	      omitRight(firstInverse.body);
	    }
	  } else if (block.closeStrip.open) {
	    omitLeft(program.body, null, true);
	  }

	  return strip;
	};

	WhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {
	  return mustache.strip;
	};

	WhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {
	  /* istanbul ignore next */
	  var strip = node.strip || {};
	  return {
	    inlineStandalone: true,
	    open: strip.open,
	    close: strip.close
	  };
	};

	function isPrevWhitespace(body, i, isRoot) {
	  if (i === undefined) {
	    i = body.length;
	  }

	  // Nodes that end with newlines are considered whitespace (but are special
	  // cased for strip operations)
	  var prev = body[i - 1],
	      sibling = body[i - 2];
	  if (!prev) {
	    return isRoot;
	  }

	  if (prev.type === 'ContentStatement') {
	    return (sibling || !isRoot ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(prev.original);
	  }
	}
	function isNextWhitespace(body, i, isRoot) {
	  if (i === undefined) {
	    i = -1;
	  }

	  var next = body[i + 1],
	      sibling = body[i + 2];
	  if (!next) {
	    return isRoot;
	  }

	  if (next.type === 'ContentStatement') {
	    return (sibling || !isRoot ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(next.original);
	  }
	}

	// Marks the node to the right of the position as omitted.
	// I.e. {{foo}}' ' will mark the ' ' node as omitted.
	//
	// If i is undefined, then the first child will be marked as such.
	//
	// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
	// content is met.
	function omitRight(body, i, multiple) {
	  var current = body[i == null ? 0 : i + 1];
	  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {
	    return;
	  }

	  var original = current.value;
	  current.value = current.value.replace(multiple ? /^\s+/ : /^[ \t]*\r?\n?/, '');
	  current.rightStripped = current.value !== original;
	}

	// Marks the node to the left of the position as omitted.
	// I.e. ' '{{foo}} will mark the ' ' node as omitted.
	//
	// If i is undefined then the last child will be marked as such.
	//
	// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
	// content is met.
	function omitLeft(body, i, multiple) {
	  var current = body[i == null ? body.length - 1 : i - 1];
	  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {
	    return;
	  }

	  // We omit the last node if it's whitespace only and not preceeded by a non-content node.
	  var original = current.value;
	  current.value = current.value.replace(multiple ? /\s+$/ : /[ \t]+$/, '');
	  current.leftStripped = current.value !== original;
	  return current.leftStripped;
	}

	exports['default'] = WhitespaceControl;
	module.exports = exports['default'];

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	function Visitor() {
	  this.parents = [];
	}

	Visitor.prototype = {
	  constructor: Visitor,
	  mutating: false,

	  // Visits a given value. If mutating, will replace the value if necessary.
	  acceptKey: function acceptKey(node, name) {
	    var value = this.accept(node[name]);
	    if (this.mutating) {
	      // Hacky sanity check: This may have a few false positives for type for the helper
	      // methods but will generally do the right thing without a lot of overhead.
	      if (value && !Visitor.prototype[value.type]) {
	        throw new _exception2['default']('Unexpected node type "' + value.type + '" found when accepting ' + name + ' on ' + node.type);
	      }
	      node[name] = value;
	    }
	  },

	  // Performs an accept operation with added sanity check to ensure
	  // required keys are not removed.
	  acceptRequired: function acceptRequired(node, name) {
	    this.acceptKey(node, name);

	    if (!node[name]) {
	      throw new _exception2['default'](node.type + ' requires ' + name);
	    }
	  },

	  // Traverses a given array. If mutating, empty respnses will be removed
	  // for child elements.
	  acceptArray: function acceptArray(array) {
	    for (var i = 0, l = array.length; i < l; i++) {
	      this.acceptKey(array, i);

	      if (!array[i]) {
	        array.splice(i, 1);
	        i--;
	        l--;
	      }
	    }
	  },

	  accept: function accept(object) {
	    if (!object) {
	      return;
	    }

	    /* istanbul ignore next: Sanity code */
	    if (!this[object.type]) {
	      throw new _exception2['default']('Unknown type: ' + object.type, object);
	    }

	    if (this.current) {
	      this.parents.unshift(this.current);
	    }
	    this.current = object;

	    var ret = this[object.type](object);

	    this.current = this.parents.shift();

	    if (!this.mutating || ret) {
	      return ret;
	    } else if (ret !== false) {
	      return object;
	    }
	  },

	  Program: function Program(program) {
	    this.acceptArray(program.body);
	  },

	  MustacheStatement: visitSubExpression,
	  Decorator: visitSubExpression,

	  BlockStatement: visitBlock,
	  DecoratorBlock: visitBlock,

	  PartialStatement: visitPartial,
	  PartialBlockStatement: function PartialBlockStatement(partial) {
	    visitPartial.call(this, partial);

	    this.acceptKey(partial, 'program');
	  },

	  ContentStatement: function ContentStatement() /* content */{},
	  CommentStatement: function CommentStatement() /* comment */{},

	  SubExpression: visitSubExpression,

	  PathExpression: function PathExpression() /* path */{},

	  StringLiteral: function StringLiteral() /* string */{},
	  NumberLiteral: function NumberLiteral() /* number */{},
	  BooleanLiteral: function BooleanLiteral() /* bool */{},
	  UndefinedLiteral: function UndefinedLiteral() /* literal */{},
	  NullLiteral: function NullLiteral() /* literal */{},

	  Hash: function Hash(hash) {
	    this.acceptArray(hash.pairs);
	  },
	  HashPair: function HashPair(pair) {
	    this.acceptRequired(pair, 'value');
	  }
	};

	function visitSubExpression(mustache) {
	  this.acceptRequired(mustache, 'path');
	  this.acceptArray(mustache.params);
	  this.acceptKey(mustache, 'hash');
	}
	function visitBlock(block) {
	  visitSubExpression.call(this, block);

	  this.acceptKey(block, 'program');
	  this.acceptKey(block, 'inverse');
	}
	function visitPartial(partial) {
	  this.acceptRequired(partial, 'name');
	  this.acceptArray(partial.params);
	  this.acceptKey(partial, 'hash');
	}

	exports['default'] = Visitor;
	module.exports = exports['default'];

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.SourceLocation = SourceLocation;
	exports.id = id;
	exports.stripFlags = stripFlags;
	exports.stripComment = stripComment;
	exports.preparePath = preparePath;
	exports.prepareMustache = prepareMustache;
	exports.prepareRawBlock = prepareRawBlock;
	exports.prepareBlock = prepareBlock;
	exports.prepareProgram = prepareProgram;
	exports.preparePartialBlock = preparePartialBlock;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	function validateClose(open, close) {
	  close = close.path ? close.path.original : close;

	  if (open.path.original !== close) {
	    var errorNode = { loc: open.path.loc };

	    throw new _exception2['default'](open.path.original + " doesn't match " + close, errorNode);
	  }
	}

	function SourceLocation(source, locInfo) {
	  this.source = source;
	  this.start = {
	    line: locInfo.first_line,
	    column: locInfo.first_column
	  };
	  this.end = {
	    line: locInfo.last_line,
	    column: locInfo.last_column
	  };
	}

	function id(token) {
	  if (/^\[.*\]$/.test(token)) {
	    return token.substr(1, token.length - 2);
	  } else {
	    return token;
	  }
	}

	function stripFlags(open, close) {
	  return {
	    open: open.charAt(2) === '~',
	    close: close.charAt(close.length - 3) === '~'
	  };
	}

	function stripComment(comment) {
	  return comment.replace(/^\{\{~?\!-?-?/, '').replace(/-?-?~?\}\}$/, '');
	}

	function preparePath(data, parts, loc) {
	  loc = this.locInfo(loc);

	  var original = data ? '@' : '',
	      dig = [],
	      depth = 0,
	      depthString = '';

	  for (var i = 0, l = parts.length; i < l; i++) {
	    var part = parts[i].part,

	    // If we have [] syntax then we do not treat path references as operators,
	    // i.e. foo.[this] resolves to approximately context.foo['this']
	    isLiteral = parts[i].original !== part;
	    original += (parts[i].separator || '') + part;

	    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {
	      if (dig.length > 0) {
	        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });
	      } else if (part === '..') {
	        depth++;
	        depthString += '../';
	      }
	    } else {
	      dig.push(part);
	    }
	  }

	  return {
	    type: 'PathExpression',
	    data: data,
	    depth: depth,
	    parts: dig,
	    original: original,
	    loc: loc
	  };
	}

	function prepareMustache(path, params, hash, open, strip, locInfo) {
	  // Must use charAt to support IE pre-10
	  var escapeFlag = open.charAt(3) || open.charAt(2),
	      escaped = escapeFlag !== '{' && escapeFlag !== '&';

	  var decorator = /\*/.test(open);
	  return {
	    type: decorator ? 'Decorator' : 'MustacheStatement',
	    path: path,
	    params: params,
	    hash: hash,
	    escaped: escaped,
	    strip: strip,
	    loc: this.locInfo(locInfo)
	  };
	}

	function prepareRawBlock(openRawBlock, contents, close, locInfo) {
	  validateClose(openRawBlock, close);

	  locInfo = this.locInfo(locInfo);
	  var program = {
	    type: 'Program',
	    body: contents,
	    strip: {},
	    loc: locInfo
	  };

	  return {
	    type: 'BlockStatement',
	    path: openRawBlock.path,
	    params: openRawBlock.params,
	    hash: openRawBlock.hash,
	    program: program,
	    openStrip: {},
	    inverseStrip: {},
	    closeStrip: {},
	    loc: locInfo
	  };
	}

	function prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {
	  if (close && close.path) {
	    validateClose(openBlock, close);
	  }

	  var decorator = /\*/.test(openBlock.open);

	  program.blockParams = openBlock.blockParams;

	  var inverse = undefined,
	      inverseStrip = undefined;

	  if (inverseAndProgram) {
	    if (decorator) {
	      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);
	    }

	    if (inverseAndProgram.chain) {
	      inverseAndProgram.program.body[0].closeStrip = close.strip;
	    }

	    inverseStrip = inverseAndProgram.strip;
	    inverse = inverseAndProgram.program;
	  }

	  if (inverted) {
	    inverted = inverse;
	    inverse = program;
	    program = inverted;
	  }

	  return {
	    type: decorator ? 'DecoratorBlock' : 'BlockStatement',
	    path: openBlock.path,
	    params: openBlock.params,
	    hash: openBlock.hash,
	    program: program,
	    inverse: inverse,
	    openStrip: openBlock.strip,
	    inverseStrip: inverseStrip,
	    closeStrip: close && close.strip,
	    loc: this.locInfo(locInfo)
	  };
	}

	function prepareProgram(statements, loc) {
	  if (!loc && statements.length) {
	    var firstLoc = statements[0].loc,
	        lastLoc = statements[statements.length - 1].loc;

	    /* istanbul ignore else */
	    if (firstLoc && lastLoc) {
	      loc = {
	        source: firstLoc.source,
	        start: {
	          line: firstLoc.start.line,
	          column: firstLoc.start.column
	        },
	        end: {
	          line: lastLoc.end.line,
	          column: lastLoc.end.column
	        }
	      };
	    }
	  }

	  return {
	    type: 'Program',
	    body: statements,
	    strip: {},
	    loc: loc
	  };
	}

	function preparePartialBlock(open, program, close, locInfo) {
	  validateClose(open, close);

	  return {
	    type: 'PartialBlockStatement',
	    name: open.path,
	    params: open.params,
	    hash: open.hash,
	    program: program,
	    openStrip: open.strip,
	    closeStrip: close && close.strip,
	    loc: this.locInfo(locInfo)
	  };
	}

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable new-cap */

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;
	exports.Compiler = Compiler;
	exports.precompile = precompile;
	exports.compile = compile;

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _utils = __webpack_require__(5);

	var _ast = __webpack_require__(21);

	var _ast2 = _interopRequireDefault(_ast);

	var slice = [].slice;

	function Compiler() {}

	// the foundHelper register will disambiguate helper lookup from finding a
	// function in a context. This is necessary for mustache compatibility, which
	// requires that context functions in blocks are evaluated by blockHelperMissing,
	// and then proceed as if the resulting value was provided to blockHelperMissing.

	Compiler.prototype = {
	  compiler: Compiler,

	  equals: function equals(other) {
	    var len = this.opcodes.length;
	    if (other.opcodes.length !== len) {
	      return false;
	    }

	    for (var i = 0; i < len; i++) {
	      var opcode = this.opcodes[i],
	          otherOpcode = other.opcodes[i];
	      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {
	        return false;
	      }
	    }

	    // We know that length is the same between the two arrays because they are directly tied
	    // to the opcode behavior above.
	    len = this.children.length;
	    for (var i = 0; i < len; i++) {
	      if (!this.children[i].equals(other.children[i])) {
	        return false;
	      }
	    }

	    return true;
	  },

	  guid: 0,

	  compile: function compile(program, options) {
	    this.sourceNode = [];
	    this.opcodes = [];
	    this.children = [];
	    this.options = options;
	    this.stringParams = options.stringParams;
	    this.trackIds = options.trackIds;

	    options.blockParams = options.blockParams || [];

	    // These changes will propagate to the other compiler components
	    var knownHelpers = options.knownHelpers;
	    options.knownHelpers = {
	      'helperMissing': true,
	      'blockHelperMissing': true,
	      'each': true,
	      'if': true,
	      'unless': true,
	      'with': true,
	      'log': true,
	      'lookup': true
	    };
	    if (knownHelpers) {
	      for (var _name in knownHelpers) {
	        /* istanbul ignore else */
	        if (_name in knownHelpers) {
	          options.knownHelpers[_name] = knownHelpers[_name];
	        }
	      }
	    }

	    return this.accept(program);
	  },

	  compileProgram: function compileProgram(program) {
	    var childCompiler = new this.compiler(),
	        // eslint-disable-line new-cap
	    result = childCompiler.compile(program, this.options),
	        guid = this.guid++;

	    this.usePartial = this.usePartial || result.usePartial;

	    this.children[guid] = result;
	    this.useDepths = this.useDepths || result.useDepths;

	    return guid;
	  },

	  accept: function accept(node) {
	    /* istanbul ignore next: Sanity code */
	    if (!this[node.type]) {
	      throw new _exception2['default']('Unknown type: ' + node.type, node);
	    }

	    this.sourceNode.unshift(node);
	    var ret = this[node.type](node);
	    this.sourceNode.shift();
	    return ret;
	  },

	  Program: function Program(program) {
	    this.options.blockParams.unshift(program.blockParams);

	    var body = program.body,
	        bodyLength = body.length;
	    for (var i = 0; i < bodyLength; i++) {
	      this.accept(body[i]);
	    }

	    this.options.blockParams.shift();

	    this.isSimple = bodyLength === 1;
	    this.blockParams = program.blockParams ? program.blockParams.length : 0;

	    return this;
	  },

	  BlockStatement: function BlockStatement(block) {
	    transformLiteralToPath(block);

	    var program = block.program,
	        inverse = block.inverse;

	    program = program && this.compileProgram(program);
	    inverse = inverse && this.compileProgram(inverse);

	    var type = this.classifySexpr(block);

	    if (type === 'helper') {
	      this.helperSexpr(block, program, inverse);
	    } else if (type === 'simple') {
	      this.simpleSexpr(block);

	      // now that the simple mustache is resolved, we need to
	      // evaluate it by executing `blockHelperMissing`
	      this.opcode('pushProgram', program);
	      this.opcode('pushProgram', inverse);
	      this.opcode('emptyHash');
	      this.opcode('blockValue', block.path.original);
	    } else {
	      this.ambiguousSexpr(block, program, inverse);

	      // now that the simple mustache is resolved, we need to
	      // evaluate it by executing `blockHelperMissing`
	      this.opcode('pushProgram', program);
	      this.opcode('pushProgram', inverse);
	      this.opcode('emptyHash');
	      this.opcode('ambiguousBlockValue');
	    }

	    this.opcode('append');
	  },

	  DecoratorBlock: function DecoratorBlock(decorator) {
	    var program = decorator.program && this.compileProgram(decorator.program);
	    var params = this.setupFullMustacheParams(decorator, program, undefined),
	        path = decorator.path;

	    this.useDecorators = true;
	    this.opcode('registerDecorator', params.length, path.original);
	  },

	  PartialStatement: function PartialStatement(partial) {
	    this.usePartial = true;

	    var program = partial.program;
	    if (program) {
	      program = this.compileProgram(partial.program);
	    }

	    var params = partial.params;
	    if (params.length > 1) {
	      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);
	    } else if (!params.length) {
	      if (this.options.explicitPartialContext) {
	        this.opcode('pushLiteral', 'undefined');
	      } else {
	        params.push({ type: 'PathExpression', parts: [], depth: 0 });
	      }
	    }

	    var partialName = partial.name.original,
	        isDynamic = partial.name.type === 'SubExpression';
	    if (isDynamic) {
	      this.accept(partial.name);
	    }

	    this.setupFullMustacheParams(partial, program, undefined, true);

	    var indent = partial.indent || '';
	    if (this.options.preventIndent && indent) {
	      this.opcode('appendContent', indent);
	      indent = '';
	    }

	    this.opcode('invokePartial', isDynamic, partialName, indent);
	    this.opcode('append');
	  },
	  PartialBlockStatement: function PartialBlockStatement(partialBlock) {
	    this.PartialStatement(partialBlock);
	  },

	  MustacheStatement: function MustacheStatement(mustache) {
	    this.SubExpression(mustache);

	    if (mustache.escaped && !this.options.noEscape) {
	      this.opcode('appendEscaped');
	    } else {
	      this.opcode('append');
	    }
	  },
	  Decorator: function Decorator(decorator) {
	    this.DecoratorBlock(decorator);
	  },

	  ContentStatement: function ContentStatement(content) {
	    if (content.value) {
	      this.opcode('appendContent', content.value);
	    }
	  },

	  CommentStatement: function CommentStatement() {},

	  SubExpression: function SubExpression(sexpr) {
	    transformLiteralToPath(sexpr);
	    var type = this.classifySexpr(sexpr);

	    if (type === 'simple') {
	      this.simpleSexpr(sexpr);
	    } else if (type === 'helper') {
	      this.helperSexpr(sexpr);
	    } else {
	      this.ambiguousSexpr(sexpr);
	    }
	  },
	  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {
	    var path = sexpr.path,
	        name = path.parts[0],
	        isBlock = program != null || inverse != null;

	    this.opcode('getContext', path.depth);

	    this.opcode('pushProgram', program);
	    this.opcode('pushProgram', inverse);

	    path.strict = true;
	    this.accept(path);

	    this.opcode('invokeAmbiguous', name, isBlock);
	  },

	  simpleSexpr: function simpleSexpr(sexpr) {
	    var path = sexpr.path;
	    path.strict = true;
	    this.accept(path);
	    this.opcode('resolvePossibleLambda');
	  },

	  helperSexpr: function helperSexpr(sexpr, program, inverse) {
	    var params = this.setupFullMustacheParams(sexpr, program, inverse),
	        path = sexpr.path,
	        name = path.parts[0];

	    if (this.options.knownHelpers[name]) {
	      this.opcode('invokeKnownHelper', params.length, name);
	    } else if (this.options.knownHelpersOnly) {
	      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);
	    } else {
	      path.strict = true;
	      path.falsy = true;

	      this.accept(path);
	      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));
	    }
	  },

	  PathExpression: function PathExpression(path) {
	    this.addDepth(path.depth);
	    this.opcode('getContext', path.depth);

	    var name = path.parts[0],
	        scoped = _ast2['default'].helpers.scopedId(path),
	        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);

	    if (blockParamId) {
	      this.opcode('lookupBlockParam', blockParamId, path.parts);
	    } else if (!name) {
	      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`
	      this.opcode('pushContext');
	    } else if (path.data) {
	      this.options.data = true;
	      this.opcode('lookupData', path.depth, path.parts, path.strict);
	    } else {
	      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);
	    }
	  },

	  StringLiteral: function StringLiteral(string) {
	    this.opcode('pushString', string.value);
	  },

	  NumberLiteral: function NumberLiteral(number) {
	    this.opcode('pushLiteral', number.value);
	  },

	  BooleanLiteral: function BooleanLiteral(bool) {
	    this.opcode('pushLiteral', bool.value);
	  },

	  UndefinedLiteral: function UndefinedLiteral() {
	    this.opcode('pushLiteral', 'undefined');
	  },

	  NullLiteral: function NullLiteral() {
	    this.opcode('pushLiteral', 'null');
	  },

	  Hash: function Hash(hash) {
	    var pairs = hash.pairs,
	        i = 0,
	        l = pairs.length;

	    this.opcode('pushHash');

	    for (; i < l; i++) {
	      this.pushParam(pairs[i].value);
	    }
	    while (i--) {
	      this.opcode('assignToHash', pairs[i].key);
	    }
	    this.opcode('popHash');
	  },

	  // HELPERS
	  opcode: function opcode(name) {
	    this.opcodes.push({ opcode: name, args: slice.call(arguments, 1), loc: this.sourceNode[0].loc });
	  },

	  addDepth: function addDepth(depth) {
	    if (!depth) {
	      return;
	    }

	    this.useDepths = true;
	  },

	  classifySexpr: function classifySexpr(sexpr) {
	    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);

	    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);

	    // a mustache is an eligible helper if:
	    // * its id is simple (a single part, not `this` or `..`)
	    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);

	    // if a mustache is an eligible helper but not a definite
	    // helper, it is ambiguous, and will be resolved in a later
	    // pass or at runtime.
	    var isEligible = !isBlockParam && (isHelper || isSimple);

	    // if ambiguous, we can possibly resolve the ambiguity now
	    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.
	    if (isEligible && !isHelper) {
	      var _name2 = sexpr.path.parts[0],
	          options = this.options;

	      if (options.knownHelpers[_name2]) {
	        isHelper = true;
	      } else if (options.knownHelpersOnly) {
	        isEligible = false;
	      }
	    }

	    if (isHelper) {
	      return 'helper';
	    } else if (isEligible) {
	      return 'ambiguous';
	    } else {
	      return 'simple';
	    }
	  },

	  pushParams: function pushParams(params) {
	    for (var i = 0, l = params.length; i < l; i++) {
	      this.pushParam(params[i]);
	    }
	  },

	  pushParam: function pushParam(val) {
	    var value = val.value != null ? val.value : val.original || '';

	    if (this.stringParams) {
	      if (value.replace) {
	        value = value.replace(/^(\.?\.\/)*/g, '').replace(/\//g, '.');
	      }

	      if (val.depth) {
	        this.addDepth(val.depth);
	      }
	      this.opcode('getContext', val.depth || 0);
	      this.opcode('pushStringParam', value, val.type);

	      if (val.type === 'SubExpression') {
	        // SubExpressions get evaluated and passed in
	        // in string params mode.
	        this.accept(val);
	      }
	    } else {
	      if (this.trackIds) {
	        var blockParamIndex = undefined;
	        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {
	          blockParamIndex = this.blockParamIndex(val.parts[0]);
	        }
	        if (blockParamIndex) {
	          var blockParamChild = val.parts.slice(1).join('.');
	          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);
	        } else {
	          value = val.original || value;
	          if (value.replace) {
	            value = value.replace(/^this(?:\.|$)/, '').replace(/^\.\//, '').replace(/^\.$/, '');
	          }

	          this.opcode('pushId', val.type, value);
	        }
	      }
	      this.accept(val);
	    }
	  },

	  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {
	    var params = sexpr.params;
	    this.pushParams(params);

	    this.opcode('pushProgram', program);
	    this.opcode('pushProgram', inverse);

	    if (sexpr.hash) {
	      this.accept(sexpr.hash);
	    } else {
	      this.opcode('emptyHash', omitEmpty);
	    }

	    return params;
	  },

	  blockParamIndex: function blockParamIndex(name) {
	    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {
	      var blockParams = this.options.blockParams[depth],
	          param = blockParams && _utils.indexOf(blockParams, name);
	      if (blockParams && param >= 0) {
	        return [depth, param];
	      }
	    }
	  }
	};

	function precompile(input, options, env) {
	  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
	    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);
	  }

	  options = options || {};
	  if (!('data' in options)) {
	    options.data = true;
	  }
	  if (options.compat) {
	    options.useDepths = true;
	  }

	  var ast = env.parse(input, options),
	      environment = new env.Compiler().compile(ast, options);
	  return new env.JavaScriptCompiler().compile(environment, options);
	}

	function compile(input, options, env) {
	  if (options === undefined) options = {};

	  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
	    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);
	  }

	  if (!('data' in options)) {
	    options.data = true;
	  }
	  if (options.compat) {
	    options.useDepths = true;
	  }

	  var compiled = undefined;

	  function compileInput() {
	    var ast = env.parse(input, options),
	        environment = new env.Compiler().compile(ast, options),
	        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);
	    return env.template(templateSpec);
	  }

	  // Template is only compiled on first use and cached after that point.
	  function ret(context, execOptions) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled.call(this, context, execOptions);
	  }
	  ret._setup = function (setupOptions) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled._setup(setupOptions);
	  };
	  ret._child = function (i, data, blockParams, depths) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled._child(i, data, blockParams, depths);
	  };
	  return ret;
	}

	function argEquals(a, b) {
	  if (a === b) {
	    return true;
	  }

	  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {
	    for (var i = 0; i < a.length; i++) {
	      if (!argEquals(a[i], b[i])) {
	        return false;
	      }
	    }
	    return true;
	  }
	}

	function transformLiteralToPath(sexpr) {
	  if (!sexpr.path.parts) {
	    var literal = sexpr.path;
	    // Casting to string here to make false and 0 literal values play nicely with the rest
	    // of the system.
	    sexpr.path = {
	      type: 'PathExpression',
	      data: false,
	      depth: 0,
	      parts: [literal.original + ''],
	      original: literal.original + '',
	      loc: literal.loc
	    };
	  }
	}

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(1)['default'];

	exports.__esModule = true;

	var _base = __webpack_require__(4);

	var _exception = __webpack_require__(6);

	var _exception2 = _interopRequireDefault(_exception);

	var _utils = __webpack_require__(5);

	var _codeGen = __webpack_require__(29);

	var _codeGen2 = _interopRequireDefault(_codeGen);

	function Literal(value) {
	  this.value = value;
	}

	function JavaScriptCompiler() {}

	JavaScriptCompiler.prototype = {
	  // PUBLIC API: You can override these methods in a subclass to provide
	  // alternative compiled forms for name lookup and buffering semantics
	  nameLookup: function nameLookup(parent, name /* , type*/) {
	    if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {
	      return [parent, '.', name];
	    } else {
	      return [parent, '[', JSON.stringify(name), ']'];
	    }
	  },
	  depthedLookup: function depthedLookup(name) {
	    return [this.aliasable('container.lookup'), '(depths, "', name, '")'];
	  },

	  compilerInfo: function compilerInfo() {
	    var revision = _base.COMPILER_REVISION,
	        versions = _base.REVISION_CHANGES[revision];
	    return [revision, versions];
	  },

	  appendToBuffer: function appendToBuffer(source, location, explicit) {
	    // Force a source as this simplifies the merge logic.
	    if (!_utils.isArray(source)) {
	      source = [source];
	    }
	    source = this.source.wrap(source, location);

	    if (this.environment.isSimple) {
	      return ['return ', source, ';'];
	    } else if (explicit) {
	      // This is a case where the buffer operation occurs as a child of another
	      // construct, generally braces. We have to explicitly output these buffer
	      // operations to ensure that the emitted code goes in the correct location.
	      return ['buffer += ', source, ';'];
	    } else {
	      source.appendToBuffer = true;
	      return source;
	    }
	  },

	  initializeBuffer: function initializeBuffer() {
	    return this.quotedString('');
	  },
	  // END PUBLIC API

	  compile: function compile(environment, options, context, asObject) {
	    this.environment = environment;
	    this.options = options;
	    this.stringParams = this.options.stringParams;
	    this.trackIds = this.options.trackIds;
	    this.precompile = !asObject;

	    this.name = this.environment.name;
	    this.isChild = !!context;
	    this.context = context || {
	      decorators: [],
	      programs: [],
	      environments: []
	    };

	    this.preamble();

	    this.stackSlot = 0;
	    this.stackVars = [];
	    this.aliases = {};
	    this.registers = { list: [] };
	    this.hashes = [];
	    this.compileStack = [];
	    this.inlineStack = [];
	    this.blockParams = [];

	    this.compileChildren(environment, options);

	    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;
	    this.useBlockParams = this.useBlockParams || environment.useBlockParams;

	    var opcodes = environment.opcodes,
	        opcode = undefined,
	        firstLoc = undefined,
	        i = undefined,
	        l = undefined;

	    for (i = 0, l = opcodes.length; i < l; i++) {
	      opcode = opcodes[i];

	      this.source.currentLocation = opcode.loc;
	      firstLoc = firstLoc || opcode.loc;
	      this[opcode.opcode].apply(this, opcode.args);
	    }

	    // Flush any trailing content that might be pending.
	    this.source.currentLocation = firstLoc;
	    this.pushSource('');

	    /* istanbul ignore next */
	    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {
	      throw new _exception2['default']('Compile completed with content left on stack');
	    }

	    if (!this.decorators.isEmpty()) {
	      this.useDecorators = true;

	      this.decorators.prepend('var decorators = container.decorators;\n');
	      this.decorators.push('return fn;');

	      if (asObject) {
	        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);
	      } else {
	        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\n');
	        this.decorators.push('}\n');
	        this.decorators = this.decorators.merge();
	      }
	    } else {
	      this.decorators = undefined;
	    }

	    var fn = this.createFunctionContext(asObject);
	    if (!this.isChild) {
	      var ret = {
	        compiler: this.compilerInfo(),
	        main: fn
	      };

	      if (this.decorators) {
	        ret.main_d = this.decorators; // eslint-disable-line camelcase
	        ret.useDecorators = true;
	      }

	      var _context = this.context;
	      var programs = _context.programs;
	      var decorators = _context.decorators;

	      for (i = 0, l = programs.length; i < l; i++) {
	        if (programs[i]) {
	          ret[i] = programs[i];
	          if (decorators[i]) {
	            ret[i + '_d'] = decorators[i];
	            ret.useDecorators = true;
	          }
	        }
	      }

	      if (this.environment.usePartial) {
	        ret.usePartial = true;
	      }
	      if (this.options.data) {
	        ret.useData = true;
	      }
	      if (this.useDepths) {
	        ret.useDepths = true;
	      }
	      if (this.useBlockParams) {
	        ret.useBlockParams = true;
	      }
	      if (this.options.compat) {
	        ret.compat = true;
	      }

	      if (!asObject) {
	        ret.compiler = JSON.stringify(ret.compiler);

	        this.source.currentLocation = { start: { line: 1, column: 0 } };
	        ret = this.objectLiteral(ret);

	        if (options.srcName) {
	          ret = ret.toStringWithSourceMap({ file: options.destName });
	          ret.map = ret.map && ret.map.toString();
	        } else {
	          ret = ret.toString();
	        }
	      } else {
	        ret.compilerOptions = this.options;
	      }

	      return ret;
	    } else {
	      return fn;
	    }
	  },

	  preamble: function preamble() {
	    // track the last context pushed into place to allow skipping the
	    // getContext opcode when it would be a noop
	    this.lastContext = 0;
	    this.source = new _codeGen2['default'](this.options.srcName);
	    this.decorators = new _codeGen2['default'](this.options.srcName);
	  },

	  createFunctionContext: function createFunctionContext(asObject) {
	    var varDeclarations = '';

	    var locals = this.stackVars.concat(this.registers.list);
	    if (locals.length > 0) {
	      varDeclarations += ', ' + locals.join(', ');
	    }

	    // Generate minimizer alias mappings
	    //
	    // When using true SourceNodes, this will update all references to the given alias
	    // as the source nodes are reused in situ. For the non-source node compilation mode,
	    // aliases will not be used, but this case is already being run on the client and
	    // we aren't concern about minimizing the template size.
	    var aliasCount = 0;
	    for (var alias in this.aliases) {
	      // eslint-disable-line guard-for-in
	      var node = this.aliases[alias];

	      if (this.aliases.hasOwnProperty(alias) && node.children && node.referenceCount > 1) {
	        varDeclarations += ', alias' + ++aliasCount + '=' + alias;
	        node.children[0] = 'alias' + aliasCount;
	      }
	    }

	    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];

	    if (this.useBlockParams || this.useDepths) {
	      params.push('blockParams');
	    }
	    if (this.useDepths) {
	      params.push('depths');
	    }

	    // Perform a second pass over the output to merge content when possible
	    var source = this.mergeSource(varDeclarations);

	    if (asObject) {
	      params.push(source);

	      return Function.apply(this, params);
	    } else {
	      return this.source.wrap(['function(', params.join(','), ') {\n  ', source, '}']);
	    }
	  },
	  mergeSource: function mergeSource(varDeclarations) {
	    var isSimple = this.environment.isSimple,
	        appendOnly = !this.forceBuffer,
	        appendFirst = undefined,
	        sourceSeen = undefined,
	        bufferStart = undefined,
	        bufferEnd = undefined;
	    this.source.each(function (line) {
	      if (line.appendToBuffer) {
	        if (bufferStart) {
	          line.prepend('  + ');
	        } else {
	          bufferStart = line;
	        }
	        bufferEnd = line;
	      } else {
	        if (bufferStart) {
	          if (!sourceSeen) {
	            appendFirst = true;
	          } else {
	            bufferStart.prepend('buffer += ');
	          }
	          bufferEnd.add(';');
	          bufferStart = bufferEnd = undefined;
	        }

	        sourceSeen = true;
	        if (!isSimple) {
	          appendOnly = false;
	        }
	      }
	    });

	    if (appendOnly) {
	      if (bufferStart) {
	        bufferStart.prepend('return ');
	        bufferEnd.add(';');
	      } else if (!sourceSeen) {
	        this.source.push('return "";');
	      }
	    } else {
	      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());

	      if (bufferStart) {
	        bufferStart.prepend('return buffer + ');
	        bufferEnd.add(';');
	      } else {
	        this.source.push('return buffer;');
	      }
	    }

	    if (varDeclarations) {
	      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\n'));
	    }

	    return this.source.merge();
	  },

	  // [blockValue]
	  //
	  // On stack, before: hash, inverse, program, value
	  // On stack, after: return value of blockHelperMissing
	  //
	  // The purpose of this opcode is to take a block of the form
	  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and
	  // replace it on the stack with the result of properly
	  // invoking blockHelperMissing.
	  blockValue: function blockValue(name) {
	    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),
	        params = [this.contextName(0)];
	    this.setupHelperArgs(name, 0, params);

	    var blockName = this.popStack();
	    params.splice(1, 0, blockName);

	    this.push(this.source.functionCall(blockHelperMissing, 'call', params));
	  },

	  // [ambiguousBlockValue]
	  //
	  // On stack, before: hash, inverse, program, value
	  // Compiler value, before: lastHelper=value of last found helper, if any
	  // On stack, after, if no lastHelper: same as [blockValue]
	  // On stack, after, if lastHelper: value
	  ambiguousBlockValue: function ambiguousBlockValue() {
	    // We're being a bit cheeky and reusing the options value from the prior exec
	    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),
	        params = [this.contextName(0)];
	    this.setupHelperArgs('', 0, params, true);

	    this.flushInline();

	    var current = this.topStack();
	    params.splice(1, 0, current);

	    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);
	  },

	  // [appendContent]
	  //
	  // On stack, before: ...
	  // On stack, after: ...
	  //
	  // Appends the string value of `content` to the current buffer
	  appendContent: function appendContent(content) {
	    if (this.pendingContent) {
	      content = this.pendingContent + content;
	    } else {
	      this.pendingLocation = this.source.currentLocation;
	    }

	    this.pendingContent = content;
	  },

	  // [append]
	  //
	  // On stack, before: value, ...
	  // On stack, after: ...
	  //
	  // Coerces `value` to a String and appends it to the current buffer.
	  //
	  // If `value` is truthy, or 0, it is coerced into a string and appended
	  // Otherwise, the empty string is appended
	  append: function append() {
	    if (this.isInline()) {
	      this.replaceStack(function (current) {
	        return [' != null ? ', current, ' : ""'];
	      });

	      this.pushSource(this.appendToBuffer(this.popStack()));
	    } else {
	      var local = this.popStack();
	      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);
	      if (this.environment.isSimple) {
	        this.pushSource(['else { ', this.appendToBuffer("''", undefined, true), ' }']);
	      }
	    }
	  },

	  // [appendEscaped]
	  //
	  // On stack, before: value, ...
	  // On stack, after: ...
	  //
	  // Escape `value` and append it to the buffer
	  appendEscaped: function appendEscaped() {
	    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));
	  },

	  // [getContext]
	  //
	  // On stack, before: ...
	  // On stack, after: ...
	  // Compiler value, after: lastContext=depth
	  //
	  // Set the value of the `lastContext` compiler value to the depth
	  getContext: function getContext(depth) {
	    this.lastContext = depth;
	  },

	  // [pushContext]
	  //
	  // On stack, before: ...
	  // On stack, after: currentContext, ...
	  //
	  // Pushes the value of the current context onto the stack.
	  pushContext: function pushContext() {
	    this.pushStackLiteral(this.contextName(this.lastContext));
	  },

	  // [lookupOnContext]
	  //
	  // On stack, before: ...
	  // On stack, after: currentContext[name], ...
	  //
	  // Looks up the value of `name` on the current context and pushes
	  // it onto the stack.
	  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {
	    var i = 0;

	    if (!scoped && this.options.compat && !this.lastContext) {
	      // The depthed query is expected to handle the undefined logic for the root level that
	      // is implemented below, so we evaluate that directly in compat mode
	      this.push(this.depthedLookup(parts[i++]));
	    } else {
	      this.pushContext();
	    }

	    this.resolvePath('context', parts, i, falsy, strict);
	  },

	  // [lookupBlockParam]
	  //
	  // On stack, before: ...
	  // On stack, after: blockParam[name], ...
	  //
	  // Looks up the value of `parts` on the given block param and pushes
	  // it onto the stack.
	  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {
	    this.useBlockParams = true;

	    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);
	    this.resolvePath('context', parts, 1);
	  },

	  // [lookupData]
	  //
	  // On stack, before: ...
	  // On stack, after: data, ...
	  //
	  // Push the data lookup operator
	  lookupData: function lookupData(depth, parts, strict) {
	    if (!depth) {
	      this.pushStackLiteral('data');
	    } else {
	      this.pushStackLiteral('container.data(data, ' + depth + ')');
	    }

	    this.resolvePath('data', parts, 0, true, strict);
	  },

	  resolvePath: function resolvePath(type, parts, i, falsy, strict) {
	    // istanbul ignore next

	    var _this = this;

	    if (this.options.strict || this.options.assumeObjects) {
	      this.push(strictLookup(this.options.strict && strict, this, parts, type));
	      return;
	    }

	    var len = parts.length;
	    for (; i < len; i++) {
	      /* eslint-disable no-loop-func */
	      this.replaceStack(function (current) {
	        var lookup = _this.nameLookup(current, parts[i], type);
	        // We want to ensure that zero and false are handled properly if the context (falsy flag)
	        // needs to have the special handling for these values.
	        if (!falsy) {
	          return [' != null ? ', lookup, ' : ', current];
	        } else {
	          // Otherwise we can use generic falsy handling
	          return [' && ', lookup];
	        }
	      });
	      /* eslint-enable no-loop-func */
	    }
	  },

	  // [resolvePossibleLambda]
	  //
	  // On stack, before: value, ...
	  // On stack, after: resolved value, ...
	  //
	  // If the `value` is a lambda, replace it on the stack by
	  // the return value of the lambda
	  resolvePossibleLambda: function resolvePossibleLambda() {
	    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);
	  },

	  // [pushStringParam]
	  //
	  // On stack, before: ...
	  // On stack, after: string, currentContext, ...
	  //
	  // This opcode is designed for use in string mode, which
	  // provides the string value of a parameter along with its
	  // depth rather than resolving it immediately.
	  pushStringParam: function pushStringParam(string, type) {
	    this.pushContext();
	    this.pushString(type);

	    // If it's a subexpression, the string result
	    // will be pushed after this opcode.
	    if (type !== 'SubExpression') {
	      if (typeof string === 'string') {
	        this.pushString(string);
	      } else {
	        this.pushStackLiteral(string);
	      }
	    }
	  },

	  emptyHash: function emptyHash(omitEmpty) {
	    if (this.trackIds) {
	      this.push('{}'); // hashIds
	    }
	    if (this.stringParams) {
	      this.push('{}'); // hashContexts
	      this.push('{}'); // hashTypes
	    }
	    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');
	  },
	  pushHash: function pushHash() {
	    if (this.hash) {
	      this.hashes.push(this.hash);
	    }
	    this.hash = { values: [], types: [], contexts: [], ids: [] };
	  },
	  popHash: function popHash() {
	    var hash = this.hash;
	    this.hash = this.hashes.pop();

	    if (this.trackIds) {
	      this.push(this.objectLiteral(hash.ids));
	    }
	    if (this.stringParams) {
	      this.push(this.objectLiteral(hash.contexts));
	      this.push(this.objectLiteral(hash.types));
	    }

	    this.push(this.objectLiteral(hash.values));
	  },

	  // [pushString]
	  //
	  // On stack, before: ...
	  // On stack, after: quotedString(string), ...
	  //
	  // Push a quoted version of `string` onto the stack
	  pushString: function pushString(string) {
	    this.pushStackLiteral(this.quotedString(string));
	  },

	  // [pushLiteral]
	  //
	  // On stack, before: ...
	  // On stack, after: value, ...
	  //
	  // Pushes a value onto the stack. This operation prevents
	  // the compiler from creating a temporary variable to hold
	  // it.
	  pushLiteral: function pushLiteral(value) {
	    this.pushStackLiteral(value);
	  },

	  // [pushProgram]
	  //
	  // On stack, before: ...
	  // On stack, after: program(guid), ...
	  //
	  // Push a program expression onto the stack. This takes
	  // a compile-time guid and converts it into a runtime-accessible
	  // expression.
	  pushProgram: function pushProgram(guid) {
	    if (guid != null) {
	      this.pushStackLiteral(this.programExpression(guid));
	    } else {
	      this.pushStackLiteral(null);
	    }
	  },

	  // [registerDecorator]
	  //
	  // On stack, before: hash, program, params..., ...
	  // On stack, after: ...
	  //
	  // Pops off the decorator's parameters, invokes the decorator,
	  // and inserts the decorator into the decorators list.
	  registerDecorator: function registerDecorator(paramSize, name) {
	    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),
	        options = this.setupHelperArgs(name, paramSize);

	    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);
	  },

	  // [invokeHelper]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of helper invocation
	  //
	  // Pops off the helper's parameters, invokes the helper,
	  // and pushes the helper's return value onto the stack.
	  //
	  // If the helper is not found, `helperMissing` is called.
	  invokeHelper: function invokeHelper(paramSize, name, isSimple) {
	    var nonHelper = this.popStack(),
	        helper = this.setupHelper(paramSize, name),
	        simple = isSimple ? [helper.name, ' || '] : '';

	    var lookup = ['('].concat(simple, nonHelper);
	    if (!this.options.strict) {
	      lookup.push(' || ', this.aliasable('helpers.helperMissing'));
	    }
	    lookup.push(')');

	    this.push(this.source.functionCall(lookup, 'call', helper.callParams));
	  },

	  // [invokeKnownHelper]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of helper invocation
	  //
	  // This operation is used when the helper is known to exist,
	  // so a `helperMissing` fallback is not required.
	  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {
	    var helper = this.setupHelper(paramSize, name);
	    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));
	  },

	  // [invokeAmbiguous]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of disambiguation
	  //
	  // This operation is used when an expression like `{{foo}}`
	  // is provided, but we don't know at compile-time whether it
	  // is a helper or a path.
	  //
	  // This operation emits more code than the other options,
	  // and can be avoided by passing the `knownHelpers` and
	  // `knownHelpersOnly` flags at compile-time.
	  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {
	    this.useRegister('helper');

	    var nonHelper = this.popStack();

	    this.emptyHash();
	    var helper = this.setupHelper(0, name, helperCall);

	    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');

	    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];
	    if (!this.options.strict) {
	      lookup[0] = '(helper = ';
	      lookup.push(' != null ? helper : ', this.aliasable('helpers.helperMissing'));
	    }

	    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('"function"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);
	  },

	  // [invokePartial]
	  //
	  // On stack, before: context, ...
	  // On stack after: result of partial invocation
	  //
	  // This operation pops off a context, invokes a partial with that context,
	  // and pushes the result of the invocation back.
	  invokePartial: function invokePartial(isDynamic, name, indent) {
	    var params = [],
	        options = this.setupParams(name, 1, params);

	    if (isDynamic) {
	      name = this.popStack();
	      delete options.name;
	    }

	    if (indent) {
	      options.indent = JSON.stringify(indent);
	    }
	    options.helpers = 'helpers';
	    options.partials = 'partials';
	    options.decorators = 'container.decorators';

	    if (!isDynamic) {
	      params.unshift(this.nameLookup('partials', name, 'partial'));
	    } else {
	      params.unshift(name);
	    }

	    if (this.options.compat) {
	      options.depths = 'depths';
	    }
	    options = this.objectLiteral(options);
	    params.push(options);

	    this.push(this.source.functionCall('container.invokePartial', '', params));
	  },

	  // [assignToHash]
	  //
	  // On stack, before: value, ..., hash, ...
	  // On stack, after: ..., hash, ...
	  //
	  // Pops a value off the stack and assigns it to the current hash
	  assignToHash: function assignToHash(key) {
	    var value = this.popStack(),
	        context = undefined,
	        type = undefined,
	        id = undefined;

	    if (this.trackIds) {
	      id = this.popStack();
	    }
	    if (this.stringParams) {
	      type = this.popStack();
	      context = this.popStack();
	    }

	    var hash = this.hash;
	    if (context) {
	      hash.contexts[key] = context;
	    }
	    if (type) {
	      hash.types[key] = type;
	    }
	    if (id) {
	      hash.ids[key] = id;
	    }
	    hash.values[key] = value;
	  },

	  pushId: function pushId(type, name, child) {
	    if (type === 'BlockParam') {
	      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));
	    } else if (type === 'PathExpression') {
	      this.pushString(name);
	    } else if (type === 'SubExpression') {
	      this.pushStackLiteral('true');
	    } else {
	      this.pushStackLiteral('null');
	    }
	  },

	  // HELPERS

	  compiler: JavaScriptCompiler,

	  compileChildren: function compileChildren(environment, options) {
	    var children = environment.children,
	        child = undefined,
	        compiler = undefined;

	    for (var i = 0, l = children.length; i < l; i++) {
	      child = children[i];
	      compiler = new this.compiler(); // eslint-disable-line new-cap

	      var index = this.matchExistingProgram(child);

	      if (index == null) {
	        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children
	        index = this.context.programs.length;
	        child.index = index;
	        child.name = 'program' + index;
	        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);
	        this.context.decorators[index] = compiler.decorators;
	        this.context.environments[index] = child;

	        this.useDepths = this.useDepths || compiler.useDepths;
	        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;
	      } else {
	        child.index = index;
	        child.name = 'program' + index;

	        this.useDepths = this.useDepths || child.useDepths;
	        this.useBlockParams = this.useBlockParams || child.useBlockParams;
	      }
	    }
	  },
	  matchExistingProgram: function matchExistingProgram(child) {
	    for (var i = 0, len = this.context.environments.length; i < len; i++) {
	      var environment = this.context.environments[i];
	      if (environment && environment.equals(child)) {
	        return i;
	      }
	    }
	  },

	  programExpression: function programExpression(guid) {
	    var child = this.environment.children[guid],
	        programParams = [child.index, 'data', child.blockParams];

	    if (this.useBlockParams || this.useDepths) {
	      programParams.push('blockParams');
	    }
	    if (this.useDepths) {
	      programParams.push('depths');
	    }

	    return 'container.program(' + programParams.join(', ') + ')';
	  },

	  useRegister: function useRegister(name) {
	    if (!this.registers[name]) {
	      this.registers[name] = true;
	      this.registers.list.push(name);
	    }
	  },

	  push: function push(expr) {
	    if (!(expr instanceof Literal)) {
	      expr = this.source.wrap(expr);
	    }

	    this.inlineStack.push(expr);
	    return expr;
	  },

	  pushStackLiteral: function pushStackLiteral(item) {
	    this.push(new Literal(item));
	  },

	  pushSource: function pushSource(source) {
	    if (this.pendingContent) {
	      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));
	      this.pendingContent = undefined;
	    }

	    if (source) {
	      this.source.push(source);
	    }
	  },

	  replaceStack: function replaceStack(callback) {
	    var prefix = ['('],
	        stack = undefined,
	        createdStack = undefined,
	        usedLiteral = undefined;

	    /* istanbul ignore next */
	    if (!this.isInline()) {
	      throw new _exception2['default']('replaceStack on non-inline');
	    }

	    // We want to merge the inline statement into the replacement statement via ','
	    var top = this.popStack(true);

	    if (top instanceof Literal) {
	      // Literals do not need to be inlined
	      stack = [top.value];
	      prefix = ['(', stack];
	      usedLiteral = true;
	    } else {
	      // Get or create the current stack name for use by the inline
	      createdStack = true;
	      var _name = this.incrStack();

	      prefix = ['((', this.push(_name), ' = ', top, ')'];
	      stack = this.topStack();
	    }

	    var item = callback.call(this, stack);

	    if (!usedLiteral) {
	      this.popStack();
	    }
	    if (createdStack) {
	      this.stackSlot--;
	    }
	    this.push(prefix.concat(item, ')'));
	  },

	  incrStack: function incrStack() {
	    this.stackSlot++;
	    if (this.stackSlot > this.stackVars.length) {
	      this.stackVars.push('stack' + this.stackSlot);
	    }
	    return this.topStackName();
	  },
	  topStackName: function topStackName() {
	    return 'stack' + this.stackSlot;
	  },
	  flushInline: function flushInline() {
	    var inlineStack = this.inlineStack;
	    this.inlineStack = [];
	    for (var i = 0, len = inlineStack.length; i < len; i++) {
	      var entry = inlineStack[i];
	      /* istanbul ignore if */
	      if (entry instanceof Literal) {
	        this.compileStack.push(entry);
	      } else {
	        var stack = this.incrStack();
	        this.pushSource([stack, ' = ', entry, ';']);
	        this.compileStack.push(stack);
	      }
	    }
	  },
	  isInline: function isInline() {
	    return this.inlineStack.length;
	  },

	  popStack: function popStack(wrapped) {
	    var inline = this.isInline(),
	        item = (inline ? this.inlineStack : this.compileStack).pop();

	    if (!wrapped && item instanceof Literal) {
	      return item.value;
	    } else {
	      if (!inline) {
	        /* istanbul ignore next */
	        if (!this.stackSlot) {
	          throw new _exception2['default']('Invalid stack pop');
	        }
	        this.stackSlot--;
	      }
	      return item;
	    }
	  },

	  topStack: function topStack() {
	    var stack = this.isInline() ? this.inlineStack : this.compileStack,
	        item = stack[stack.length - 1];

	    /* istanbul ignore if */
	    if (item instanceof Literal) {
	      return item.value;
	    } else {
	      return item;
	    }
	  },

	  contextName: function contextName(context) {
	    if (this.useDepths && context) {
	      return 'depths[' + context + ']';
	    } else {
	      return 'depth' + context;
	    }
	  },

	  quotedString: function quotedString(str) {
	    return this.source.quotedString(str);
	  },

	  objectLiteral: function objectLiteral(obj) {
	    return this.source.objectLiteral(obj);
	  },

	  aliasable: function aliasable(name) {
	    var ret = this.aliases[name];
	    if (ret) {
	      ret.referenceCount++;
	      return ret;
	    }

	    ret = this.aliases[name] = this.source.wrap(name);
	    ret.aliasable = true;
	    ret.referenceCount = 1;

	    return ret;
	  },

	  setupHelper: function setupHelper(paramSize, name, blockHelper) {
	    var params = [],
	        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);
	    var foundHelper = this.nameLookup('helpers', name, 'helper'),
	        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : {}');

	    return {
	      params: params,
	      paramsInit: paramsInit,
	      name: foundHelper,
	      callParams: [callContext].concat(params)
	    };
	  },

	  setupParams: function setupParams(helper, paramSize, params) {
	    var options = {},
	        contexts = [],
	        types = [],
	        ids = [],
	        objectArgs = !params,
	        param = undefined;

	    if (objectArgs) {
	      params = [];
	    }

	    options.name = this.quotedString(helper);
	    options.hash = this.popStack();

	    if (this.trackIds) {
	      options.hashIds = this.popStack();
	    }
	    if (this.stringParams) {
	      options.hashTypes = this.popStack();
	      options.hashContexts = this.popStack();
	    }

	    var inverse = this.popStack(),
	        program = this.popStack();

	    // Avoid setting fn and inverse if neither are set. This allows
	    // helpers to do a check for `if (options.fn)`
	    if (program || inverse) {
	      options.fn = program || 'container.noop';
	      options.inverse = inverse || 'container.noop';
	    }

	    // The parameters go on to the stack in order (making sure that they are evaluated in order)
	    // so we need to pop them off the stack in reverse order
	    var i = paramSize;
	    while (i--) {
	      param = this.popStack();
	      params[i] = param;

	      if (this.trackIds) {
	        ids[i] = this.popStack();
	      }
	      if (this.stringParams) {
	        types[i] = this.popStack();
	        contexts[i] = this.popStack();
	      }
	    }

	    if (objectArgs) {
	      options.args = this.source.generateArray(params);
	    }

	    if (this.trackIds) {
	      options.ids = this.source.generateArray(ids);
	    }
	    if (this.stringParams) {
	      options.types = this.source.generateArray(types);
	      options.contexts = this.source.generateArray(contexts);
	    }

	    if (this.options.data) {
	      options.data = 'data';
	    }
	    if (this.useBlockParams) {
	      options.blockParams = 'blockParams';
	    }
	    return options;
	  },

	  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {
	    var options = this.setupParams(helper, paramSize, params);
	    options = this.objectLiteral(options);
	    if (useRegister) {
	      this.useRegister('options');
	      params.push('options');
	      return ['options=', options];
	    } else if (params) {
	      params.push(options);
	      return '';
	    } else {
	      return options;
	    }
	  }
	};

	(function () {
	  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');

	  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};

	  for (var i = 0, l = reservedWords.length; i < l; i++) {
	    compilerWords[reservedWords[i]] = true;
	  }
	})();

	JavaScriptCompiler.isValidJavaScriptVariableName = function (name) {
	  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);
	};

	function strictLookup(requireTerminal, compiler, parts, type) {
	  var stack = compiler.popStack(),
	      i = 0,
	      len = parts.length;
	  if (requireTerminal) {
	    len--;
	  }

	  for (; i < len; i++) {
	    stack = compiler.nameLookup(stack, parts[i], type);
	  }

	  if (requireTerminal) {
	    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ')'];
	  } else {
	    return stack;
	  }
	}

	exports['default'] = JavaScriptCompiler;
	module.exports = exports['default'];

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* global define */
	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(5);

	var SourceNode = undefined;

	try {
	  /* istanbul ignore next */
	  if (false) {
	    // We don't support this in AMD environments. For these environments, we asusme that
	    // they are running on the browser and thus have no need for the source-map library.
	    var SourceMap = require('source-map');
	    SourceNode = SourceMap.SourceNode;
	  }
	} catch (err) {}
	/* NOP */

	/* istanbul ignore if: tested but not covered in istanbul due to dist build  */
	if (!SourceNode) {
	  SourceNode = function (line, column, srcFile, chunks) {
	    this.src = '';
	    if (chunks) {
	      this.add(chunks);
	    }
	  };
	  /* istanbul ignore next */
	  SourceNode.prototype = {
	    add: function add(chunks) {
	      if (_utils.isArray(chunks)) {
	        chunks = chunks.join('');
	      }
	      this.src += chunks;
	    },
	    prepend: function prepend(chunks) {
	      if (_utils.isArray(chunks)) {
	        chunks = chunks.join('');
	      }
	      this.src = chunks + this.src;
	    },
	    toStringWithSourceMap: function toStringWithSourceMap() {
	      return { code: this.toString() };
	    },
	    toString: function toString() {
	      return this.src;
	    }
	  };
	}

	function castChunk(chunk, codeGen, loc) {
	  if (_utils.isArray(chunk)) {
	    var ret = [];

	    for (var i = 0, len = chunk.length; i < len; i++) {
	      ret.push(codeGen.wrap(chunk[i], loc));
	    }
	    return ret;
	  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {
	    // Handle primitives that the SourceNode will throw up on
	    return chunk + '';
	  }
	  return chunk;
	}

	function CodeGen(srcFile) {
	  this.srcFile = srcFile;
	  this.source = [];
	}

	CodeGen.prototype = {
	  isEmpty: function isEmpty() {
	    return !this.source.length;
	  },
	  prepend: function prepend(source, loc) {
	    this.source.unshift(this.wrap(source, loc));
	  },
	  push: function push(source, loc) {
	    this.source.push(this.wrap(source, loc));
	  },

	  merge: function merge() {
	    var source = this.empty();
	    this.each(function (line) {
	      source.add(['  ', line, '\n']);
	    });
	    return source;
	  },

	  each: function each(iter) {
	    for (var i = 0, len = this.source.length; i < len; i++) {
	      iter(this.source[i]);
	    }
	  },

	  empty: function empty() {
	    var loc = this.currentLocation || { start: {} };
	    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);
	  },
	  wrap: function wrap(chunk) {
	    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];

	    if (chunk instanceof SourceNode) {
	      return chunk;
	    }

	    chunk = castChunk(chunk, this, loc);

	    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);
	  },

	  functionCall: function functionCall(fn, type, params) {
	    params = this.generateList(params);
	    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);
	  },

	  quotedString: function quotedString(str) {
	    return '"' + (str + '').replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\u2028/g, '\\u2028') // Per Ecma-262 7.3 + 7.8.4
	    .replace(/\u2029/g, '\\u2029') + '"';
	  },

	  objectLiteral: function objectLiteral(obj) {
	    var pairs = [];

	    for (var key in obj) {
	      if (obj.hasOwnProperty(key)) {
	        var value = castChunk(obj[key], this);
	        if (value !== 'undefined') {
	          pairs.push([this.quotedString(key), ':', value]);
	        }
	      }
	    }

	    var ret = this.generateList(pairs);
	    ret.prepend('{');
	    ret.add('}');
	    return ret;
	  },

	  generateList: function generateList(entries) {
	    var ret = this.empty();

	    for (var i = 0, len = entries.length; i < len; i++) {
	      if (i) {
	        ret.add(',');
	      }

	      ret.add(castChunk(entries[i], this));
	    }

	    return ret;
	  },

	  generateArray: function generateArray(entries) {
	    var ret = this.generateList(entries);
	    ret.prepend('[');
	    ret.add(']');

	    return ret;
	  }
	};

	exports['default'] = CodeGen;
	module.exports = exports['default'];

/***/ }
/******/ ])
});
;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;( function( factory ) {
	if ( true ) {

		// AMD. Register as an anonymous module.
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(2) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {

		// Browser globals
		factory( jQuery );
	}
} ( function( $ ) {

$.ui = $.ui || {};

return $.ui.version = "1.12.0";

} ) );


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery UI Widget 1.12.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Widget
//>>group: Core
//>>description: Provides a factory for creating stateful widgets with a common API.
//>>docs: http://api.jqueryui.com/jQuery.widget/
//>>demos: http://jqueryui.com/widget/

( function( factory ) {
	if ( true ) {

		// AMD. Register as an anonymous module.
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(2), __webpack_require__(106) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {

		// Browser globals
		factory( jQuery );
	}
}( function( $ ) {

var widgetUuid = 0;
var widgetSlice = Array.prototype.slice;

$.cleanData = ( function( orig ) {
	return function( elems ) {
		var events, elem, i;
		for ( i = 0; ( elem = elems[ i ] ) != null; i++ ) {
			try {

				// Only trigger remove when necessary to save time
				events = $._data( elem, "events" );
				if ( events && events.remove ) {
					$( elem ).triggerHandler( "remove" );
				}

			// Http://bugs.jquery.com/ticket/8235
			} catch ( e ) {}
		}
		orig( elems );
	};
} )( $.cleanData );

$.widget = function( name, base, prototype ) {
	var existingConstructor, constructor, basePrototype;

	// ProxiedPrototype allows the provided prototype to remain unmodified
	// so that it can be used as a mixin for multiple widgets (#8876)
	var proxiedPrototype = {};

	var namespace = name.split( "." )[ 0 ];
	name = name.split( "." )[ 1 ];
	var fullName = namespace + "-" + name;

	if ( !prototype ) {
		prototype = base;
		base = $.Widget;
	}

	if ( $.isArray( prototype ) ) {
		prototype = $.extend.apply( null, [ {} ].concat( prototype ) );
	}

	// Create selector for plugin
	$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {
		return !!$.data( elem, fullName );
	};

	$[ namespace ] = $[ namespace ] || {};
	existingConstructor = $[ namespace ][ name ];
	constructor = $[ namespace ][ name ] = function( options, element ) {

		// Allow instantiation without "new" keyword
		if ( !this._createWidget ) {
			return new constructor( options, element );
		}

		// Allow instantiation without initializing for simple inheritance
		// must use "new" keyword (the code above always passes args)
		if ( arguments.length ) {
			this._createWidget( options, element );
		}
	};

	// Extend with the existing constructor to carry over any static properties
	$.extend( constructor, existingConstructor, {
		version: prototype.version,

		// Copy the object used to create the prototype in case we need to
		// redefine the widget later
		_proto: $.extend( {}, prototype ),

		// Track widgets that inherit from this widget in case this widget is
		// redefined after a widget inherits from it
		_childConstructors: []
	} );

	basePrototype = new base();

	// We need to make the options hash a property directly on the new instance
	// otherwise we'll modify the options hash on the prototype that we're
	// inheriting from
	basePrototype.options = $.widget.extend( {}, basePrototype.options );
	$.each( prototype, function( prop, value ) {
		if ( !$.isFunction( value ) ) {
			proxiedPrototype[ prop ] = value;
			return;
		}
		proxiedPrototype[ prop ] = ( function() {
			function _super() {
				return base.prototype[ prop ].apply( this, arguments );
			}

			function _superApply( args ) {
				return base.prototype[ prop ].apply( this, args );
			}

			return function() {
				var __super = this._super;
				var __superApply = this._superApply;
				var returnValue;

				this._super = _super;
				this._superApply = _superApply;

				returnValue = value.apply( this, arguments );

				this._super = __super;
				this._superApply = __superApply;

				return returnValue;
			};
		} )();
	} );
	constructor.prototype = $.widget.extend( basePrototype, {

		// TODO: remove support for widgetEventPrefix
		// always use the name + a colon as the prefix, e.g., draggable:start
		// don't prefix for widgets that aren't DOM-based
		widgetEventPrefix: existingConstructor ? ( basePrototype.widgetEventPrefix || name ) : name
	}, proxiedPrototype, {
		constructor: constructor,
		namespace: namespace,
		widgetName: name,
		widgetFullName: fullName
	} );

	// If this widget is being redefined then we need to find all widgets that
	// are inheriting from it and redefine all of them so that they inherit from
	// the new version of this widget. We're essentially trying to replace one
	// level in the prototype chain.
	if ( existingConstructor ) {
		$.each( existingConstructor._childConstructors, function( i, child ) {
			var childPrototype = child.prototype;

			// Redefine the child widget using the same prototype that was
			// originally used, but inherit from the new version of the base
			$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor,
				child._proto );
		} );

		// Remove the list of existing child constructors from the old constructor
		// so the old child constructors can be garbage collected
		delete existingConstructor._childConstructors;
	} else {
		base._childConstructors.push( constructor );
	}

	$.widget.bridge( name, constructor );

	return constructor;
};

$.widget.extend = function( target ) {
	var input = widgetSlice.call( arguments, 1 );
	var inputIndex = 0;
	var inputLength = input.length;
	var key;
	var value;

	for ( ; inputIndex < inputLength; inputIndex++ ) {
		for ( key in input[ inputIndex ] ) {
			value = input[ inputIndex ][ key ];
			if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {

				// Clone objects
				if ( $.isPlainObject( value ) ) {
					target[ key ] = $.isPlainObject( target[ key ] ) ?
						$.widget.extend( {}, target[ key ], value ) :

						// Don't extend strings, arrays, etc. with objects
						$.widget.extend( {}, value );

				// Copy everything else by reference
				} else {
					target[ key ] = value;
				}
			}
		}
	}
	return target;
};

$.widget.bridge = function( name, object ) {
	var fullName = object.prototype.widgetFullName || name;
	$.fn[ name ] = function( options ) {
		var isMethodCall = typeof options === "string";
		var args = widgetSlice.call( arguments, 1 );
		var returnValue = this;

		if ( isMethodCall ) {
			this.each( function() {
				var methodValue;
				var instance = $.data( this, fullName );

				if ( options === "instance" ) {
					returnValue = instance;
					return false;
				}

				if ( !instance ) {
					return $.error( "cannot call methods on " + name +
						" prior to initialization; " +
						"attempted to call method '" + options + "'" );
				}

				if ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === "_" ) {
					return $.error( "no such method '" + options + "' for " + name +
						" widget instance" );
				}

				methodValue = instance[ options ].apply( instance, args );

				if ( methodValue !== instance && methodValue !== undefined ) {
					returnValue = methodValue && methodValue.jquery ?
						returnValue.pushStack( methodValue.get() ) :
						methodValue;
					return false;
				}
			} );
		} else {

			// Allow multiple hashes to be passed on init
			if ( args.length ) {
				options = $.widget.extend.apply( null, [ options ].concat( args ) );
			}

			this.each( function() {
				var instance = $.data( this, fullName );
				if ( instance ) {
					instance.option( options || {} );
					if ( instance._init ) {
						instance._init();
					}
				} else {
					$.data( this, fullName, new object( options, this ) );
				}
			} );
		}

		return returnValue;
	};
};

$.Widget = function( /* options, element */ ) {};
$.Widget._childConstructors = [];

$.Widget.prototype = {
	widgetName: "widget",
	widgetEventPrefix: "",
	defaultElement: "<div>",

	options: {
		classes: {},
		disabled: false,

		// Callbacks
		create: null
	},

	_createWidget: function( options, element ) {
		element = $( element || this.defaultElement || this )[ 0 ];
		this.element = $( element );
		this.uuid = widgetUuid++;
		this.eventNamespace = "." + this.widgetName + this.uuid;

		this.bindings = $();
		this.hoverable = $();
		this.focusable = $();
		this.classesElementLookup = {};

		if ( element !== this ) {
			$.data( element, this.widgetFullName, this );
			this._on( true, this.element, {
				remove: function( event ) {
					if ( event.target === element ) {
						this.destroy();
					}
				}
			} );
			this.document = $( element.style ?

				// Element within the document
				element.ownerDocument :

				// Element is window or document
				element.document || element );
			this.window = $( this.document[ 0 ].defaultView || this.document[ 0 ].parentWindow );
		}

		this.options = $.widget.extend( {},
			this.options,
			this._getCreateOptions(),
			options );

		this._create();

		if ( this.options.disabled ) {
			this._setOptionDisabled( this.options.disabled );
		}

		this._trigger( "create", null, this._getCreateEventData() );
		this._init();
	},

	_getCreateOptions: function() {
		return {};
	},

	_getCreateEventData: $.noop,

	_create: $.noop,

	_init: $.noop,

	destroy: function() {
		var that = this;

		this._destroy();
		$.each( this.classesElementLookup, function( key, value ) {
			that._removeClass( value, key );
		} );

		// We can probably remove the unbind calls in 2.0
		// all event bindings should go through this._on()
		this.element
			.off( this.eventNamespace )
			.removeData( this.widgetFullName );
		this.widget()
			.off( this.eventNamespace )
			.removeAttr( "aria-disabled" );

		// Clean up events and states
		this.bindings.off( this.eventNamespace );
	},

	_destroy: $.noop,

	widget: function() {
		return this.element;
	},

	option: function( key, value ) {
		var options = key;
		var parts;
		var curOption;
		var i;

		if ( arguments.length === 0 ) {

			// Don't return a reference to the internal hash
			return $.widget.extend( {}, this.options );
		}

		if ( typeof key === "string" ) {

			// Handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
			options = {};
			parts = key.split( "." );
			key = parts.shift();
			if ( parts.length ) {
				curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );
				for ( i = 0; i < parts.length - 1; i++ ) {
					curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};
					curOption = curOption[ parts[ i ] ];
				}
				key = parts.pop();
				if ( arguments.length === 1 ) {
					return curOption[ key ] === undefined ? null : curOption[ key ];
				}
				curOption[ key ] = value;
			} else {
				if ( arguments.length === 1 ) {
					return this.options[ key ] === undefined ? null : this.options[ key ];
				}
				options[ key ] = value;
			}
		}

		this._setOptions( options );

		return this;
	},

	_setOptions: function( options ) {
		var key;

		for ( key in options ) {
			this._setOption( key, options[ key ] );
		}

		return this;
	},

	_setOption: function( key, value ) {
		if ( key === "classes" ) {
			this._setOptionClasses( value );
		}

		this.options[ key ] = value;

		if ( key === "disabled" ) {
			this._setOptionDisabled( value );
		}

		return this;
	},

	_setOptionClasses: function( value ) {
		var classKey, elements, currentElements;

		for ( classKey in value ) {
			currentElements = this.classesElementLookup[ classKey ];
			if ( value[ classKey ] === this.options.classes[ classKey ] ||
					!currentElements ||
					!currentElements.length ) {
				continue;
			}

			// We are doing this to create a new jQuery object because the _removeClass() call
			// on the next line is going to destroy the reference to the current elements being
			// tracked. We need to save a copy of this collection so that we can add the new classes
			// below.
			elements = $( currentElements.get() );
			this._removeClass( currentElements, classKey );

			// We don't use _addClass() here, because that uses this.options.classes
			// for generating the string of classes. We want to use the value passed in from
			// _setOption(), this is the new value of the classes option which was passed to
			// _setOption(). We pass this value directly to _classes().
			elements.addClass( this._classes( {
				element: elements,
				keys: classKey,
				classes: value,
				add: true
			} ) );
		}
	},

	_setOptionDisabled: function( value ) {
		this._toggleClass( this.widget(), this.widgetFullName + "-disabled", null, !!value );

		// If the widget is becoming disabled, then nothing is interactive
		if ( value ) {
			this._removeClass( this.hoverable, null, "ui-state-hover" );
			this._removeClass( this.focusable, null, "ui-state-focus" );
		}
	},

	enable: function() {
		return this._setOptions( { disabled: false } );
	},

	disable: function() {
		return this._setOptions( { disabled: true } );
	},

	_classes: function( options ) {
		var full = [];
		var that = this;

		options = $.extend( {
			element: this.element,
			classes: this.options.classes || {}
		}, options );

		function processClassString( classes, checkOption ) {
			var current, i;
			for ( i = 0; i < classes.length; i++ ) {
				current = that.classesElementLookup[ classes[ i ] ] || $();
				if ( options.add ) {
					current = $( $.unique( current.get().concat( options.element.get() ) ) );
				} else {
					current = $( current.not( options.element ).get() );
				}
				that.classesElementLookup[ classes[ i ] ] = current;
				full.push( classes[ i ] );
				if ( checkOption && options.classes[ classes[ i ] ] ) {
					full.push( options.classes[ classes[ i ] ] );
				}
			}
		}

		if ( options.keys ) {
			processClassString( options.keys.match( /\S+/g ) || [], true );
		}
		if ( options.extra ) {
			processClassString( options.extra.match( /\S+/g ) || [] );
		}

		return full.join( " " );
	},

	_removeClass: function( element, keys, extra ) {
		return this._toggleClass( element, keys, extra, false );
	},

	_addClass: function( element, keys, extra ) {
		return this._toggleClass( element, keys, extra, true );
	},

	_toggleClass: function( element, keys, extra, add ) {
		add = ( typeof add === "boolean" ) ? add : extra;
		var shift = ( typeof element === "string" || element === null ),
			options = {
				extra: shift ? keys : extra,
				keys: shift ? element : keys,
				element: shift ? this.element : element,
				add: add
			};
		options.element.toggleClass( this._classes( options ), add );
		return this;
	},

	_on: function( suppressDisabledCheck, element, handlers ) {
		var delegateElement;
		var instance = this;

		// No suppressDisabledCheck flag, shuffle arguments
		if ( typeof suppressDisabledCheck !== "boolean" ) {
			handlers = element;
			element = suppressDisabledCheck;
			suppressDisabledCheck = false;
		}

		// No element argument, shuffle and use this.element
		if ( !handlers ) {
			handlers = element;
			element = this.element;
			delegateElement = this.widget();
		} else {
			element = delegateElement = $( element );
			this.bindings = this.bindings.add( element );
		}

		$.each( handlers, function( event, handler ) {
			function handlerProxy() {

				// Allow widgets to customize the disabled handling
				// - disabled as an array instead of boolean
				// - disabled class as method for disabling individual parts
				if ( !suppressDisabledCheck &&
						( instance.options.disabled === true ||
						$( this ).hasClass( "ui-state-disabled" ) ) ) {
					return;
				}
				return ( typeof handler === "string" ? instance[ handler ] : handler )
					.apply( instance, arguments );
			}

			// Copy the guid so direct unbinding works
			if ( typeof handler !== "string" ) {
				handlerProxy.guid = handler.guid =
					handler.guid || handlerProxy.guid || $.guid++;
			}

			var match = event.match( /^([\w:-]*)\s*(.*)$/ );
			var eventName = match[ 1 ] + instance.eventNamespace;
			var selector = match[ 2 ];

			if ( selector ) {
				delegateElement.on( eventName, selector, handlerProxy );
			} else {
				element.on( eventName, handlerProxy );
			}
		} );
	},

	_off: function( element, eventName ) {
		eventName = ( eventName || "" ).split( " " ).join( this.eventNamespace + " " ) +
			this.eventNamespace;
		element.off( eventName ).off( eventName );

		// Clear the stack to avoid memory leaks (#10056)
		this.bindings = $( this.bindings.not( element ).get() );
		this.focusable = $( this.focusable.not( element ).get() );
		this.hoverable = $( this.hoverable.not( element ).get() );
	},

	_delay: function( handler, delay ) {
		function handlerProxy() {
			return ( typeof handler === "string" ? instance[ handler ] : handler )
				.apply( instance, arguments );
		}
		var instance = this;
		return setTimeout( handlerProxy, delay || 0 );
	},

	_hoverable: function( element ) {
		this.hoverable = this.hoverable.add( element );
		this._on( element, {
			mouseenter: function( event ) {
				this._addClass( $( event.currentTarget ), null, "ui-state-hover" );
			},
			mouseleave: function( event ) {
				this._removeClass( $( event.currentTarget ), null, "ui-state-hover" );
			}
		} );
	},

	_focusable: function( element ) {
		this.focusable = this.focusable.add( element );
		this._on( element, {
			focusin: function( event ) {
				this._addClass( $( event.currentTarget ), null, "ui-state-focus" );
			},
			focusout: function( event ) {
				this._removeClass( $( event.currentTarget ), null, "ui-state-focus" );
			}
		} );
	},

	_trigger: function( type, event, data ) {
		var prop, orig;
		var callback = this.options[ type ];

		data = data || {};
		event = $.Event( event );
		event.type = ( type === this.widgetEventPrefix ?
			type :
			this.widgetEventPrefix + type ).toLowerCase();

		// The original event may come from any element
		// so we need to reset the target on the new event
		event.target = this.element[ 0 ];

		// Copy original event properties over to the new event
		orig = event.originalEvent;
		if ( orig ) {
			for ( prop in orig ) {
				if ( !( prop in event ) ) {
					event[ prop ] = orig[ prop ];
				}
			}
		}

		this.element.trigger( event, data );
		return !( $.isFunction( callback ) &&
			callback.apply( this.element[ 0 ], [ event ].concat( data ) ) === false ||
			event.isDefaultPrevented() );
	}
};

$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {
	$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {
		if ( typeof options === "string" ) {
			options = { effect: options };
		}

		var hasOptions;
		var effectName = !options ?
			method :
			options === true || typeof options === "number" ?
				defaultEffect :
				options.effect || defaultEffect;

		options = options || {};
		if ( typeof options === "number" ) {
			options = { duration: options };
		}

		hasOptions = !$.isEmptyObject( options );
		options.complete = callback;

		if ( options.delay ) {
			element.delay( options.delay );
		}

		if ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {
			element[ method ]( options );
		} else if ( effectName !== method && element[ effectName ] ) {
			element[ effectName ]( options.duration, options.easing, callback );
		} else {
			element.queue( function( next ) {
				$( this )[ method ]();
				if ( callback ) {
					callback.call( element[ 0 ] );
				}
				next();
			} );
		}
	};
} );

return $.widget;

} ) );


/***/ }),
/* 108 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ })
/******/ ]);
//# sourceMappingURL=bt4-bundle.js.map